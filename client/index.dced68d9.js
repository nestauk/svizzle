import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, t as text, h as head_selector, b as detach_dev, c as claim_space, f as claim_element, g as children, j as claim_text, k as attr_dev, l as src_url_equal, m as add_location, n as insert_hydration_dev, o as append_hydration_dev, p as noop } from './client.0c002240.js';

/* src/routes/index.svelte generated by Svelte v3.55.1 */

const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	let t0;
	let iframe;
	let t1;
	let iframe_src_value;

	const block = {
		c: function create() {
			t0 = space();
			iframe = element("iframe");
			t1 = text("Loading...");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = head_selector('svelte-ai3r08', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);

			iframe = claim_element(nodes, "IFRAME", {
				frameborder: true,
				height: true,
				marginheight: true,
				marginwidth: true,
				src: true,
				title: true,
				width: true
			});

			var iframe_nodes = children(iframe);
			t1 = claim_text(iframe_nodes, "Loading...");
			iframe_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Svizzle Tools";
			attr_dev(iframe, "frameborder", "0");
			attr_dev(iframe, "height", "100%");
			attr_dev(iframe, "marginheight", "0");
			attr_dev(iframe, "marginwidth", "0");
			if (!src_url_equal(iframe.src, iframe_src_value = "jsDocBuild/")) attr_dev(iframe, "src", iframe_src_value);
			attr_dev(iframe, "title", "jsdoc");
			attr_dev(iframe, "width", "100%");
			add_location(iframe, file, 4, 0, 60);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, iframe, anchor);
			append_hydration_dev(iframe, t1);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(iframe);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Routes', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export { Routes as default };
