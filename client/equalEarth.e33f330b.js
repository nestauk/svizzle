import { p as pipe, m as mapWith, u as updateKey, h as has } from './defaultLocale.f3c5fc93.js';

var type = "Topology";
var transform$1 = {
	scale: [
		0.00001,
		0.00001
	],
	translate: [
		-63.15176,
		-21.38696
	]
};
var objects = {
	NUTS: {
		type: "GeometryCollection",
		geometries: [
			{
				type: "Polygon",
				arcs: [
					[
						4,
						5,
						6,
						7,
						8,
						9
					]
				],
				id: "UKD4",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKD4",
					CNTR_CODE: "UK",
					NUTS_NAME: "Lancashire",
					FID: "UKD4"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						10,
						11,
						12,
						13,
						14
					]
				],
				id: "UKC1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKC1",
					CNTR_CODE: "UK",
					NUTS_NAME: "Tees Valley and Durham",
					FID: "UKC1"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							15,
							-11,
							-15,
							16,
							17,
							18
						]
					],
					[
						[
							19
						]
					],
					[
						[
							20
						]
					]
				],
				id: "UKC2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKC2",
					CNTR_CODE: "UK",
					NUTS_NAME: "Northumberland and Tyne and Wear",
					FID: "UKC2"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-14,
							21,
							-10,
							22,
							23,
							-17
						]
					],
					[
						[
							24
						]
					],
					[
						[
							25
						]
					]
				],
				id: "UKD1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKD1",
					CNTR_CODE: "UK",
					NUTS_NAME: "Cumbria",
					FID: "UKD1"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						26,
						27,
						28,
						29,
						-7
					]
				],
				id: "UKD3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKD3",
					CNTR_CODE: "UK",
					NUTS_NAME: "Greater Manchester",
					FID: "UKD3"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-29,
						30,
						31,
						32,
						33,
						34,
						35,
						36
					]
				],
				id: "UKD6",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKD6",
					CNTR_CODE: "UK",
					NUTS_NAME: "Cheshire",
					FID: "UKD6"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-8,
							-30,
							-37,
							37
						]
					],
					[
						[
							-35,
							38
						]
					]
				],
				id: "UKD7",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKD7",
					CNTR_CODE: "UK",
					NUTS_NAME: "Merseyside",
					FID: "UKD7"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						39,
						40,
						41,
						42,
						43
					]
				],
				id: "UKE1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKE1",
					CNTR_CODE: "UK",
					NUTS_NAME: "East Yorkshire and Northern Lincolnshire",
					FID: "UKE1"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						44,
						-44,
						45,
						46,
						-5,
						-22,
						-13
					]
				],
				id: "UKE2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKE2",
					CNTR_CODE: "UK",
					NUTS_NAME: "North Yorkshire",
					FID: "UKE2"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-43,
						47,
						48,
						-46
					]
				],
				id: "UKE3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKE3",
					CNTR_CODE: "UK",
					NUTS_NAME: "South Yorkshire",
					FID: "UKE3"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-47,
						-49,
						49,
						-27,
						-6
					]
				],
				id: "UKE4",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKE4",
					CNTR_CODE: "UK",
					NUTS_NAME: "West Yorkshire",
					FID: "UKE4"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-48,
						-42,
						50,
						51,
						52,
						-31,
						-28,
						-50
					]
				],
				id: "UKF1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKF1",
					CNTR_CODE: "UK",
					NUTS_NAME: "Derbyshire and Nottinghamshire",
					FID: "UKF1"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						53,
						54,
						55,
						56,
						57,
						58,
						-52,
						59
					]
				],
				id: "UKF2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKF2",
					CNTR_CODE: "UK",
					NUTS_NAME: "Leicestershire, Rutland and Northamptonshire",
					FID: "UKF2"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						60,
						-54,
						-60,
						-51,
						-41,
						61
					]
				],
				id: "UKF3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKF3",
					CNTR_CODE: "UK",
					NUTS_NAME: "Lincolnshire",
					FID: "UKF3"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-58,
						62,
						63,
						64,
						65,
						66,
						67
					]
				],
				id: "UKG1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKG1",
					CNTR_CODE: "UK",
					NUTS_NAME: "Herefordshire, Worcestershire and Warwickshire",
					FID: "UKG1"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-59,
						-68,
						68,
						-66,
						69,
						-32,
						-53
					]
				],
				id: "UKG2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKG2",
					CNTR_CODE: "UK",
					NUTS_NAME: "Shropshire and Staffordshire",
					FID: "UKG2"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-69,
						-67
					]
				],
				id: "UKG3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKG3",
					CNTR_CODE: "UK",
					NUTS_NAME: "West Midlands",
					FID: "UKG3"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						70,
						71,
						72,
						-55,
						-61,
						73
					]
				],
				id: "UKH1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKH1",
					CNTR_CODE: "UK",
					NUTS_NAME: "East Anglia",
					FID: "UKH1"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-73,
						74,
						75,
						76,
						77,
						-56
					]
				],
				id: "UKH2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKH2",
					CNTR_CODE: "UK",
					NUTS_NAME: "Bedfordshire and Hertfordshire",
					FID: "UKH2"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-72,
							78,
							79,
							-75
						]
					],
					[
						[
							80
						]
					]
				],
				id: "UKH3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKH3",
					CNTR_CODE: "UK",
					NUTS_NAME: "Essex",
					FID: "UKH3"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							81,
							82,
							83,
							84
						]
					],
					[
						[
							85,
							86,
							87,
							88
						]
					]
				],
				id: "UKI3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKI3",
					CNTR_CODE: "UK",
					NUTS_NAME: "Inner London - West",
					FID: "UKI3"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							89,
							90,
							-82,
							-85,
							91,
							92
						]
					],
					[
						[
							93,
							-89,
							94,
							95,
							96
						]
					]
				],
				id: "UKI4",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKI4",
					CNTR_CODE: "UK",
					NUTS_NAME: "Inner London - East",
					FID: "UKI4"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							97,
							98,
							99,
							100,
							101
						]
					],
					[
						[
							102
						]
					],
					[
						[
							103
						]
					],
					[
						[
							104
						]
					],
					[
						[
							105
						]
					],
					[
						[
							106
						]
					],
					[
						[
							107
						]
					],
					[
						[
							108
						]
					],
					[
						[
							109
						]
					],
					[
						[
							110
						]
					],
					[
						[
							111
						]
					],
					[
						[
							112
						]
					],
					[
						[
							113
						]
					],
					[
						[
							114
						]
					],
					[
						[
							115
						]
					],
					[
						[
							116
						]
					],
					[
						[
							117
						]
					],
					[
						[
							118
						]
					],
					[
						[
							119
						]
					],
					[
						[
							120
						]
					],
					[
						[
							121
						]
					],
					[
						[
							122
						]
					],
					[
						[
							123
						]
					],
					[
						[
							124
						]
					],
					[
						[
							125
						]
					],
					[
						[
							126
						]
					],
					[
						[
							127
						]
					],
					[
						[
							128
						]
					],
					[
						[
							129
						]
					],
					[
						[
							130
						]
					],
					[
						[
							131
						]
					],
					[
						[
							132
						]
					],
					[
						[
							133
						]
					],
					[
						[
							134
						]
					],
					[
						[
							135
						]
					],
					[
						[
							136
						]
					],
					[
						[
							137
						]
					],
					[
						[
							138
						]
					],
					[
						[
							139
						]
					],
					[
						[
							140
						]
					],
					[
						[
							141
						]
					],
					[
						[
							142
						]
					],
					[
						[
							143
						]
					],
					[
						[
							144
						]
					],
					[
						[
							145
						]
					],
					[
						[
							146
						]
					],
					[
						[
							147
						]
					],
					[
						[
							148
						]
					],
					[
						[
							149
						]
					],
					[
						[
							150
						]
					],
					[
						[
							151
						]
					],
					[
						[
							152
						]
					],
					[
						[
							153
						]
					],
					[
						[
							154
						]
					],
					[
						[
							155
						]
					],
					[
						[
							156
						]
					],
					[
						[
							157
						]
					],
					[
						[
							158
						]
					],
					[
						[
							159
						]
					],
					[
						[
							160
						]
					],
					[
						[
							161
						]
					],
					[
						[
							162
						]
					],
					[
						[
							163
						]
					],
					[
						[
							164
						]
					],
					[
						[
							165
						]
					],
					[
						[
							166
						]
					],
					[
						[
							167
						]
					],
					[
						[
							168
						]
					],
					[
						[
							169
						]
					],
					[
						[
							170
						]
					],
					[
						[
							171
						]
					],
					[
						[
							172
						]
					],
					[
						[
							173
						]
					],
					[
						[
							174
						]
					],
					[
						[
							175
						]
					],
					[
						[
							176
						]
					],
					[
						[
							177
						]
					],
					[
						[
							178
						]
					],
					[
						[
							179
						]
					],
					[
						[
							180
						]
					],
					[
						[
							181
						]
					],
					[
						[
							182
						]
					],
					[
						[
							183
						]
					],
					[
						[
							184
						]
					],
					[
						[
							185
						]
					],
					[
						[
							186
						]
					],
					[
						[
							187
						]
					],
					[
						[
							188
						]
					],
					[
						[
							189
						]
					],
					[
						[
							190
						]
					],
					[
						[
							191
						]
					],
					[
						[
							192
						]
					],
					[
						[
							193
						]
					],
					[
						[
							194
						]
					],
					[
						[
							195
						]
					],
					[
						[
							196
						]
					],
					[
						[
							197
						]
					],
					[
						[
							198
						]
					],
					[
						[
							199
						]
					],
					[
						[
							200
						]
					],
					[
						[
							201
						]
					],
					[
						[
							202
						]
					],
					[
						[
							203
						]
					],
					[
						[
							204
						]
					],
					[
						[
							205
						]
					],
					[
						[
							206
						]
					],
					[
						[
							207
						]
					],
					[
						[
							208
						]
					],
					[
						[
							209
						]
					],
					[
						[
							210
						]
					],
					[
						[
							211
						]
					],
					[
						[
							212
						]
					],
					[
						[
							213
						]
					],
					[
						[
							214
						]
					],
					[
						[
							215
						]
					],
					[
						[
							216
						]
					],
					[
						[
							217
						]
					],
					[
						[
							218
						]
					],
					[
						[
							219
						]
					],
					[
						[
							220
						]
					],
					[
						[
							221
						]
					],
					[
						[
							222
						]
					],
					[
						[
							223
						]
					],
					[
						[
							224
						]
					],
					[
						[
							225
						]
					],
					[
						[
							226
						]
					],
					[
						[
							227
						]
					],
					[
						[
							228
						]
					],
					[
						[
							229
						]
					],
					[
						[
							230
						]
					],
					[
						[
							231
						]
					],
					[
						[
							232
						]
					],
					[
						[
							233
						]
					],
					[
						[
							234
						]
					],
					[
						[
							235
						]
					],
					[
						[
							236
						]
					],
					[
						[
							237
						]
					],
					[
						[
							238
						]
					],
					[
						[
							239
						]
					],
					[
						[
							240
						]
					],
					[
						[
							241
						]
					],
					[
						[
							242
						]
					],
					[
						[
							243
						]
					],
					[
						[
							244
						]
					],
					[
						[
							245
						]
					],
					[
						[
							246
						]
					],
					[
						[
							247
						]
					],
					[
						[
							248
						]
					],
					[
						[
							249
						]
					],
					[
						[
							250
						]
					],
					[
						[
							251
						]
					],
					[
						[
							252
						]
					],
					[
						[
							253
						]
					],
					[
						[
							254
						]
					],
					[
						[
							255
						]
					],
					[
						[
							256
						]
					],
					[
						[
							257
						]
					],
					[
						[
							258
						]
					],
					[
						[
							259
						]
					],
					[
						[
							260
						]
					],
					[
						[
							261
						]
					],
					[
						[
							262
						]
					],
					[
						[
							263
						]
					],
					[
						[
							264
						]
					],
					[
						[
							265
						]
					]
				],
				id: "UKM6",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKM6",
					CNTR_CODE: "UK",
					NUTS_NAME: "Highlands and Islands",
					FID: "UKM6"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-80,
							266,
							-90,
							-93,
							267,
							-76
						]
					],
					[
						[
							268,
							269,
							-96,
							270
						]
					]
				],
				id: "UKI5",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKI5",
					CNTR_CODE: "UK",
					NUTS_NAME: "Outer London - East and North East",
					FID: "UKI5"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-270,
						271,
						272,
						273,
						-86,
						-94,
						-97
					]
				],
				id: "UKI6",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKI6",
					CNTR_CODE: "UK",
					NUTS_NAME: "Outer London - South",
					FID: "UKI6"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-268,
						-92,
						-84,
						274,
						-87,
						-274,
						275,
						276,
						-77
					]
				],
				id: "UKI7",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKI7",
					CNTR_CODE: "UK",
					NUTS_NAME: "Outer London - West and North West",
					FID: "UKI7"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-78,
						-277,
						277,
						278,
						279,
						-63,
						-57
					]
				],
				id: "UKJ1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKJ1",
					CNTR_CODE: "UK",
					NUTS_NAME: "Berkshire, Buckinghamshire and Oxfordshire",
					FID: "UKJ1"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-276,
						-273,
						280,
						281,
						282,
						-278
					]
				],
				id: "UKJ2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKJ2",
					CNTR_CODE: "UK",
					NUTS_NAME: "Surrey, East and West Sussex",
					FID: "UKJ2"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-283,
							283,
							284,
							285,
							-279
						]
					],
					[
						[
							286
						]
					],
					[
						[
							287
						]
					]
				],
				id: "UKJ3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKJ3",
					CNTR_CODE: "UK",
					NUTS_NAME: "Hampshire and Isle of Wight",
					FID: "UKJ3"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							288,
							-281,
							-272,
							-269,
							289
						]
					],
					[
						[
							290
						]
					]
				],
				id: "UKJ4",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKJ4",
					CNTR_CODE: "UK",
					NUTS_NAME: "Kent",
					FID: "UKJ4"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-280,
						-286,
						291,
						292,
						293,
						-64
					]
				],
				id: "UKK1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKK1",
					CNTR_CODE: "UK",
					NUTS_NAME: "Gloucestershire, Wiltshire and Bristol/Bath area",
					FID: "UKK1"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-292,
							-285,
							294,
							295,
							296
						]
					],
					[
						[
							297
						]
					],
					[
						[
							298
						]
					]
				],
				id: "UKK2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKK2",
					CNTR_CODE: "UK",
					NUTS_NAME: "Dorset and Somerset",
					FID: "UKK2"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							299,
							300
						]
					],
					[
						[
							301
						]
					],
					[
						[
							302
						]
					],
					[
						[
							303
						]
					],
					[
						[
							304
						]
					]
				],
				id: "UKK3",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKK3",
					CNTR_CODE: "UK",
					NUTS_NAME: "Cornwall and Isles of Scilly",
					FID: "UKK3"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-296,
							305,
							-301,
							306
						]
					],
					[
						[
							307
						]
					],
					[
						[
							308
						]
					]
				],
				id: "UKK4",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKK4",
					CNTR_CODE: "UK",
					NUTS_NAME: "Devon",
					FID: "UKK4"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							309,
							310,
							311
						]
					],
					[
						[
							312
						]
					],
					[
						[
							313
						]
					],
					[
						[
							314
						]
					],
					[
						[
							315
						]
					],
					[
						[
							316
						]
					],
					[
						[
							317
						]
					]
				],
				id: "UKL1",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKL1",
					CNTR_CODE: "UK",
					NUTS_NAME: "West Wales and The Valleys",
					FID: "UKL1"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-33,
						-70,
						-65,
						-294,
						318,
						-310,
						-312,
						319
					]
				],
				id: "UKL2",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKL2",
					CNTR_CODE: "UK",
					NUTS_NAME: "East Wales",
					FID: "UKL2"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-99,
						320,
						321
					]
				],
				id: "UKM5",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKM5",
					CNTR_CODE: "UK",
					NUTS_NAME: "North Eastern Scotland",
					FID: "UKM5"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						322,
						323,
						324,
						-100,
						-322
					]
				],
				id: "UKM7",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKM7",
					CNTR_CODE: "UK",
					NUTS_NAME: "Eastern Scotland",
					FID: "UKM7"
				}
			},
			{
				type: "Polygon",
				arcs: [
					[
						-325,
						325,
						326,
						-101
					]
				],
				id: "UKM8",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKM8",
					CNTR_CODE: "UK",
					NUTS_NAME: "West Central Scotland",
					FID: "UKM8"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							-18,
							-24,
							327,
							-326,
							-324,
							328
						]
					],
					[
						[
							329
						]
					]
				],
				id: "UKM9",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKM9",
					CNTR_CODE: "UK",
					NUTS_NAME: "Southern Scotland",
					FID: "UKM9"
				}
			},
			{
				type: "MultiPolygon",
				arcs: [
					[
						[
							330,
							-4,
							-1,
							-2,
							331
						],
						[
							-3
						]
					],
					[
						[
							332
						]
					],
					[
						[
							333
						]
					],
					[
						[
							334
						]
					]
				],
				id: "UKN0",
				properties: {
					LEVL_CODE: 2,
					NUTS_ID: "UKN0",
					CNTR_CODE: "UK",
					NUTS_NAME: "Northern Ireland",
					FID: "UKN0"
				}
			}
		]
	}
};
var arcs = [
	[
		[
			5544835,
			7599525
		],
		[
			-8305,
			-2743
		],
		[
			-6357,
			-4403
		],
		[
			-8701,
			-255
		],
		[
			-6227,
			952
		],
		[
			-1658,
			-1811
		],
		[
			-3259,
			-3561
		],
		[
			-11175,
			-2531
		],
		[
			1098,
			-1359
		],
		[
			-217,
			-1427
		],
		[
			5374,
			-3152
		],
		[
			4330,
			-3741
		],
		[
			5159,
			-1243
		],
		[
			2127,
			-1947
		],
		[
			2982,
			-2731
		],
		[
			7921,
			-1843
		],
		[
			1787,
			-6802
		],
		[
			891,
			-881
		],
		[
			3253,
			-1077
		],
		[
			12045,
			196
		],
		[
			1868,
			-1998
		],
		[
			4146,
			-1454
		],
		[
			2020,
			-2415
		],
		[
			3372,
			-629
		],
		[
			2394,
			-1508
		],
		[
			2884,
			878
		],
		[
			4459,
			-956
		],
		[
			3095,
			2393
		],
		[
			3667,
			721
		],
		[
			-734,
			-1500
		],
		[
			3910,
			-121
		],
		[
			-608,
			-1488
		],
		[
			2616,
			518
		],
		[
			4318,
			-1274
		],
		[
			3798,
			799
		],
		[
			2464,
			3040
		],
		[
			529,
			1647
		],
		[
			-608,
			1692
		],
		[
			1742,
			1771
		],
		[
			9199,
			2155
		],
		[
			-80,
			2994
		],
		[
			-2634,
			1621
		],
		[
			-249,
			1196
		],
		[
			-3128,
			1323
		],
		[
			2781,
			1519
		],
		[
			-745,
			2214
		],
		[
			3706,
			207
		],
		[
			3466,
			1433
		],
		[
			5572,
			5250
		],
		[
			3246,
			1313
		],
		[
			10513,
			-3958
		],
		[
			2067,
			-2481
		],
		[
			3198,
			-1764
		],
		[
			606,
			-591
		],
		[
			960,
			-3903
		],
		[
			-1993,
			-1302
		],
		[
			4231,
			-1529
		],
		[
			1731,
			-3672
		],
		[
			2061,
			-1610
		],
		[
			5690,
			-2623
		],
		[
			4047,
			1562
		],
		[
			5305,
			-1938
		],
		[
			1058,
			-2885
		],
		[
			-2410,
			-3261
		],
		[
			837,
			-1908
		],
		[
			-844,
			-1843
		],
		[
			-510,
			-1115
		],
		[
			3483,
			-2824
		],
		[
			3278,
			301
		]
	],
	[
		[
			5589569,
			7645399
		],
		[
			-3237,
			-1517
		],
		[
			-6030,
			-637
		],
		[
			-4159,
			-2718
		],
		[
			-1545,
			-6867
		],
		[
			-3969,
			-2580
		],
		[
			-402,
			-5650
		],
		[
			-3498,
			-4053
		],
		[
			-5485,
			-3279
		],
		[
			-1043,
			-4738
		],
		[
			-9177,
			75
		],
		[
			-10790,
			-3856
		],
		[
			-8046,
			2269
		],
		[
			-2015,
			-761
		],
		[
			-6146,
			-3088
		],
		[
			1129,
			-2664
		],
		[
			5017,
			-2776
		],
		[
			4047,
			-71
		],
		[
			5713,
			-1493
		],
		[
			3836,
			503
		],
		[
			1066,
			-1973
		]
	],
	[
		[
			5586561,
			7552716
		],
		[
			-667,
			-860
		],
		[
			-1941,
			-157
		],
		[
			-704,
			724
		],
		[
			-795,
			-110
		],
		[
			-1083,
			965
		],
		[
			1232,
			535
		],
		[
			1570,
			1496
		],
		[
			1935,
			445
		],
		[
			915,
			-415
		],
		[
			-370,
			-1304
		],
		[
			-1017,
			-590
		],
		[
			925,
			-729
		]
	],
	[
		[
			5655677,
			7543163
		],
		[
			1573,
			1006
		],
		[
			6793,
			133
		],
		[
			3680,
			1668
		],
		[
			1784,
			-652
		],
		[
			1802,
			-659
		],
		[
			4285,
			185
		],
		[
			3181,
			1957
		],
		[
			426,
			3113
		],
		[
			1676,
			-171
		],
		[
			1903,
			-1739
		],
		[
			3205,
			1850
		],
		[
			2389,
			-924
		]
	],
	[
		[
			6069093,
			7561372
		],
		[
			-7534,
			-6787
		],
		[
			-2202,
			-789
		],
		[
			-419,
			-1754
		],
		[
			3919,
			-3573
		],
		[
			4318,
			-1668
		],
		[
			983,
			-380
		],
		[
			16,
			-735
		],
		[
			50,
			-2364
		],
		[
			2127,
			-531
		],
		[
			7578,
			577
		],
		[
			2752,
			-3260
		],
		[
			-576,
			-1017
		],
		[
			512,
			-1067
		],
		[
			2716,
			-188
		],
		[
			3033,
			-1600
		],
		[
			5461,
			402
		],
		[
			886,
			-1527
		],
		[
			2728,
			292
		],
		[
			1287,
			-1477
		],
		[
			547,
			-1506
		],
		[
			5810,
			-1805
		],
		[
			4776,
			-5583
		],
		[
			488,
			-239
		],
		[
			2214,
			-1083
		]
	],
	[
		[
			6110563,
			7523710
		],
		[
			110,
			-1121
		],
		[
			-185,
			-938
		],
		[
			-1433,
			-388
		],
		[
			-706,
			-295
		],
		[
			-5546,
			-2317
		],
		[
			-957,
			-2033
		],
		[
			114,
			-2530
		],
		[
			-3783,
			-2821
		],
		[
			2370,
			-4344
		]
	],
	[
		[
			6100547,
			7506923
		],
		[
			-2058,
			-4058
		],
		[
			-1509,
			-163
		],
		[
			-2471,
			1880
		],
		[
			-2115,
			979
		],
		[
			-3210,
			-1461
		],
		[
			-733,
			-1007
		],
		[
			584,
			-2428
		],
		[
			-769,
			-399
		],
		[
			-1280,
			675
		],
		[
			-1787,
			3982
		],
		[
			-2779,
			-568
		],
		[
			-4365,
			1052
		],
		[
			591,
			-1288
		],
		[
			-1380,
			-2333
		],
		[
			-3929,
			-503
		],
		[
			-2134,
			1739
		],
		[
			-3132,
			-2473
		],
		[
			-4025,
			850
		],
		[
			-5897,
			-2957
		],
		[
			-2493,
			1137
		],
		[
			-2933,
			-1207
		],
		[
			-1455,
			968
		],
		[
			-4825,
			-393
		],
		[
			-484,
			-435
		],
		[
			-2189,
			-1969
		],
		[
			652,
			-1842
		],
		[
			-2296,
			-3942
		]
	],
	[
		[
			6042126,
			7490759
		],
		[
			-3292,
			-643
		],
		[
			-2194,
			1393
		],
		[
			-2980,
			-1745
		],
		[
			-1744,
			-2676
		],
		[
			-5536,
			1992
		],
		[
			20,
			1580
		],
		[
			-3317,
			617
		],
		[
			-2984,
			1824
		],
		[
			-1491,
			46
		],
		[
			-789,
			24
		],
		[
			671,
			-1962
		],
		[
			-830,
			-717
		],
		[
			-6713,
			2568
		],
		[
			444,
			1977
		],
		[
			1524,
			1258
		],
		[
			-907,
			1273
		],
		[
			350,
			1181
		],
		[
			2866,
			2353
		],
		[
			2863,
			527
		],
		[
			521,
			558
		],
		[
			2110,
			2257
		],
		[
			-1162,
			4005
		]
	],
	[
		[
			6019556,
			7508449
		],
		[
			2640,
			2632
		],
		[
			6553,
			888
		],
		[
			2459,
			-702
		],
		[
			-1939,
			1162
		],
		[
			-6234,
			-551
		],
		[
			-4427,
			308
		],
		[
			-4164,
			289
		],
		[
			-4088,
			2087
		],
		[
			-917,
			1782
		],
		[
			943,
			9929
		],
		[
			1132,
			4450
		],
		[
			2448,
			178
		],
		[
			1666,
			-2198
		],
		[
			1179,
			3206
		],
		[
			1801,
			530
		],
		[
			7766,
			1057
		],
		[
			1888,
			1364
		],
		[
			948,
			3604
		],
		[
			-3329,
			47
		],
		[
			-1289,
			3173
		],
		[
			2867,
			3596
		],
		[
			3314,
			1521
		],
		[
			1040,
			477
		],
		[
			2282,
			2721
		],
		[
			-5866,
			6371
		]
	],
	[
		[
			6028229,
			7556370
		],
		[
			3667,
			-26
		],
		[
			3533,
			1930
		],
		[
			5472,
			-950
		],
		[
			1424,
			-1854
		],
		[
			3634,
			-320
		],
		[
			906,
			-80
		],
		[
			4495,
			3593
		],
		[
			6816,
			-263
		],
		[
			10454,
			3838
		],
		[
			463,
			-866
		]
	],
	[
		[
			6159242,
			7626906
		],
		[
			4907,
			-1135
		],
		[
			700,
			-3713
		],
		[
			2196,
			-3344
		],
		[
			5439,
			380
		],
		[
			1211,
			3861
		],
		[
			6744,
			1810
		]
	],
	[
		[
			6180439,
			7624765
		],
		[
			3178,
			-4381
		],
		[
			1124,
			-4036
		],
		[
			2842,
			-2467
		],
		[
			3370,
			-2926
		],
		[
			5699,
			-2342
		],
		[
			-935,
			-2072
		],
		[
			2754,
			-3610
		],
		[
			-1789,
			-1660
		],
		[
			2049,
			-1137
		],
		[
			-3851,
			-2886
		],
		[
			-4870,
			289
		],
		[
			-959,
			-1651
		],
		[
			1012,
			1638
		],
		[
			5140,
			-635
		],
		[
			4333,
			2083
		],
		[
			511,
			2202
		],
		[
			1621,
			1158
		],
		[
			7919,
			-1951
		],
		[
			5791,
			-2405
		],
		[
			6349,
			-499
		],
		[
			3942,
			-1584
		],
		[
			576,
			-69
		],
		[
			9840,
			-1180
		]
	],
	[
		[
			6236085,
			7594644
		],
		[
			-5180,
			-2370
		],
		[
			-882,
			-2614
		],
		[
			427,
			-1716
		],
		[
			-900,
			-336
		],
		[
			-37853,
			2125
		],
		[
			-2657,
			-2088
		],
		[
			-2164,
			-68
		],
		[
			-5600,
			-2257
		],
		[
			-2809,
			390
		],
		[
			-1139,
			2073
		],
		[
			-2595,
			-13
		],
		[
			-1439,
			-1211
		],
		[
			-1596,
			888
		],
		[
			-2169,
			1407
		],
		[
			-1357,
			-86
		],
		[
			1037,
			-1613
		],
		[
			135,
			-2860
		],
		[
			-567,
			-99
		],
		[
			-3217,
			2756
		],
		[
			-2770,
			42
		],
		[
			-645,
			-967
		],
		[
			-1284,
			-15
		],
		[
			-3332,
			2056
		],
		[
			-1217,
			1707
		],
		[
			-3789,
			545
		],
		[
			-3650,
			1757
		],
		[
			-3383,
			225
		],
		[
			-2026,
			428
		],
		[
			-2141,
			-1156
		],
		[
			-3608,
			149
		],
		[
			-1901,
			-4218
		],
		[
			-5361,
			1753
		],
		[
			-1736,
			-2382
		],
		[
			-7838,
			-2795
		],
		[
			-2456,
			-55
		],
		[
			-8060,
			2880
		],
		[
			-2014,
			-596
		],
		[
			-4238,
			-1253
		],
		[
			-5952,
			-535
		]
	],
	[
		[
			6098159,
			7584522
		],
		[
			877,
			1615
		],
		[
			-1380,
			5651
		],
		[
			-2494,
			534
		],
		[
			-1525,
			1700
		],
		[
			-3591,
			1802
		],
		[
			-5119,
			2570
		],
		[
			-1913,
			3434
		],
		[
			2798,
			1787
		],
		[
			75,
			1074
		],
		[
			-5926,
			3042
		],
		[
			2270,
			3514
		],
		[
			700,
			2636
		],
		[
			1041,
			3923
		]
	],
	[
		[
			6083972,
			7617804
		],
		[
			3152,
			561
		],
		[
			6058,
			-1209
		],
		[
			2306,
			2010
		],
		[
			2659,
			219
		],
		[
			3562,
			3405
		],
		[
			5057,
			-223
		],
		[
			1583,
			575
		],
		[
			6716,
			2436
		],
		[
			9016,
			-2981
		],
		[
			3634,
			1095
		],
		[
			2663,
			4205
		],
		[
			2703,
			1372
		],
		[
			8003,
			1186
		],
		[
			6285,
			-1060
		],
		[
			3686,
			-2561
		],
		[
			4418,
			1789
		],
		[
			2055,
			-1878
		],
		[
			1714,
			161
		]
	],
	[
		[
			6169007,
			7646135
		],
		[
			4150,
			-5343
		],
		[
			-625,
			-1279
		],
		[
			6608,
			-4057
		],
		[
			405,
			-1042
		],
		[
			-759,
			-1300
		],
		[
			1653,
			-8349
		]
	],
	[
		[
			6083972,
			7617804
		],
		[
			-7788,
			4332
		],
		[
			-1839,
			1887
		],
		[
			-9297,
			-4321
		],
		[
			-3003,
			-250
		],
		[
			-3651,
			1753
		],
		[
			-1159,
			1729
		],
		[
			204,
			1541
		],
		[
			-2432,
			2630
		],
		[
			2336,
			1363
		],
		[
			2490,
			3001
		],
		[
			-1810,
			2967
		],
		[
			-2614,
			1374
		],
		[
			2333,
			1821
		],
		[
			775,
			2766
		],
		[
			7840,
			2391
		],
		[
			-1088,
			1970
		],
		[
			355,
			2267
		],
		[
			-987,
			541
		],
		[
			-5044,
			-546
		],
		[
			-4952,
			4135
		],
		[
			-4936,
			1197
		],
		[
			-2120,
			2132
		],
		[
			-1384,
			3118
		]
	],
	[
		[
			6046201,
			7657602
		],
		[
			2015,
			2770
		],
		[
			3415,
			881
		],
		[
			840,
			2229
		],
		[
			-670,
			1057
		],
		[
			2203,
			2168
		],
		[
			5934,
			3641
		],
		[
			3568,
			981
		],
		[
			2836,
			2383
		],
		[
			4680,
			817
		],
		[
			5999,
			-818
		],
		[
			3964,
			1651
		],
		[
			837,
			1682
		],
		[
			-749,
			1531
		],
		[
			947,
			842
		],
		[
			13414,
			3703
		],
		[
			2099,
			2597
		],
		[
			-2414,
			881
		],
		[
			-2411,
			2943
		],
		[
			-1313,
			4057
		],
		[
			-4796,
			3355
		],
		[
			-822,
			2265
		],
		[
			-3709,
			3090
		],
		[
			2438,
			1005
		],
		[
			6723,
			-293
		],
		[
			-177,
			733
		],
		[
			6484,
			5281
		],
		[
			1057,
			1963
		],
		[
			7305,
			3798
		],
		[
			1149,
			3005
		],
		[
			1302,
			745
		],
		[
			3394,
			1267
		]
	],
	[
		[
			6111743,
			7719812
		],
		[
			3469,
			-2841
		],
		[
			317,
			-2084
		],
		[
			11054,
			-6813
		],
		[
			4807,
			-5069
		],
		[
			2509,
			-744
		],
		[
			2703,
			680
		],
		[
			1725,
			-1385
		],
		[
			-683,
			-1293
		],
		[
			531,
			-744
		],
		[
			4761,
			774
		],
		[
			7873,
			-3822
		],
		[
			1649,
			-2389
		],
		[
			-742,
			-1414
		],
		[
			1972,
			-1862
		],
		[
			43,
			-1864
		],
		[
			2115,
			-1446
		],
		[
			404,
			-4804
		],
		[
			1075,
			-1141
		],
		[
			-389,
			-1987
		],
		[
			-2426,
			-2247
		],
		[
			177,
			-1408
		],
		[
			1606,
			-3202
		],
		[
			3768,
			-2098
		],
		[
			-1795,
			-2924
		],
		[
			98,
			-2065
		],
		[
			6398,
			-7516
		],
		[
			-1979,
			-3652
		],
		[
			3284,
			-5813
		],
		[
			2940,
			-2504
		]
	],
	[
		[
			6137199,
			7705628
		],
		[
			-2281,
			-23
		],
		[
			-967,
			1413
		],
		[
			1147,
			575
		],
		[
			2047,
			-318
		],
		[
			54,
			-1647
		]
	],
	[
		[
			6132312,
			7706933
		],
		[
			-1240,
			-722
		],
		[
			-1103,
			871
		],
		[
			1404,
			659
		],
		[
			939,
			-808
		]
	],
	[
		[
			6098159,
			7584522
		],
		[
			-2920,
			-941
		],
		[
			-5514,
			144
		],
		[
			-3400,
			-1253
		],
		[
			-1766,
			-2183
		],
		[
			773,
			-3584
		],
		[
			-5756,
			-2485
		],
		[
			2593,
			-1916
		],
		[
			1631,
			-1206
		],
		[
			-1294,
			-8003
		],
		[
			-1804,
			-438
		],
		[
			-1979,
			711
		],
		[
			-4529,
			-2075
		],
		[
			-5101,
			79
		]
	],
	[
		[
			6028229,
			7556370
		],
		[
			902,
			2332
		],
		[
			-3346,
			-607
		],
		[
			-4864,
			-3631
		],
		[
			-5861,
			-1747
		],
		[
			-606,
			3099
		],
		[
			-2924,
			4542
		],
		[
			-3345,
			-5684
		],
		[
			-7915,
			-6618
		],
		[
			-2423,
			-1173
		],
		[
			-1998,
			1893
		],
		[
			-3171,
			-453
		],
		[
			-1376,
			1123
		],
		[
			-92,
			4421
		],
		[
			-1370,
			1512
		],
		[
			3172,
			937
		],
		[
			1669,
			3893
		],
		[
			1067,
			1401
		],
		[
			-1730,
			1868
		],
		[
			-381,
			869
		],
		[
			-1439,
			358
		],
		[
			367,
			-1789
		],
		[
			-2392,
			-2256
		],
		[
			653,
			-1638
		],
		[
			-703,
			-782
		],
		[
			-5683,
			-638
		],
		[
			-1993,
			653
		],
		[
			-9130,
			8758
		],
		[
			-342,
			4745
		],
		[
			489,
			546
		],
		[
			911,
			1017
		],
		[
			-369,
			874
		],
		[
			-703,
			230
		],
		[
			-909,
			-1180
		],
		[
			-1262,
			312
		],
		[
			-12458,
			10654
		],
		[
			-3169,
			2884
		],
		[
			-2673,
			1173
		],
		[
			-1217,
			2007
		],
		[
			1928,
			990
		],
		[
			570,
			292
		],
		[
			2657,
			3837
		],
		[
			1348,
			4318
		],
		[
			-468,
			3782
		],
		[
			5259,
			4185
		],
		[
			1441,
			2544
		],
		[
			5799,
			3658
		],
		[
			1288,
			814
		],
		[
			240,
			4385
		],
		[
			3911,
			6542
		],
		[
			4910,
			2746
		],
		[
			5544,
			-1578
		],
		[
			711,
			1005
		],
		[
			2270,
			453
		],
		[
			330,
			1253
		],
		[
			-2376,
			-370
		],
		[
			-2795,
			1101
		],
		[
			2836,
			2589
		],
		[
			7342,
			1230
		],
		[
			7807,
			-2541
		],
		[
			1094,
			-25
		],
		[
			875,
			586
		],
		[
			-1240,
			1120
		],
		[
			1709,
			1998
		],
		[
			4834,
			2197
		]
	],
	[
		[
			6009439,
			7637386
		],
		[
			2718,
			4481
		],
		[
			-1425,
			2130
		],
		[
			7876,
			-86
		],
		[
			903,
			-10
		],
		[
			9814,
			5637
		],
		[
			3569,
			2719
		],
		[
			10531,
			3370
		],
		[
			2776,
			1975
		]
	],
	[
		[
			5994123,
			7544957
		],
		[
			399,
			-1299
		],
		[
			-662,
			144
		],
		[
			-3291,
			2999
		],
		[
			-2275,
			2965
		],
		[
			-306,
			3280
		],
		[
			1270,
			-638
		],
		[
			1646,
			-4238
		],
		[
			1782,
			-1369
		],
		[
			180,
			-1021
		],
		[
			1257,
			-823
		]
	],
	[
		[
			5998572,
			7544517
		],
		[
			-273,
			-1341
		],
		[
			-1847,
			523
		],
		[
			806,
			789
		],
		[
			1314,
			29
		]
	],
	[
		[
			6100547,
			7506923
		],
		[
			4415,
			-1128
		],
		[
			3387,
			694
		],
		[
			1429,
			292
		],
		[
			2930,
			-6082
		],
		[
			10916,
			-7003
		],
		[
			594,
			-1158
		]
	],
	[
		[
			6124218,
			7492538
		],
		[
			-1331,
			-1057
		],
		[
			-214,
			-1708
		],
		[
			-3832,
			-92
		],
		[
			-2244,
			-3047
		],
		[
			-67,
			-2275
		],
		[
			-3800,
			-2536
		],
		[
			573,
			-1158
		],
		[
			2349,
			-789
		],
		[
			-1249,
			-2549
		],
		[
			-2329,
			-1602
		]
	],
	[
		[
			6112074,
			7475725
		],
		[
			-3725,
			-1170
		],
		[
			-6540,
			485
		],
		[
			-1686,
			-2711
		],
		[
			-1331,
			-637
		],
		[
			-1972,
			507
		],
		[
			-952,
			1607
		],
		[
			-4768,
			850
		],
		[
			-5204,
			-1662
		],
		[
			-2117,
			1447
		],
		[
			-2884,
			978
		],
		[
			-3124,
			-100
		],
		[
			-5256,
			2123
		],
		[
			-4118,
			795
		],
		[
			1587,
			2878
		],
		[
			-3777,
			3610
		],
		[
			-199,
			1507
		],
		[
			-1111,
			379
		],
		[
			-4314,
			-1057
		],
		[
			-3081,
			-2254
		]
	],
	[
		[
			6057502,
			7483300
		],
		[
			-3254,
			1692
		],
		[
			-511,
			1660
		],
		[
			-2896,
			219
		],
		[
			-4882,
			2178
		],
		[
			-3833,
			1710
		]
	],
	[
		[
			6112074,
			7475725
		],
		[
			2294,
			-1623
		],
		[
			161,
			-9149
		],
		[
			2753,
			-2969
		],
		[
			-844,
			-1927
		]
	],
	[
		[
			6116438,
			7460057
		],
		[
			-1695,
			-1987
		],
		[
			-3941,
			-224
		],
		[
			-2453,
			-1538
		],
		[
			-706,
			-443
		],
		[
			-3565,
			-161
		],
		[
			-2921,
			1022
		],
		[
			-366,
			-2114
		],
		[
			-2675,
			-1030
		],
		[
			-3607,
			-2993
		],
		[
			-1669,
			-1099
		],
		[
			-844,
			-556
		],
		[
			-1826,
			-1203
		],
		[
			-6917,
			-1156
		],
		[
			-2958,
			-2134
		],
		[
			-2879,
			-552
		],
		[
			-563,
			-1787
		],
		[
			933,
			-1915
		],
		[
			-687,
			-1648
		],
		[
			-5265,
			-1312
		],
		[
			-659,
			-1553
		],
		[
			-3577,
			-830
		],
		[
			-4307,
			902
		],
		[
			-1309,
			-2036
		],
		[
			-2822,
			1227
		],
		[
			-2977,
			-329
		],
		[
			-1284,
			2373
		],
		[
			-2853,
			1138
		],
		[
			-4662,
			-704
		],
		[
			-1425,
			552
		],
		[
			-710,
			275
		],
		[
			-2755,
			-1216
		]
	],
	[
		[
			6042494,
			7437026
		],
		[
			-10583,
			1479
		],
		[
			-2435,
			2473
		],
		[
			-957,
			3775
		],
		[
			-3065,
			3046
		],
		[
			513,
			1135
		],
		[
			251,
			556
		],
		[
			482,
			1067
		],
		[
			-2224,
			-464
		],
		[
			-3481,
			805
		],
		[
			-2387,
			1717
		],
		[
			-2188,
			1575
		],
		[
			2188,
			645
		],
		[
			3739,
			1102
		],
		[
			311,
			1739
		],
		[
			-4050,
			2511
		],
		[
			-3456,
			2144
		],
		[
			-10111,
			3059
		]
	],
	[
		[
			6005041,
			7465390
		],
		[
			1220,
			1166
		],
		[
			-2156,
			1772
		]
	],
	[
		[
			6004105,
			7468328
		],
		[
			3625,
			1807
		],
		[
			4792,
			-1513
		],
		[
			6086,
			560
		],
		[
			3712,
			342
		]
	],
	[
		[
			6022320,
			7469524
		],
		[
			5800,
			-1676
		],
		[
			3081,
			1537
		],
		[
			5005,
			-840
		],
		[
			3729,
			1626
		]
	],
	[
		[
			6039935,
			7470171
		],
		[
			6024,
			-388
		],
		[
			5262,
			-340
		],
		[
			4433,
			1498
		],
		[
			-1888,
			770
		],
		[
			285,
			1293
		],
		[
			-1634,
			489
		],
		[
			-430,
			1379
		],
		[
			-4334,
			-727
		],
		[
			-1325,
			270
		],
		[
			-369,
			427
		],
		[
			-110,
			1684
		],
		[
			2201,
			3277
		],
		[
			-287,
			3603
		],
		[
			4792,
			-916
		],
		[
			4947,
			810
		]
	],
	[
		[
			6039935,
			7470171
		],
		[
			-597,
			2953
		],
		[
			-3266,
			-1841
		],
		[
			-3564,
			580
		],
		[
			-4754,
			151
		],
		[
			-9146,
			4183
		],
		[
			-617,
			282
		],
		[
			-2640,
			2844
		],
		[
			-1049,
			3214
		],
		[
			-2878,
			2657
		],
		[
			-2921,
			5481
		],
		[
			-3352,
			2256
		],
		[
			-349,
			1613
		],
		[
			6955,
			8520
		],
		[
			6015,
			5098
		],
		[
			836,
			135
		],
		[
			948,
			152
		]
	],
	[
		[
			6004105,
			7468328
		],
		[
			-1360,
			2909
		],
		[
			-6621,
			4478
		],
		[
			-721,
			1502
		],
		[
			2594,
			1621
		],
		[
			12081,
			3879
		],
		[
			1391,
			-355
		],
		[
			3787,
			-6354
		],
		[
			3352,
			-3077
		],
		[
			3712,
			-3407
		]
	],
	[
		[
			6293931,
			7554459
		],
		[
			12268,
			-4039
		],
		[
			-1649,
			-1098
		],
		[
			-6118,
			-1157
		],
		[
			-1865,
			-1364
		],
		[
			-2352,
			-3196
		],
		[
			269,
			-4427
		],
		[
			6152,
			-10917
		],
		[
			23970,
			-21403
		],
		[
			2872,
			-4657
		],
		[
			-8495,
			985
		],
		[
			-8886,
			-1231
		],
		[
			-4449,
			442
		],
		[
			-11436,
			6358
		],
		[
			-4046,
			3273
		],
		[
			-2631,
			729
		],
		[
			-1821,
			196
		],
		[
			-1250,
			-64
		],
		[
			-2488,
			-336
		],
		[
			-2189,
			-659
		],
		[
			-2551,
			-627
		],
		[
			-623,
			-154
		],
		[
			-1096,
			-106
		],
		[
			-2255,
			-349
		],
		[
			-2774,
			-551
		],
		[
			-1631,
			267
		],
		[
			-2357,
			-35
		],
		[
			-4996,
			-730
		],
		[
			-1367,
			20
		],
		[
			-873,
			218
		],
		[
			-2800,
			1420
		],
		[
			-504,
			255
		],
		[
			-2344,
			256
		],
		[
			-2132,
			-306
		],
		[
			-1136,
			-205
		],
		[
			-4992,
			-2232
		],
		[
			-17,
			-1874
		],
		[
			910,
			-63
		],
		[
			584,
			1403
		],
		[
			6445,
			1476
		],
		[
			5995,
			-2912
		],
		[
			1767,
			415
		],
		[
			2244,
			-867
		],
		[
			4764,
			1772
		],
		[
			17450,
			1594
		],
		[
			2113,
			-892
		],
		[
			7288,
			-6584
		],
		[
			9710,
			-5016
		],
		[
			5118,
			-963
		],
		[
			7187,
			-5291
		]
	],
	[
		[
			6316914,
			7491233
		],
		[
			-8216,
			-966
		],
		[
			-1076,
			-2264
		],
		[
			-2849,
			-2328
		],
		[
			1787,
			-1900
		],
		[
			-4184,
			-1432
		],
		[
			-1760,
			781
		],
		[
			-1609,
			2169
		],
		[
			-4569,
			2299
		],
		[
			135,
			2256
		],
		[
			-1065,
			2178
		],
		[
			2391,
			3418
		],
		[
			-2903,
			312
		],
		[
			-7887,
			4369
		],
		[
			-419,
			-1961
		],
		[
			-3541,
			-3605
		],
		[
			-6915,
			411
		],
		[
			-2307,
			900
		],
		[
			-5525,
			-2657
		],
		[
			364,
			-652
		],
		[
			5071,
			629
		],
		[
			2567,
			-2209
		],
		[
			-7221,
			-1629
		],
		[
			-397,
			-3089
		],
		[
			-808,
			-457
		],
		[
			-13145,
			-1291
		],
		[
			-978,
			1311
		],
		[
			473,
			3975
		],
		[
			-7799,
			623
		],
		[
			-3202,
			257
		],
		[
			-2171,
			-1900
		],
		[
			-3722,
			-4576
		]
	],
	[
		[
			6235434,
			7484205
		],
		[
			-2102,
			446
		],
		[
			-5144,
			650
		],
		[
			-507,
			-425
		],
		[
			-4125,
			-148
		],
		[
			-311,
			548
		],
		[
			1785,
			981
		],
		[
			-2846,
			2249
		],
		[
			-560,
			442
		]
	],
	[
		[
			6221624,
			7488948
		],
		[
			-1107,
			1427
		],
		[
			435,
			1117
		],
		[
			4537,
			861
		],
		[
			-66,
			4500
		],
		[
			3226,
			5616
		],
		[
			-8143,
			2053
		],
		[
			-10190,
			-218
		]
	],
	[
		[
			6210316,
			7504304
		],
		[
			-2971,
			681
		],
		[
			-1187,
			1147
		],
		[
			2145,
			2519
		],
		[
			7794,
			-80
		],
		[
			6424,
			2349
		],
		[
			-2885,
			2327
		],
		[
			2545,
			3363
		],
		[
			288,
			3163
		],
		[
			-1576,
			4359
		],
		[
			1938,
			2643
		],
		[
			-1701,
			1692
		],
		[
			1675,
			2636
		],
		[
			-761,
			4770
		],
		[
			610,
			1978
		],
		[
			4819,
			2407
		],
		[
			3657,
			530
		],
		[
			10096,
			742
		],
		[
			1533,
			-1610
		],
		[
			1770,
			-132
		],
		[
			1856,
			-138
		],
		[
			430,
			2162
		],
		[
			2730,
			1055
		],
		[
			1040,
			2346
		],
		[
			1321,
			473
		],
		[
			3112,
			1115
		],
		[
			2995,
			1073
		],
		[
			4868,
			-460
		],
		[
			5659,
			2162
		],
		[
			1309,
			1784
		],
		[
			2233,
			1129
		],
		[
			72,
			2536
		],
		[
			1485,
			1039
		],
		[
			2447,
			85
		],
		[
			2266,
			-2109
		],
		[
			4531,
			-493
		],
		[
			2110,
			-1058
		],
		[
			7422,
			9
		],
		[
			1516,
			1961
		]
	],
	[
		[
			6236085,
			7594644
		],
		[
			4953,
			-2991
		],
		[
			2862,
			142
		],
		[
			629,
			-363
		],
		[
			4839,
			-2791
		],
		[
			9147,
			-2292
		],
		[
			4086,
			-2895
		],
		[
			-489,
			-1733
		],
		[
			663,
			-1142
		],
		[
			4544,
			-1840
		],
		[
			2315,
			-2207
		],
		[
			3457,
			-4367
		],
		[
			1622,
			-4068
		],
		[
			1525,
			-905
		],
		[
			185,
			-1669
		],
		[
			2740,
			-2342
		],
		[
			7654,
			-2440
		],
		[
			1219,
			-3825
		],
		[
			5895,
			-2457
		]
	],
	[
		[
			6210316,
			7504304
		],
		[
			-6725,
			-928
		],
		[
			-2016,
			-1130
		],
		[
			-7439,
			560
		],
		[
			-2239,
			-1996
		]
	],
	[
		[
			6191897,
			7500810
		],
		[
			-1622,
			2332
		],
		[
			43,
			1700
		],
		[
			561,
			1812
		],
		[
			2544,
			2352
		],
		[
			-4410,
			1390
		],
		[
			-4036,
			2476
		],
		[
			-1011,
			883
		],
		[
			1751,
			1484
		],
		[
			-1738,
			1840
		],
		[
			132,
			3531
		],
		[
			-3130,
			3382
		],
		[
			2632,
			1493
		],
		[
			-382,
			3108
		],
		[
			1818,
			1703
		],
		[
			-1222,
			1858
		],
		[
			-3063,
			968
		],
		[
			-5256,
			-346
		],
		[
			-6039,
			-3342
		],
		[
			-4276,
			662
		],
		[
			-12463,
			-929
		],
		[
			-8101,
			1245
		],
		[
			-2170,
			-692
		],
		[
			-8376,
			2791
		],
		[
			-4512,
			-448
		],
		[
			-2761,
			2607
		],
		[
			-6502,
			-496
		],
		[
			-1403,
			-433
		],
		[
			-933,
			-2270
		],
		[
			1692,
			-2017
		],
		[
			-2205,
			-847
		],
		[
			-285,
			-2546
		],
		[
			-4000,
			-357
		],
		[
			-2611,
			-1994
		]
	],
	[
		[
			6221624,
			7488948
		],
		[
			-4673,
			-3042
		],
		[
			-1544,
			-3369
		],
		[
			-1902,
			-1093
		],
		[
			-5976,
			-123
		],
		[
			-2123,
			-823
		],
		[
			-3320,
			-2766
		],
		[
			-1140,
			-3205
		],
		[
			-1584,
			-297
		],
		[
			1157,
			-1480
		],
		[
			-5312,
			-2909
		],
		[
			-5384,
			-879
		],
		[
			-3492,
			1159
		],
		[
			-1216,
			1582
		],
		[
			-2406,
			-126
		],
		[
			-1542,
			-1103
		],
		[
			-3614,
			-87
		],
		[
			-1212,
			459
		],
		[
			-456,
			1489
		],
		[
			-1607,
			369
		],
		[
			-3715,
			-527
		],
		[
			-1921,
			-1618
		],
		[
			-7291,
			-1291
		],
		[
			-4832,
			1227
		],
		[
			-1255,
			-667
		],
		[
			-2897,
			882
		],
		[
			2102,
			2752
		],
		[
			-5297,
			1919
		],
		[
			364,
			2352
		],
		[
			-8287,
			3177
		],
		[
			-918,
			3877
		],
		[
			-5302,
			2008
		],
		[
			294,
			2004
		],
		[
			-2366,
			2009
		]
	],
	[
		[
			6132957,
			7490808
		],
		[
			1980,
			1409
		],
		[
			5287,
			409
		],
		[
			3133,
			1982
		],
		[
			4557,
			-512
		],
		[
			5585,
			1067
		],
		[
			3037,
			4253
		],
		[
			5222,
			-1139
		],
		[
			5186,
			75
		],
		[
			3416,
			1353
		],
		[
			4466,
			-965
		],
		[
			2737,
			403
		],
		[
			2763,
			-2138
		],
		[
			4028,
			-632
		],
		[
			4937,
			1764
		],
		[
			2606,
			2673
		]
	],
	[
		[
			6132957,
			7490808
		],
		[
			-515,
			193
		],
		[
			-1480,
			-250
		],
		[
			-1767,
			1296
		],
		[
			-1386,
			642
		],
		[
			-786,
			-65
		],
		[
			-1143,
			-509
		],
		[
			-730,
			400
		],
		[
			-932,
			23
		]
	],
	[
		[
			6235434,
			7484205
		],
		[
			-1878,
			-1467
		],
		[
			-79,
			-1012
		],
		[
			2596,
			-1712
		],
		[
			1037,
			-1764
		],
		[
			-618,
			-3008
		],
		[
			2373,
			-1032
		],
		[
			90,
			-2452
		],
		[
			1317,
			-2769
		],
		[
			-2430,
			-1651
		],
		[
			596,
			-1678
		],
		[
			-665,
			-2080
		],
		[
			3215,
			-399
		],
		[
			1698,
			1069
		],
		[
			1843,
			139
		],
		[
			1344,
			101
		],
		[
			2410,
			-1939
		],
		[
			-902,
			-1835
		],
		[
			-2852,
			-661
		],
		[
			-2511,
			-582
		],
		[
			-2671,
			-2358
		],
		[
			3955,
			-1119
		],
		[
			-593,
			-6506
		],
		[
			-51,
			-556
		],
		[
			123,
			-583
		],
		[
			1748,
			-1931
		],
		[
			652,
			-714
		],
		[
			-652,
			-236
		],
		[
			-3840,
			-1468
		],
		[
			-1822,
			-2113
		],
		[
			-2909,
			-1548
		],
		[
			-443,
			-1471
		],
		[
			1839,
			-2481
		]
	],
	[
		[
			6237354,
			7436389
		],
		[
			-1750,
			-50
		],
		[
			-1398,
			-1106
		],
		[
			-357,
			-758
		],
		[
			-670,
			268
		],
		[
			-4336,
			-5660
		],
		[
			-7132,
			-2746
		],
		[
			204,
			-968
		],
		[
			-1056,
			-1212
		],
		[
			-2910,
			-1394
		],
		[
			-1798,
			-2014
		],
		[
			-7050,
			-528
		],
		[
			-2049,
			751
		],
		[
			-11465,
			-3077
		],
		[
			-2903,
			237
		],
		[
			-3132,
			1306
		],
		[
			-1310,
			1611
		],
		[
			145,
			4984
		],
		[
			-3969,
			188
		],
		[
			-7034,
			-2835
		],
		[
			-3645,
			-4053
		],
		[
			-2666,
			-555
		],
		[
			-3395,
			-3532
		],
		[
			-7839,
			-518
		],
		[
			-633,
			-985
		],
		[
			1141,
			-1760
		],
		[
			-274,
			-1067
		],
		[
			-4648,
			-2177
		]
	],
	[
		[
			6155425,
			7408739
		],
		[
			-5048,
			67
		],
		[
			-1369,
			2038
		],
		[
			-3921,
			1231
		],
		[
			3454,
			4773
		],
		[
			4600,
			116
		],
		[
			2746,
			1713
		],
		[
			-1415,
			1697
		],
		[
			1308,
			1751
		],
		[
			-4832,
			2097
		],
		[
			-8793,
			659
		],
		[
			-4715,
			1948
		],
		[
			-4672,
			390
		],
		[
			-2889,
			3797
		],
		[
			2070,
			2172
		],
		[
			817,
			3068
		],
		[
			1106,
			477
		],
		[
			4541,
			1953
		],
		[
			645,
			1603
		],
		[
			119,
			1853
		],
		[
			-1980,
			1383
		],
		[
			-1044,
			3074
		],
		[
			407,
			2335
		],
		[
			-2950,
			3170
		],
		[
			-488,
			2379
		],
		[
			-5182,
			3477
		],
		[
			-8674,
			2879
		],
		[
			-2828,
			-782
		]
	],
	[
		[
			6265679,
			7402720
		],
		[
			20,
			7
		]
	],
	[
		[
			6265699,
			7402727
		],
		[
			2159,
			-1796
		],
		[
			-2094,
			-3341
		],
		[
			343,
			-657
		],
		[
			1534,
			-702
		],
		[
			5997,
			339
		],
		[
			-33,
			-2242
		],
		[
			1147,
			-1254
		],
		[
			-388,
			-1844
		],
		[
			5093,
			-2061
		],
		[
			1242,
			-3737
		],
		[
			-3191,
			-3949
		],
		[
			-6740,
			-4188
		],
		[
			-4892,
			-1341
		],
		[
			-378,
			-1073
		],
		[
			1945,
			-2163
		],
		[
			960,
			-435
		],
		[
			241,
			-1291
		]
	],
	[
		[
			6268644,
			7370992
		],
		[
			-4807,
			-876
		],
		[
			-2453,
			-2257
		],
		[
			395,
			-2059
		],
		[
			-982,
			-1251
		],
		[
			-2255,
			-247
		],
		[
			-4067,
			2197
		],
		[
			-4300,
			-1065
		],
		[
			949,
			-3955
		],
		[
			-2758,
			-3280
		]
	],
	[
		[
			6248366,
			7358199
		],
		[
			-1886,
			95
		],
		[
			-1846,
			-441
		],
		[
			-105,
			-56
		],
		[
			-4328,
			-2294
		],
		[
			-2602,
			11
		],
		[
			-5993,
			-3647
		],
		[
			-4408,
			-691
		],
		[
			-294,
			-984
		],
		[
			4840,
			-4176
		],
		[
			-2095,
			-1100
		],
		[
			-1164,
			-1594
		],
		[
			-438,
			-601
		],
		[
			-3673,
			-1555
		],
		[
			-1711,
			1413
		],
		[
			-402,
			743
		],
		[
			-1708,
			3160
		],
		[
			-3219,
			-705
		],
		[
			-4546,
			315
		],
		[
			-734,
			-853
		],
		[
			-8166,
			-1917
		],
		[
			-565,
			-133
		],
		[
			-1520,
			-2161
		],
		[
			1567,
			-789
		],
		[
			-2048,
			-1712
		],
		[
			-5067,
			-1776
		],
		[
			-9001,
			491
		],
		[
			-415,
			3014
		],
		[
			-2067,
			3066
		],
		[
			58,
			3714
		],
		[
			4422,
			1995
		],
		[
			-7266,
			6513
		]
	],
	[
		[
			6181986,
			7355544
		],
		[
			1860,
			1976
		],
		[
			5429,
			1279
		],
		[
			-1737,
			3244
		],
		[
			5647,
			2967
		],
		[
			-966,
			3004
		],
		[
			1674,
			2016
		],
		[
			-4818,
			1468
		],
		[
			1218,
			1220
		],
		[
			7153,
			1772
		],
		[
			-2428,
			3880
		],
		[
			-10552,
			9676
		],
		[
			-20897,
			7527
		],
		[
			-3952,
			2735
		],
		[
			-1305,
			3560
		],
		[
			2077,
			1298
		],
		[
			196,
			1204
		],
		[
			-4370,
			3053
		]
	],
	[
		[
			6156215,
			7407423
		],
		[
			-790,
			1316
		]
	],
	[
		[
			6237354,
			7436389
		],
		[
			276,
			-1625
		],
		[
			1777,
			-1180
		],
		[
			-1378,
			-4425
		],
		[
			6500,
			-6870
		],
		[
			835,
			-883
		],
		[
			1253,
			-1324
		],
		[
			2208,
			-5475
		],
		[
			8732,
			-753
		],
		[
			3166,
			-1306
		],
		[
			854,
			-1521
		],
		[
			10407,
			-2062
		],
		[
			-266,
			-1616
		],
		[
			-2221,
			-1443
		],
		[
			-5683,
			-1290
		],
		[
			1865,
			-1896
		]
	],
	[
		[
			6341772,
			7419708
		],
		[
			-1637,
			-2451
		],
		[
			1077,
			-1576
		],
		[
			-6963,
			-3146
		],
		[
			-683,
			-12
		],
		[
			-1221,
			-23
		],
		[
			-6751,
			-815
		],
		[
			-570,
			9
		],
		[
			-470,
			-317
		],
		[
			-471,
			-318
		],
		[
			-2431,
			333
		],
		[
			-1669,
			-869
		],
		[
			-326,
			-430
		],
		[
			-6,
			-1285
		],
		[
			38,
			-844
		],
		[
			409,
			-493
		],
		[
			-115,
			-670
		],
		[
			-2651,
			-1616
		],
		[
			-2156,
			-138
		],
		[
			-3133,
			-199
		],
		[
			-2824,
			1141
		],
		[
			-4460,
			-273
		],
		[
			-3874,
			-1682
		],
		[
			-4885,
			203
		],
		[
			-1926,
			1064
		],
		[
			-4736,
			-1241
		],
		[
			-6845,
			2036
		],
		[
			-7927,
			-2489
		],
		[
			-4343,
			304
		],
		[
			-4524,
			-1184
		]
	],
	[
		[
			6316914,
			7491233
		],
		[
			1954,
			-917
		],
		[
			3883,
			-149
		],
		[
			1213,
			-1720
		],
		[
			1630,
			-543
		],
		[
			1784,
			692
		],
		[
			1412,
			-1199
		],
		[
			1932,
			-132
		],
		[
			2844,
			-3256
		],
		[
			4290,
			-4911
		],
		[
			9465,
			-13660
		],
		[
			1515,
			-3683
		],
		[
			1777,
			-4318
		],
		[
			-1660,
			-7947
		],
		[
			-216,
			-1035
		],
		[
			-3616,
			-1031
		],
		[
			-11555,
			-6063
		],
		[
			-1737,
			-912
		],
		[
			-4921,
			-3716
		],
		[
			-1314,
			-993
		],
		[
			-2862,
			-3585
		],
		[
			-3151,
			-1750
		],
		[
			-685,
			-1089
		],
		[
			6698,
			-1611
		],
		[
			6653,
			-1702
		],
		[
			1319,
			-1401
		],
		[
			3008,
			-3196
		],
		[
			621,
			-660
		],
		[
			4577,
			-1038
		]
	],
	[
		[
			6181986,
			7355544
		],
		[
			-1718,
			-2888
		],
		[
			-3035,
			-1543
		],
		[
			944,
			-2388
		],
		[
			-1653,
			-205
		],
		[
			-4790,
			1781
		],
		[
			-4889,
			-2420
		],
		[
			-2222,
			-4559
		],
		[
			-2428,
			-4983
		],
		[
			-8089,
			-3593
		],
		[
			-5503,
			2699
		]
	],
	[
		[
			6148603,
			7337445
		],
		[
			4367,
			4689
		],
		[
			-6757,
			628
		],
		[
			-306,
			560
		],
		[
			-1238,
			2262
		],
		[
			-2035,
			371
		],
		[
			-662,
			1989
		],
		[
			-1811,
			356
		],
		[
			-1748,
			1655
		],
		[
			-2649,
			-1043
		],
		[
			-1863,
			-1936
		],
		[
			-5585,
			-1206
		],
		[
			896,
			-1712
		],
		[
			1103,
			-736
		],
		[
			1941,
			-1297
		],
		[
			-1289,
			-2453
		],
		[
			-7004,
			3347
		],
		[
			-2255,
			-1055
		],
		[
			-2778,
			183
		],
		[
			-2186,
			144
		],
		[
			-5827,
			-2982
		],
		[
			-2568,
			305
		],
		[
			-4387,
			520
		],
		[
			-2582,
			-1088
		],
		[
			-938,
			447
		],
		[
			130,
			801
		],
		[
			2653,
			2418
		],
		[
			-2771,
			710
		],
		[
			-1112,
			284
		],
		[
			-689,
			-284
		],
		[
			-1175,
			-487
		],
		[
			-743,
			-2356
		],
		[
			1805,
			-1863
		],
		[
			-4031,
			-353
		],
		[
			-1834,
			-406
		],
		[
			-2851,
			-2300
		],
		[
			-4684,
			23
		],
		[
			-2205,
			891
		],
		[
			-248,
			2250
		],
		[
			-2647,
			2112
		],
		[
			-3608,
			-829
		],
		[
			-1434,
			-1535
		],
		[
			-1507,
			-292
		],
		[
			-1613,
			341
		],
		[
			-688,
			1486
		],
		[
			-4057,
			647
		],
		[
			-813,
			-1093
		],
		[
			1252,
			-1435
		],
		[
			-1657,
			-1427
		],
		[
			-383,
			-1904
		],
		[
			2882,
			-1014
		],
		[
			2380,
			-5220
		],
		[
			-4041,
			-1616
		],
		[
			-2326,
			21
		],
		[
			-2429,
			-2059
		],
		[
			-6883,
			-900
		],
		[
			-4960,
			-2693
		]
	],
	[
		[
			6050155,
			7321311
		],
		[
			-4196,
			1196
		],
		[
			-2666,
			760
		],
		[
			-2240,
			-564
		],
		[
			-3330,
			2525
		],
		[
			-159,
			1627
		],
		[
			-10141,
			5036
		],
		[
			-8954,
			-2529
		],
		[
			-994,
			1701
		],
		[
			-2698,
			321
		],
		[
			-1996,
			2763
		],
		[
			-4341,
			2864
		],
		[
			-2587,
			3637
		],
		[
			-53,
			2674
		],
		[
			-2435,
			2884
		],
		[
			603,
			3675
		],
		[
			-1496,
			1795
		],
		[
			3549,
			2191
		],
		[
			-1928,
			2009
		],
		[
			4641,
			6301
		],
		[
			3035,
			1897
		],
		[
			4508,
			1309
		],
		[
			-1612,
			1825
		],
		[
			389,
			2182
		],
		[
			995,
			1635
		],
		[
			3655,
			2597
		]
	],
	[
		[
			6019704,
			7373622
		],
		[
			4359,
			3222
		],
		[
			6971,
			1164
		],
		[
			3113,
			-630
		],
		[
			2387,
			-2698
		],
		[
			4298,
			-395
		],
		[
			-766,
			-2680
		],
		[
			3375,
			-1557
		],
		[
			2518,
			59
		],
		[
			2947,
			2267
		],
		[
			4468,
			-2982
		],
		[
			5352,
			712
		],
		[
			568,
			1872
		],
		[
			1980,
			1007
		],
		[
			5169,
			-1164
		],
		[
			1333,
			3276
		],
		[
			4921,
			442
		],
		[
			2179,
			1549
		],
		[
			4741,
			325
		],
		[
			-1110,
			1886
		],
		[
			569,
			2776
		],
		[
			4264,
			467
		],
		[
			3100,
			1689
		],
		[
			-174,
			-739
		],
		[
			1692,
			-785
		],
		[
			6551,
			-1060
		],
		[
			3594,
			-512
		],
		[
			590,
			584
		]
	],
	[
		[
			6098693,
			7381717
		],
		[
			2456,
			-266
		],
		[
			4192,
			1668
		],
		[
			1891,
			-1069
		],
		[
			1117,
			228
		],
		[
			2240,
			457
		],
		[
			1360,
			-1065
		],
		[
			1530,
			295
		],
		[
			1975,
			-1816
		],
		[
			-2597,
			-1136
		],
		[
			2173,
			-1985
		],
		[
			3900,
			349
		],
		[
			2909,
			260
		],
		[
			2108,
			1547
		],
		[
			4357,
			-14
		],
		[
			2315,
			-531
		],
		[
			-1450,
			-1421
		],
		[
			-690,
			-1236
		],
		[
			-504,
			-526
		],
		[
			5977,
			-189
		],
		[
			3250,
			-1511
		],
		[
			590,
			1295
		],
		[
			2769,
			-587
		],
		[
			2088,
			1279
		],
		[
			962,
			-1259
		],
		[
			1818,
			-447
		],
		[
			2009,
			1014
		],
		[
			2756,
			-425
		],
		[
			2212,
			703
		],
		[
			2668,
			2299
		],
		[
			3403,
			-682
		],
		[
			1681,
			-1612
		],
		[
			1972,
			1079
		],
		[
			6516,
			119
		],
		[
			3042,
			1682
		],
		[
			751,
			3570
		],
		[
			-3905,
			2666
		],
		[
			-4077,
			-579
		],
		[
			-3414,
			1082
		],
		[
			-5413,
			-665
		],
		[
			-2042,
			556
		],
		[
			-2767,
			-1777
		],
		[
			-3207,
			-619
		],
		[
			-7787,
			7545
		],
		[
			1626,
			1389
		],
		[
			-5082,
			6101
		]
	],
	[
		[
			6136371,
			7397483
		],
		[
			8122,
			19
		],
		[
			5363,
			1107
		],
		[
			1500,
			1767
		],
		[
			-312,
			4062
		],
		[
			5171,
			2985
		]
	],
	[
		[
			6136371,
			7397483
		],
		[
			-1258,
			1208
		],
		[
			-2901,
			764
		],
		[
			-4290,
			-2264
		],
		[
			-5453,
			7468
		],
		[
			-2642,
			6
		],
		[
			-897,
			-1140
		],
		[
			-438,
			-557
		],
		[
			-8385,
			-2219
		],
		[
			-1758,
			-444
		],
		[
			-1169,
			-296
		],
		[
			-2413,
			2056
		],
		[
			-2388,
			281
		],
		[
			-6362,
			-3109
		],
		[
			-833,
			-2397
		],
		[
			1665,
			-675
		],
		[
			1033,
			-1764
		],
		[
			3947,
			-297
		],
		[
			-1798,
			-3749
		],
		[
			-3284,
			-1057
		],
		[
			1946,
			-7581
		]
	],
	[
		[
			6019704,
			7373622
		],
		[
			-11097,
			340
		],
		[
			-14207,
			6494
		],
		[
			-1997,
			1921
		],
		[
			433,
			1885
		],
		[
			2814,
			1830
		],
		[
			8656,
			2345
		],
		[
			6581,
			526
		],
		[
			3472,
			2409
		],
		[
			754,
			1691
		],
		[
			-2213,
			2531
		],
		[
			-5278,
			-1633
		],
		[
			-2325,
			-1786
		],
		[
			-2129,
			114
		],
		[
			-973,
			4783
		],
		[
			4317,
			2675
		],
		[
			6354,
			10427
		],
		[
			4796,
			1197
		],
		[
			-4932,
			3762
		],
		[
			-4551,
			894
		],
		[
			-2664,
			1650
		],
		[
			-5976,
			934
		],
		[
			-572,
			2415
		],
		[
			2321,
			4405
		],
		[
			-860,
			2281
		],
		[
			3000,
			696
		],
		[
			2054,
			3083
		],
		[
			5587,
			113
		],
		[
			3251,
			2576
		],
		[
			3247,
			1045
		],
		[
			4434,
			-2443
		],
		[
			3986,
			947
		],
		[
			4422,
			-698
		],
		[
			5049,
			-4481
		],
		[
			3930,
			2358
		],
		[
			2774,
			544
		],
		[
			332,
			5574
		]
	],
	[
		[
			6482724,
			7412965
		],
		[
			2452,
			-2593
		],
		[
			4174,
			-8311
		],
		[
			-890,
			-7086
		],
		[
			770,
			-3069
		],
		[
			1439,
			-5594
		],
		[
			-1910,
			-3209
		],
		[
			-1794,
			-5987
		],
		[
			-4032,
			-6374
		],
		[
			-4100,
			-4460
		],
		[
			-1730,
			-8770
		],
		[
			-4571,
			-9749
		],
		[
			-9509,
			-3561
		],
		[
			-4982,
			-4867
		],
		[
			-3655,
			-1314
		],
		[
			-1704,
			-2130
		],
		[
			-4475,
			-2535
		],
		[
			-3572,
			1692
		],
		[
			-2685,
			3001
		],
		[
			-7653,
			2236
		],
		[
			231,
			-894
		],
		[
			6959,
			-2176
		],
		[
			867,
			-2295
		],
		[
			-7261,
			-503
		],
		[
			-4212,
			708
		],
		[
			-10067,
			-1280
		]
	],
	[
		[
			6420814,
			7333845
		],
		[
			-7915,
			1149
		],
		[
			-1862,
			1201
		],
		[
			-5933,
			-118
		],
		[
			-5037,
			-1131
		],
		[
			-6434,
			270
		],
		[
			-4181,
			4295
		],
		[
			-425,
			2078
		],
		[
			-3815,
			1058
		],
		[
			749,
			3236
		],
		[
			-2264,
			1268
		],
		[
			-4957,
			12
		],
		[
			-10361,
			-2684
		],
		[
			-1234,
			-27
		],
		[
			-2160,
			-48
		],
		[
			-3025,
			1927
		],
		[
			-6315,
			-1085
		],
		[
			-1448,
			-588
		],
		[
			-953,
			-986
		],
		[
			694,
			-627
		],
		[
			212,
			-703
		],
		[
			-1466,
			473
		],
		[
			-2678,
			862
		],
		[
			-2943,
			2559
		],
		[
			-3954,
			1564
		],
		[
			-2764,
			-1154
		],
		[
			-4425,
			1140
		],
		[
			-2354,
			-3121
		],
		[
			-4620,
			-847
		],
		[
			-2486,
			545
		],
		[
			-901,
			-1041
		],
		[
			-1778,
			-3065
		],
		[
			-1788,
			-982
		]
	],
	[
		[
			6321993,
			7339275
		],
		[
			-2649,
			4047
		],
		[
			-504,
			393
		],
		[
			-2859,
			90
		],
		[
			-2722,
			1042
		],
		[
			-4012,
			-1525
		],
		[
			-5982,
			-2355
		],
		[
			-2409,
			2355
		],
		[
			-809,
			791
		],
		[
			-595,
			2638
		],
		[
			884,
			1844
		],
		[
			87,
			3941
		],
		[
			-7432,
			740
		],
		[
			28,
			1528
		],
		[
			-3350,
			1462
		],
		[
			533,
			867
		],
		[
			402,
			761
		],
		[
			-1869,
			1615
		],
		[
			-3041,
			635
		],
		[
			393,
			2407
		],
		[
			-3947,
			391
		],
		[
			-1642,
			-1017
		],
		[
			-2179,
			256
		],
		[
			-1114,
			4420
		],
		[
			-4320,
			868
		],
		[
			-1509,
			2265
		],
		[
			-2732,
			1258
		]
	],
	[
		[
			6341772,
			7419708
		],
		[
			5366,
			357
		],
		[
			4762,
			-1368
		],
		[
			2995,
			2709
		],
		[
			4175,
			2030
		],
		[
			4439,
			8690
		],
		[
			3573,
			2925
		],
		[
			3058,
			960
		],
		[
			11487,
			-40
		],
		[
			3961,
			993
		],
		[
			21901,
			-1793
		],
		[
			3923,
			197
		],
		[
			1596,
			1044
		],
		[
			1710,
			-927
		],
		[
			5543,
			-130
		],
		[
			24896,
			-3571
		],
		[
			13755,
			-5239
		],
		[
			9677,
			-5139
		],
		[
			7513,
			-4017
		],
		[
			6622,
			-4424
		]
	],
	[
		[
			6321993,
			7339275
		],
		[
			502,
			-2199
		],
		[
			3099,
			-1020
		],
		[
			1867,
			-4821
		],
		[
			276,
			-3721
		],
		[
			5369,
			538
		],
		[
			460,
			-929
		],
		[
			731,
			-1475
		],
		[
			-731,
			-397
		],
		[
			-1130,
			-613
		],
		[
			-913,
			-2113
		],
		[
			187,
			-2139
		],
		[
			-1363,
			-1522
		],
		[
			-4753,
			-1557
		],
		[
			-7535,
			-1281
		],
		[
			-1866,
			-1308
		],
		[
			-2276,
			-2433
		],
		[
			-572,
			-3296
		],
		[
			643,
			-2205
		]
	],
	[
		[
			6313988,
			7306784
		],
		[
			-9745,
			1032
		],
		[
			-5240,
			-509
		],
		[
			-2032,
			-1751
		]
	],
	[
		[
			6296971,
			7305556
		],
		[
			-12237,
			-3225
		],
		[
			-1509,
			230
		],
		[
			-8198,
			-2472
		],
		[
			-5693,
			22
		],
		[
			-3580,
			1475
		],
		[
			-634,
			-2921
		]
	],
	[
		[
			6265120,
			7298665
		],
		[
			-1945,
			459
		],
		[
			-1700,
			3057
		],
		[
			360,
			2292
		],
		[
			2399,
			1823
		],
		[
			-3524,
			862
		],
		[
			-1454,
			2817
		],
		[
			180,
			2038
		],
		[
			-3166,
			1787
		],
		[
			-5285,
			402
		],
		[
			-2609,
			1114
		],
		[
			-2189,
			3700
		],
		[
			-1658,
			834
		],
		[
			-1864,
			937
		],
		[
			-1704,
			1931
		],
		[
			3568,
			1551
		],
		[
			5191,
			-4012
		],
		[
			6958,
			-519
		],
		[
			3138,
			1629
		],
		[
			1043,
			606
		],
		[
			-4040,
			3554
		],
		[
			-11463,
			3830
		],
		[
			556,
			1721
		],
		[
			3969,
			4541
		],
		[
			-607,
			2730
		],
		[
			1617,
			3470
		],
		[
			-1781,
			1503
		],
		[
			-466,
			393
		],
		[
			7355,
			6050
		],
		[
			-1461,
			1981
		],
		[
			-2898,
			1217
		],
		[
			356,
			3999
		],
		[
			-3630,
			1237
		]
	],
	[
		[
			6420814,
			7333845
		],
		[
			6120,
			-1046
		],
		[
			16956,
			367
		],
		[
			-4110,
			-5342
		],
		[
			3694,
			-1832
		],
		[
			326,
			-993
		],
		[
			-5986,
			-4712
		],
		[
			-10582,
			-3961
		],
		[
			-7618,
			-245
		],
		[
			-1836,
			2680
		],
		[
			-2924,
			1618
		],
		[
			-1792,
			2144
		],
		[
			-805,
			-2689
		],
		[
			2099,
			-1497
		],
		[
			-1111,
			-909
		],
		[
			-5038,
			-1220
		],
		[
			-3012,
			1069
		],
		[
			-5563,
			-443
		],
		[
			1722,
			-674
		],
		[
			739,
			-1803
		],
		[
			-1931,
			-1288
		],
		[
			-12487,
			-904
		],
		[
			-1023,
			-752
		],
		[
			4723,
			-2942
		],
		[
			4108,
			1915
		],
		[
			4971,
			203
		],
		[
			4604,
			2362
		],
		[
			3306,
			11
		],
		[
			1525,
			-1789
		],
		[
			9,
			-3740
		],
		[
			-2182,
			-5712
		],
		[
			-6657,
			-827
		],
		[
			-10746,
			1722
		],
		[
			-10776,
			-82
		],
		[
			-3602,
			-831
		],
		[
			15084,
			319
		],
		[
			10492,
			-2407
		],
		[
			6383,
			-195
		],
		[
			-1946,
			-2460
		],
		[
			-8648,
			-4193
		],
		[
			-3790,
			-1805
		],
		[
			-13134,
			1666
		],
		[
			-2521,
			-715
		],
		[
			502,
			-954
		],
		[
			-667,
			-520
		],
		[
			-5287,
			-875
		],
		[
			-5258,
			2020
		],
		[
			0,
			-582
		],
		[
			963,
			-1305
		],
		[
			-963,
			-93
		],
		[
			-6788,
			-658
		],
		[
			-1931,
			-3911
		],
		[
			-1894,
			-725
		],
		[
			-3848,
			-206
		],
		[
			-2755,
			-147
		],
		[
			-3110,
			1993
		],
		[
			-4032,
			-852
		],
		[
			-6560,
			2602
		]
	],
	[
		[
			6336227,
			7287700
		],
		[
			3520,
			3351
		],
		[
			1452,
			-346
		],
		[
			1232,
			1234
		],
		[
			5597,
			912
		],
		[
			-1544,
			2426
		],
		[
			-2430,
			416
		],
		[
			-3065,
			4138
		],
		[
			-2577,
			1578
		],
		[
			-3201,
			-220
		],
		[
			-1645,
			-37
		],
		[
			-4567,
			-102
		],
		[
			-3405,
			-1052
		],
		[
			-4328,
			-486
		],
		[
			-3042,
			1478
		],
		[
			-1266,
			1695
		],
		[
			-3004,
			634
		],
		[
			34,
			3465
		]
	],
	[
		[
			6393794,
			7310889
		],
		[
			-1354,
			-641
		],
		[
			-1128,
			763
		],
		[
			1979,
			658
		],
		[
			503,
			-780
		]
	],
	[
		[
			6306661,
			7290729
		],
		[
			669,
			119
		],
		[
			-99,
			-1372
		]
	],
	[
		[
			6307231,
			7289476
		],
		[
			-3206,
			295
		],
		[
			-1859,
			-2209
		],
		[
			-1985,
			-314
		],
		[
			-2246,
			-387
		],
		[
			-1328,
			-1304
		],
		[
			-1497,
			-267
		],
		[
			-1732,
			542
		],
		[
			-1229,
			1615
		],
		[
			-1357,
			142
		]
	],
	[
		[
			6290792,
			7287589
		],
		[
			-918,
			1247
		],
		[
			669,
			3140
		],
		[
			3036,
			-487
		],
		[
			2455,
			836
		],
		[
			-2198,
			1886
		],
		[
			4218,
			1728
		]
	],
	[
		[
			6298054,
			7295939
		],
		[
			2622,
			-445
		],
		[
			3709,
			-4574
		],
		[
			2276,
			-191
		]
	],
	[
		[
			6301142,
			7280621
		],
		[
			-3785,
			494
		],
		[
			-1569,
			1561
		],
		[
			-6010,
			-256
		]
	],
	[
		[
			6289778,
			7282420
		],
		[
			796,
			648
		],
		[
			-798,
			1747
		],
		[
			3117,
			1063
		]
	],
	[
		[
			6292893,
			7285878
		],
		[
			1531,
			-762
		],
		[
			1562,
			-88
		],
		[
			924,
			338
		],
		[
			1186,
			1339
		],
		[
			4243,
			497
		]
	],
	[
		[
			6302339,
			7287202
		],
		[
			-2053,
			-2109
		],
		[
			856,
			-4472
		]
	],
	[
		[
			6309064,
			7296475
		],
		[
			4645,
			-2542
		],
		[
			6701,
			828
		],
		[
			1605,
			-1624
		],
		[
			2861,
			-2874
		]
	],
	[
		[
			6324876,
			7290263
		],
		[
			-3365,
			-1666
		],
		[
			-3721,
			41
		],
		[
			-1672,
			768
		],
		[
			-1221,
			-254
		],
		[
			-1095,
			-1635
		],
		[
			-2152,
			1925
		],
		[
			-4419,
			34
		]
	],
	[
		[
			6298054,
			7295939
		],
		[
			1285,
			2794
		],
		[
			1965,
			982
		]
	],
	[
		[
			6301304,
			7299715
		],
		[
			9734,
			-455
		],
		[
			-1974,
			-2785
		]
	],
	[
		[
			6307350,
			7280747
		],
		[
			-35,
			-69
		],
		[
			-3093,
			243
		],
		[
			-1820,
			-993
		],
		[
			-1435,
			132
		],
		[
			175,
			561
		]
	],
	[
		[
			6302339,
			7287202
		],
		[
			1951,
			2339
		],
		[
			6965,
			-317
		],
		[
			1450,
			-1963
		]
	],
	[
		[
			6312705,
			7287261
		],
		[
			703,
			-1164
		],
		[
			2765,
			-310
		],
		[
			1899,
			-2929
		]
	],
	[
		[
			6318072,
			7282858
		],
		[
			574,
			-1603
		],
		[
			-3321,
			-781
		],
		[
			-7975,
			273
		]
	],
	[
		[
			5871971,
			7888131
		],
		[
			6520,
			-1353
		],
		[
			7540,
			119
		],
		[
			6895,
			1173
		],
		[
			4371,
			-564
		],
		[
			2134,
			1550
		],
		[
			1444,
			1048
		],
		[
			2550,
			532
		],
		[
			6763,
			3792
		],
		[
			474,
			1221
		],
		[
			-1372,
			1349
		],
		[
			1031,
			781
		],
		[
			4562,
			908
		],
		[
			7607,
			-1201
		],
		[
			6972,
			574
		],
		[
			7683,
			3254
		],
		[
			11886,
			3472
		],
		[
			2975,
			-197
		],
		[
			652,
			-2067
		],
		[
			3018,
			-381
		],
		[
			717,
			767
		],
		[
			-767,
			1905
		],
		[
			5764,
			467
		],
		[
			1284,
			104
		],
		[
			2260,
			1014
		],
		[
			2209,
			2398
		],
		[
			10047,
			1874
		],
		[
			8963,
			267
		],
		[
			15959,
			-4271
		],
		[
			10489,
			-1460
		],
		[
			6007,
			1559
		],
		[
			8736,
			2266
		],
		[
			7681,
			-810
		]
	],
	[
		[
			6035025,
			7908221
		],
		[
			1757,
			-4899
		],
		[
			-864,
			-4067
		],
		[
			11336,
			-7859
		],
		[
			-4871,
			-1978
		],
		[
			-12949,
			2583
		],
		[
			-2754,
			-706
		],
		[
			-3444,
			-2239
		],
		[
			-900,
			-586
		],
		[
			-5138,
			-1367
		],
		[
			-2644,
			-3124
		],
		[
			2216,
			-2271
		],
		[
			-2410,
			-2277
		],
		[
			3708,
			-2959
		],
		[
			470,
			-6328
		],
		[
			-1725,
			-2808
		],
		[
			-3931,
			-1597
		],
		[
			-5623,
			982
		],
		[
			-3929,
			-268
		],
		[
			-8616,
			-2470
		],
		[
			-5090,
			-4943
		],
		[
			-8942,
			-2904
		],
		[
			-310,
			-1398
		],
		[
			1363,
			-3446
		],
		[
			-3300,
			-2136
		],
		[
			-16062,
			-1706
		],
		[
			-983,
			64
		],
		[
			-4555,
			295
		],
		[
			-7394,
			-1401
		],
		[
			-3832,
			1154
		],
		[
			-3950,
			-1082
		],
		[
			-1069,
			-986
		],
		[
			-801,
			-7310
		],
		[
			-4776,
			-5887
		]
	],
	[
		[
			5935013,
			7832297
		],
		[
			-1360,
			-75
		],
		[
			-1083,
			195
		],
		[
			-1667,
			-945
		],
		[
			-965,
			-323
		],
		[
			-2159,
			-57
		],
		[
			-1192,
			170
		],
		[
			-980,
			-136
		],
		[
			-866,
			706
		],
		[
			-3010,
			539
		],
		[
			-584,
			950
		],
		[
			-868,
			-30
		],
		[
			-1697,
			-1361
		],
		[
			-349,
			-1257
		],
		[
			557,
			-1107
		],
		[
			-416,
			-778
		],
		[
			-1529,
			-710
		],
		[
			-1237,
			-220
		],
		[
			-1273,
			573
		],
		[
			-727,
			-531
		],
		[
			-692,
			-158
		],
		[
			-1271,
			867
		],
		[
			-679,
			-178
		],
		[
			-2329,
			-206
		],
		[
			-1237,
			62
		],
		[
			-1128,
			-191
		],
		[
			-2320,
			114
		],
		[
			-1330,
			345
		],
		[
			-1131,
			-46
		],
		[
			-1965,
			618
		],
		[
			-1145,
			157
		],
		[
			-744,
			344
		],
		[
			-715,
			-148
		],
		[
			-1709,
			-1522
		],
		[
			-201,
			-634
		],
		[
			651,
			-929
		],
		[
			-622,
			-570
		],
		[
			-1628,
			-358
		],
		[
			-1527,
			-1049
		],
		[
			-1947,
			-303
		],
		[
			-1056,
			187
		],
		[
			-1518,
			-513
		],
		[
			-1628,
			159
		],
		[
			-839,
			-131
		],
		[
			-1130,
			-793
		],
		[
			-1322,
			-546
		],
		[
			-408,
			-1204
		],
		[
			-669,
			-287
		],
		[
			-618,
			-10
		],
		[
			-1272,
			522
		],
		[
			-1843,
			237
		],
		[
			-1262,
			-1025
		],
		[
			-2604,
			-2116
		],
		[
			-1988,
			-1983
		],
		[
			-656,
			-360
		],
		[
			-2733,
			350
		],
		[
			-1786,
			1302
		],
		[
			-2283,
			1008
		],
		[
			-1185,
			326
		],
		[
			-3116,
			-3139
		],
		[
			-867,
			-408
		],
		[
			-2217,
			-1044
		],
		[
			100,
			-2251
		],
		[
			-1717,
			-2357
		],
		[
			-176,
			-1962
		],
		[
			-11568,
			-2500
		],
		[
			-60,
			-1601
		],
		[
			1121,
			-899
		],
		[
			7431,
			469
		],
		[
			676,
			-1014
		],
		[
			-329,
			-1762
		],
		[
			3664,
			-1964
		],
		[
			1719,
			-2192
		],
		[
			-8744,
			-1846
		],
		[
			-2356,
			-1230
		],
		[
			-281,
			-852
		],
		[
			2915,
			-1529
		],
		[
			-1964,
			-3348
		],
		[
			1960,
			-1164
		],
		[
			-178,
			-755
		],
		[
			-1408,
			-926
		],
		[
			-4746,
			-511
		],
		[
			-1392,
			-1942
		],
		[
			-3443,
			-624
		],
		[
			-4508,
			-2394
		],
		[
			-2427,
			-3435
		],
		[
			4890,
			-2860
		],
		[
			477,
			-2117
		]
	],
	[
		[
			5836595,
			7771081
		],
		[
			59,
			-921
		],
		[
			-4728,
			-2372
		],
		[
			4309,
			-2671
		],
		[
			475,
			-2099
		],
		[
			4775,
			-1013
		],
		[
			210,
			-1146
		],
		[
			-1384,
			-1830
		]
	],
	[
		[
			5840311,
			7759029
		],
		[
			-3559,
			-2076
		],
		[
			-4658,
			-5212
		],
		[
			-2915,
			-2015
		],
		[
			-1884,
			413
		],
		[
			-1237,
			3210
		],
		[
			-1553,
			743
		],
		[
			334,
			-3542
		],
		[
			1819,
			-2932
		],
		[
			-2096,
			-4165
		],
		[
			362,
			-4759
		],
		[
			-2525,
			-1463
		],
		[
			399,
			-3381
		],
		[
			-6215,
			-7893
		],
		[
			-4743,
			1075
		],
		[
			-4848,
			6521
		],
		[
			-983,
			-3010
		],
		[
			-1643,
			-714
		],
		[
			-8558,
			3491
		],
		[
			-2944,
			-4481
		],
		[
			1107,
			-5157
		],
		[
			-760,
			-1095
		],
		[
			-8313,
			1913
		],
		[
			-3449,
			4510
		],
		[
			34,
			7181
		],
		[
			1378,
			2503
		],
		[
			2690,
			3783
		],
		[
			9616,
			8365
		],
		[
			9351,
			4072
		],
		[
			8812,
			6779
		],
		[
			260,
			636
		],
		[
			-807,
			141
		],
		[
			-3832,
			-660
		],
		[
			-5487,
			-4858
		],
		[
			-10735,
			-5427
		],
		[
			-9651,
			-6571
		],
		[
			-4750,
			-4347
		],
		[
			-6869,
			-880
		],
		[
			-94,
			-1033
		],
		[
			-205,
			-3562
		],
		[
			1668,
			-4533
		],
		[
			7924,
			-9486
		],
		[
			1365,
			-4448
		],
		[
			-1381,
			-1534
		],
		[
			-7910,
			-4181
		],
		[
			-4330,
			-6785
		],
		[
			-1013,
			-8086
		],
		[
			-3813,
			-7527
		],
		[
			-5410,
			-6829
		],
		[
			2804,
			-3700
		],
		[
			-274,
			-4429
		],
		[
			-2423,
			-2092
		],
		[
			-3815,
			-1540
		],
		[
			-14792,
			-1504
		],
		[
			-3279,
			1449
		],
		[
			-471,
			6468
		],
		[
			6837,
			7633
		],
		[
			1441,
			11185
		],
		[
			4634,
			11049
		],
		[
			9944,
			9348
		],
		[
			-4237,
			1022
		],
		[
			-4496,
			3515
		],
		[
			285,
			4057
		],
		[
			2963,
			5293
		],
		[
			-4296,
			-191
		],
		[
			-962,
			1262
		],
		[
			5962,
			8146
		],
		[
			415,
			702
		],
		[
			-346,
			342
		],
		[
			-1448,
			-313
		],
		[
			-868,
			-731
		],
		[
			-4381,
			-4086
		],
		[
			-922,
			725
		],
		[
			2699,
			3361
		],
		[
			5402,
			6625
		],
		[
			5721,
			2976
		],
		[
			-413,
			2936
		],
		[
			822,
			3063
		],
		[
			-3496,
			1235
		],
		[
			3224,
			7646
		],
		[
			-5654,
			2993
		],
		[
			-2585,
			-5426
		],
		[
			-1280,
			-590
		],
		[
			-924,
			2434
		],
		[
			1450,
			5502
		],
		[
			2383,
			2380
		],
		[
			6999,
			3208
		],
		[
			6835,
			7820
		],
		[
			5429,
			3006
		],
		[
			165,
			1860
		],
		[
			-2265,
			1787
		],
		[
			556,
			1912
		],
		[
			13277,
			13623
		],
		[
			9557,
			3842
		],
		[
			-1982,
			3076
		],
		[
			10056,
			8889
		],
		[
			772,
			1840
		],
		[
			-1393,
			-14
		],
		[
			-8574,
			-5577
		],
		[
			-4463,
			-5283
		],
		[
			-5097,
			-1670
		],
		[
			-8716,
			-5012
		],
		[
			-9136,
			-3740
		],
		[
			-8795,
			-7340
		],
		[
			-10068,
			-3199
		],
		[
			-5727,
			1347
		],
		[
			-3132,
			1936
		],
		[
			-13096,
			1622
		],
		[
			-5731,
			3312
		],
		[
			-2811,
			2918
		],
		[
			377,
			2302
		],
		[
			6241,
			2064
		],
		[
			166,
			976
		],
		[
			-14008,
			1752
		],
		[
			-10763,
			132
		],
		[
			-3873,
			2245
		],
		[
			2528,
			3203
		],
		[
			5129,
			1518
		],
		[
			15921,
			1405
		],
		[
			9507,
			-1497
		],
		[
			2471,
			2531
		],
		[
			-690,
			1776
		],
		[
			738,
			1510
		],
		[
			7561,
			4377
		],
		[
			-1011,
			1560
		],
		[
			-8405,
			55
		],
		[
			-2096,
			770
		],
		[
			5994,
			10614
		],
		[
			8272,
			1798
		],
		[
			6357,
			-2348
		],
		[
			2688,
			172
		],
		[
			-3531,
			3991
		],
		[
			-7665,
			2207
		],
		[
			42,
			2898
		],
		[
			5312,
			3283
		],
		[
			5109,
			910
		],
		[
			12854,
			-2253
		],
		[
			-4956,
			3487
		],
		[
			-8666,
			2522
		],
		[
			-152,
			1880
		],
		[
			2590,
			2905
		],
		[
			1002,
			3365
		],
		[
			2372,
			2695
		],
		[
			-3377,
			1429
		],
		[
			-6174,
			629
		],
		[
			-487,
			1811
		],
		[
			4438,
			3154
		],
		[
			6236,
			525
		],
		[
			10137,
			2406
		],
		[
			3474,
			2200
		],
		[
			1041,
			2171
		],
		[
			-2358,
			-411
		],
		[
			-8927,
			-4505
		],
		[
			-4440,
			833
		],
		[
			454,
			2236
		],
		[
			-899,
			939
		],
		[
			-12534,
			-4600
		],
		[
			-4449,
			44
		],
		[
			-2712,
			1858
		],
		[
			-124,
			5740
		],
		[
			-3391,
			2207
		],
		[
			-1042,
			4287
		],
		[
			187,
			667
		],
		[
			1321,
			4350
		],
		[
			2876,
			2448
		],
		[
			10452,
			-2385
		],
		[
			5082,
			-2154
		],
		[
			10280,
			596
		],
		[
			1675,
			754
		],
		[
			-2288,
			1207
		],
		[
			-10705,
			750
		],
		[
			-12089,
			8301
		],
		[
			-240,
			2302
		],
		[
			2205,
			2495
		],
		[
			7691,
			1920
		],
		[
			-1551,
			1610
		],
		[
			-7886,
			3131
		],
		[
			-268,
			8293
		],
		[
			685,
			1132
		],
		[
			3710,
			1243
		],
		[
			4239,
			-393
		],
		[
			5330,
			-5712
		],
		[
			3826,
			-1726
		],
		[
			1847,
			1140
		],
		[
			529,
			1608
		],
		[
			-607,
			1125
		],
		[
			-2868,
			1197
		],
		[
			516,
			1584
		],
		[
			-1332,
			3516
		],
		[
			2153,
			2273
		],
		[
			4243,
			-201
		],
		[
			4481,
			-3216
		],
		[
			4277,
			-1273
		],
		[
			2438,
			335
		],
		[
			2984,
			2228
		],
		[
			2549,
			747
		],
		[
			9373,
			-1793
		],
		[
			-5894,
			3968
		],
		[
			2104,
			887
		],
		[
			13967,
			-2468
		],
		[
			8595,
			-3046
		],
		[
			-515,
			1015
		],
		[
			-5928,
			3333
		],
		[
			-2150,
			2929
		],
		[
			-19883,
			9594
		],
		[
			-3195,
			4050
		],
		[
			2261,
			1318
		],
		[
			7306,
			-2213
		],
		[
			4555,
			917
		],
		[
			1349,
			1472
		],
		[
			153,
			5413
		],
		[
			-9125,
			7445
		],
		[
			-281,
			2190
		],
		[
			7238,
			-936
		],
		[
			5127,
			2000
		],
		[
			7305,
			-603
		],
		[
			7191,
			1543
		],
		[
			-5189,
			6712
		],
		[
			-1704,
			4348
		],
		[
			4362,
			2367
		],
		[
			4533,
			612
		],
		[
			-647,
			2194
		],
		[
			943,
			3111
		],
		[
			-1928,
			2654
		],
		[
			-231,
			2185
		],
		[
			1702,
			2004
		],
		[
			5272,
			3393
		],
		[
			4795,
			5451
		],
		[
			13468,
			-1401
		],
		[
			5251,
			-4371
		],
		[
			4255,
			2590
		],
		[
			8299,
			-3215
		],
		[
			615,
			-2719
		],
		[
			-5518,
			-5035
		],
		[
			0,
			-1354
		],
		[
			5456,
			2459
		],
		[
			6038,
			4515
		],
		[
			2859,
			3622
		],
		[
			2680,
			862
		],
		[
			5882,
			-422
		],
		[
			6199,
			-2750
		],
		[
			916,
			-2136
		],
		[
			-1872,
			-3095
		],
		[
			391,
			-1365
		],
		[
			11002,
			6089
		],
		[
			3730,
			409
		],
		[
			6175,
			-897
		],
		[
			8793,
			2523
		],
		[
			6791,
			272
		],
		[
			4864,
			2189
		],
		[
			4698,
			-1424
		],
		[
			9669,
			-638
		],
		[
			10746,
			735
		],
		[
			14306,
			4748
		],
		[
			7169,
			212
		],
		[
			2500,
			-897
		],
		[
			1892,
			-845
		],
		[
			6422,
			587
		],
		[
			7290,
			-709
		],
		[
			1046,
			973
		],
		[
			548,
			511
		],
		[
			-3231,
			3388
		],
		[
			2059,
			1354
		],
		[
			6755,
			-1624
		],
		[
			10741,
			698
		],
		[
			5387,
			-1306
		],
		[
			10878,
			-711
		],
		[
			-308,
			-2310
		],
		[
			-8058,
			-10139
		],
		[
			1490,
			-2599
		],
		[
			4372,
			-1589
		],
		[
			-24,
			-2451
		],
		[
			-4803,
			-6693
		],
		[
			-6341,
			-4295
		],
		[
			-20404,
			-6805
		],
		[
			-14827,
			-10061
		],
		[
			-884,
			-362
		],
		[
			-25205,
			-10320
		],
		[
			-7995,
			-5456
		],
		[
			-9460,
			-3356
		],
		[
			-2590,
			-2432
		],
		[
			-1717,
			-4658
		],
		[
			-3058,
			-3149
		],
		[
			-7451,
			-963
		],
		[
			-10169,
			1134
		],
		[
			-6805,
			-353
		],
		[
			22261,
			-4230
		],
		[
			9775,
			1286
		],
		[
			7443,
			-1014
		],
		[
			6967,
			2288
		],
		[
			1628,
			-373
		],
		[
			-2955,
			-3522
		],
		[
			-14808,
			-10424
		],
		[
			-2783,
			-56
		],
		[
			-2340,
			1781
		],
		[
			-2421,
			425
		],
		[
			-10086,
			-3188
		],
		[
			-7828,
			-991
		],
		[
			-8506,
			-2829
		],
		[
			-4394,
			-3347
		],
		[
			14497,
			4306
		],
		[
			8241,
			-325
		],
		[
			8001,
			1053
		],
		[
			2127,
			-808
		],
		[
			-7761,
			-7878
		],
		[
			-8056,
			-3922
		],
		[
			-4038,
			-3220
		],
		[
			-15673,
			-1248
		],
		[
			-4260,
			-925
		]
	],
	[
		[
			5683190,
			7959195
		],
		[
			-2130,
			-1025
		],
		[
			-3391,
			66
		],
		[
			-863,
			-5449
		],
		[
			-5776,
			-2551
		],
		[
			4840,
			-2208
		],
		[
			1206,
			-2150
		],
		[
			580,
			-4452
		],
		[
			-2610,
			-1975
		],
		[
			-5539,
			-266
		],
		[
			-2300,
			-409
		],
		[
			1894,
			-2259
		],
		[
			-1396,
			-2847
		],
		[
			-8802,
			-2798
		],
		[
			-5122,
			1858
		],
		[
			-1394,
			-1498
		],
		[
			-2193,
			166
		],
		[
			-4749,
			4055
		],
		[
			-1797,
			3368
		],
		[
			-1772,
			-354
		],
		[
			-444,
			-740
		],
		[
			1379,
			-2651
		],
		[
			3385,
			-3357
		],
		[
			2255,
			-6872
		],
		[
			-1985,
			-130
		],
		[
			-4345,
			2338
		],
		[
			-1684,
			-1316
		],
		[
			-677,
			1551
		],
		[
			-2990,
			203
		],
		[
			-637,
			-1436
		],
		[
			2971,
			-2343
		],
		[
			363,
			-1836
		],
		[
			-4614,
			-1774
		],
		[
			-4011,
			-69
		],
		[
			-4446,
			-3564
		],
		[
			-7871,
			-3472
		],
		[
			-13109,
			6616
		],
		[
			-1334,
			1706
		],
		[
			5531,
			11
		],
		[
			6645,
			3526
		],
		[
			4448,
			1023
		],
		[
			1109,
			2857
		],
		[
			6488,
			1913
		],
		[
			-2722,
			1768
		],
		[
			-14837,
			2465
		],
		[
			-4572,
			2584
		],
		[
			253,
			1456
		],
		[
			5136,
			3149
		],
		[
			-1884,
			3094
		],
		[
			-4051,
			1227
		],
		[
			-2433,
			4739
		],
		[
			2294,
			4978
		],
		[
			4575,
			1367
		],
		[
			165,
			2200
		],
		[
			1264,
			1891
		],
		[
			8713,
			-283
		],
		[
			2148,
			-1158
		],
		[
			1048,
			-2135
		],
		[
			4106,
			-791
		],
		[
			2055,
			1636
		],
		[
			-2391,
			4283
		],
		[
			1410,
			1816
		],
		[
			6691,
			-3697
		],
		[
			2331,
			-2617
		],
		[
			2920,
			-818
		],
		[
			-730,
			1936
		],
		[
			-2193,
			468
		],
		[
			257,
			1334
		],
		[
			-3265,
			3154
		],
		[
			-709,
			2323
		],
		[
			982,
			1275
		],
		[
			13721,
			5211
		],
		[
			4981,
			145
		],
		[
			5713,
			1550
		],
		[
			4704,
			3232
		],
		[
			5524,
			2268
		],
		[
			14770,
			5967
		],
		[
			4631,
			3041
		],
		[
			1850,
			-403
		],
		[
			5065,
			-3684
		],
		[
			1645,
			-4799
		],
		[
			-2998,
			-4897
		],
		[
			1609,
			-3344
		],
		[
			-12485,
			-7680
		],
		[
			-1273,
			-2637
		],
		[
			869,
			-3070
		]
	],
	[
		[
			5700407,
			7889056
		],
		[
			394,
			-4717
		],
		[
			-2942,
			-4878
		],
		[
			3357,
			-1461
		],
		[
			3078,
			-7809
		],
		[
			4519,
			-1128
		],
		[
			1394,
			-2460
		],
		[
			3354,
			-155
		],
		[
			1350,
			806
		],
		[
			-1230,
			1840
		],
		[
			225,
			1127
		],
		[
			4209,
			609
		],
		[
			4434,
			-2255
		],
		[
			-2227,
			-3198
		],
		[
			5087,
			-1943
		],
		[
			15533,
			2355
		],
		[
			7243,
			-1122
		],
		[
			844,
			-897
		],
		[
			-417,
			-1647
		],
		[
			-2782,
			-3435
		],
		[
			-9745,
			-3172
		],
		[
			-222,
			-2218
		],
		[
			-1743,
			-1996
		],
		[
			-4879,
			-2618
		],
		[
			-5866,
			-4722
		],
		[
			-8603,
			-2228
		],
		[
			-1892,
			2255
		],
		[
			331,
			1557
		],
		[
			2550,
			4521
		],
		[
			6418,
			4846
		],
		[
			61,
			798
		],
		[
			-4889,
			529
		],
		[
			-4488,
			2630
		],
		[
			-6754,
			-5996
		],
		[
			-1238,
			653
		],
		[
			-1596,
			2910
		],
		[
			-2415,
			1011
		],
		[
			-14822,
			-1991
		],
		[
			-1679,
			2198
		],
		[
			-5289,
			1303
		],
		[
			-1326,
			3165
		],
		[
			-5456,
			1858
		],
		[
			-2781,
			2775
		],
		[
			-693,
			691
		],
		[
			269,
			2177
		],
		[
			424,
			310
		],
		[
			1095,
			802
		],
		[
			5851,
			575
		],
		[
			-1226,
			1627
		],
		[
			-5204,
			1075
		],
		[
			-516,
			376
		],
		[
			-3640,
			2650
		],
		[
			-4448,
			196
		],
		[
			-1436,
			-269
		],
		[
			-2145,
			-3348
		],
		[
			-2639,
			-374
		],
		[
			-9677,
			2680
		],
		[
			-7077,
			5207
		],
		[
			-613,
			1459
		],
		[
			846,
			1437
		],
		[
			2164,
			856
		],
		[
			337,
			2787
		],
		[
			1868,
			1356
		],
		[
			7918,
			-5254
		],
		[
			3214,
			-274
		],
		[
			-1104,
			4223
		],
		[
			3486,
			1965
		],
		[
			-5239,
			4250
		],
		[
			1694,
			4502
		],
		[
			3407,
			-1291
		],
		[
			4200,
			-3857
		],
		[
			8884,
			-3974
		],
		[
			0,
			-260
		],
		[
			582,
			0
		],
		[
			1185,
			-530
		],
		[
			1769,
			530
		],
		[
			3252,
			973
		],
		[
			2082,
			-973
		],
		[
			3316,
			-1551
		],
		[
			-69,
			1118
		],
		[
			-418,
			433
		],
		[
			-4399,
			4557
		],
		[
			467,
			3435
		],
		[
			-2992,
			5444
		],
		[
			4759,
			3576
		],
		[
			1820,
			2374
		],
		[
			1633,
			451
		],
		[
			6254,
			-2568
		],
		[
			3701,
			-3369
		],
		[
			4595,
			-2390
		],
		[
			2644,
			-2885
		],
		[
			719,
			-8625
		]
	],
	[
		[
			6184532,
			8199801
		],
		[
			-1734,
			-2900
		],
		[
			556,
			-3014
		],
		[
			-3072,
			-1923
		],
		[
			1386,
			-2093
		],
		[
			-663,
			-2589
		],
		[
			1277,
			-2889
		],
		[
			-2703,
			-2645
		],
		[
			-1194,
			-2664
		],
		[
			2020,
			369
		],
		[
			2182,
			2679
		],
		[
			4910,
			1140
		],
		[
			-1591,
			2024
		],
		[
			863,
			1301
		],
		[
			4492,
			1059
		],
		[
			2493,
			-672
		],
		[
			3893,
			-4058
		],
		[
			-358,
			-1605
		],
		[
			-2506,
			-138
		],
		[
			-1174,
			-1069
		],
		[
			3814,
			-568
		],
		[
			1613,
			-1544
		],
		[
			2467,
			1055
		],
		[
			1735,
			1878
		],
		[
			1843,
			64
		],
		[
			3112,
			2004
		],
		[
			1426,
			-180
		],
		[
			-1148,
			-1521
		],
		[
			-6667,
			-3926
		],
		[
			770,
			-890
		],
		[
			2122,
			1260
		],
		[
			2139,
			-373
		],
		[
			-176,
			-2819
		],
		[
			-9257,
			-998
		],
		[
			806,
			-1755
		],
		[
			7482,
			-1052
		],
		[
			642,
			-936
		],
		[
			-5720,
			-2922
		],
		[
			531,
			-813
		],
		[
			3092,
			-235
		],
		[
			347,
			-939
		],
		[
			-6092,
			-1888
		],
		[
			-1131,
			1587
		],
		[
			-2060,
			372
		],
		[
			-1413,
			-2795
		],
		[
			1397,
			-734
		],
		[
			153,
			-1424
		],
		[
			1556,
			-134
		],
		[
			-435,
			-1909
		],
		[
			2697,
			-152
		],
		[
			177,
			-2453
		],
		[
			1137,
			-1248
		],
		[
			-1174,
			-1832
		],
		[
			-4107,
			-1114
		],
		[
			-1587,
			-3837
		],
		[
			347,
			-1766
		],
		[
			2372,
			-2951
		],
		[
			-3826,
			-690
		],
		[
			-20,
			-1440
		],
		[
			2127,
			-2424
		],
		[
			-191,
			-1607
		],
		[
			-1581,
			1339
		],
		[
			-4887,
			-329
		],
		[
			1270,
			-1430
		],
		[
			90,
			-1494
		],
		[
			-483,
			-2148
		],
		[
			-2011,
			-1816
		],
		[
			985,
			-1245
		],
		[
			-913,
			-2623
		],
		[
			1059,
			-1113
		],
		[
			-464,
			-1148
		],
		[
			-2229,
			1346
		],
		[
			-1367,
			-742
		],
		[
			92,
			1938
		],
		[
			-1182,
			1334
		],
		[
			-5232,
			-524
		],
		[
			-1248,
			1586
		],
		[
			1924,
			1473
		],
		[
			884,
			2983
		],
		[
			2262,
			-291
		],
		[
			433,
			2749
		],
		[
			-971,
			2178
		],
		[
			2120,
			2008
		],
		[
			4786,
			10299
		],
		[
			-506,
			1043
		],
		[
			-2472,
			-5058
		],
		[
			-2495,
			-2736
		],
		[
			-464,
			233
		],
		[
			306,
			1580
		],
		[
			-1781,
			-847
		],
		[
			-614,
			1366
		],
		[
			1243,
			967
		],
		[
			682,
			1822
		],
		[
			2872,
			431
		],
		[
			753,
			1597
		],
		[
			490,
			5245
		],
		[
			-2531,
			-32
		],
		[
			822,
			4817
		],
		[
			-3585,
			-1097
		],
		[
			-2008,
			2670
		],
		[
			-1730,
			250
		],
		[
			1603,
			-4058
		],
		[
			-2717,
			86
		],
		[
			-1890,
			-2758
		],
		[
			-2875,
			3
		],
		[
			-2237,
			-2036
		],
		[
			-7342,
			3287
		],
		[
			574,
			1418
		],
		[
			3103,
			1138
		],
		[
			-1293,
			1824
		],
		[
			-3531,
			-2327
		],
		[
			-3273,
			965
		],
		[
			-4003,
			-670
		],
		[
			-5769,
			2368
		],
		[
			-1301,
			2122
		],
		[
			351,
			3590
		],
		[
			2123,
			987
		],
		[
			5307,
			302
		],
		[
			4448,
			-1104
		],
		[
			2019,
			389
		],
		[
			953,
			1326
		],
		[
			2794,
			358
		],
		[
			2991,
			-1890
		],
		[
			1692,
			1337
		],
		[
			-1280,
			1404
		],
		[
			541,
			1215
		],
		[
			7459,
			-2209
		],
		[
			2640,
			-1963
		],
		[
			899,
			337
		],
		[
			-11,
			3726
		],
		[
			5108,
			2542
		],
		[
			-79,
			508
		],
		[
			-3310,
			510
		],
		[
			-1236,
			1858
		],
		[
			-1518,
			-652
		],
		[
			-1999,
			-2844
		],
		[
			-2584,
			-596
		],
		[
			-3641,
			840
		],
		[
			-970,
			1481
		],
		[
			2030,
			1472
		],
		[
			4518,
			80
		],
		[
			-1439,
			2464
		],
		[
			-3177,
			1161
		],
		[
			-46,
			2202
		],
		[
			-1768,
			3429
		],
		[
			-2989,
			-1663
		],
		[
			-1961,
			1786
		],
		[
			-8863,
			-248
		],
		[
			-1739,
			1126
		],
		[
			1361,
			1339
		],
		[
			3190,
			580
		],
		[
			1469,
			2920
		],
		[
			1931,
			1103
		],
		[
			5814,
			-2603
		],
		[
			357,
			354
		],
		[
			-705,
			1615
		],
		[
			4309,
			3318
		],
		[
			2416,
			3651
		],
		[
			6958,
			-444
		],
		[
			1200,
			1459
		],
		[
			1641,
			409
		],
		[
			1451,
			-1569
		]
	],
	[
		[
			5736164,
			7789505
		],
		[
			3000,
			-1898
		],
		[
			4067,
			-639
		],
		[
			4114,
			-2848
		],
		[
			2270,
			-377
		],
		[
			572,
			-1136
		],
		[
			-1725,
			-1335
		],
		[
			552,
			-1783
		],
		[
			-4245,
			-4240
		],
		[
			-8605,
			-3933
		],
		[
			-4878,
			-1317
		],
		[
			-2821,
			216
		],
		[
			-857,
			1039
		],
		[
			2022,
			2199
		],
		[
			-2038,
			610
		],
		[
			-6028,
			-3005
		],
		[
			-5137,
			-458
		],
		[
			-5940,
			-2416
		],
		[
			-3506,
			428
		],
		[
			-6345,
			-1185
		],
		[
			-9329,
			-201
		],
		[
			-3815,
			-1620
		],
		[
			-3915,
			270
		],
		[
			-5500,
			2388
		],
		[
			617,
			3446
		],
		[
			2047,
			1493
		],
		[
			4786,
			-329
		],
		[
			4797,
			-2179
		],
		[
			817,
			2020
		],
		[
			9342,
			-107
		],
		[
			12117,
			2582
		],
		[
			1430,
			1265
		],
		[
			-1558,
			1495
		],
		[
			-8150,
			-2516
		],
		[
			-8917,
			-422
		],
		[
			-836,
			1171
		],
		[
			494,
			1204
		],
		[
			4765,
			2725
		],
		[
			2591,
			3262
		],
		[
			6845,
			498
		],
		[
			4143,
			1898
		],
		[
			1497,
			1912
		],
		[
			-1526,
			634
		],
		[
			-10731,
			-1959
		],
		[
			-3120,
			2457
		],
		[
			-6052,
			2225
		],
		[
			-6958,
			237
		],
		[
			-4271,
			1323
		],
		[
			-233,
			1263
		],
		[
			3537,
			2245
		],
		[
			-1632,
			1084
		],
		[
			-56,
			1748
		],
		[
			8192,
			522
		],
		[
			1424,
			2327
		],
		[
			9026,
			1981
		],
		[
			8979,
			-3296
		],
		[
			8385,
			-9363
		],
		[
			16296,
			-1605
		]
	],
	[
		[
			5704804,
			7722792
		],
		[
			1349,
			-4739
		],
		[
			3978,
			-3115
		],
		[
			2474,
			-8037
		],
		[
			-4505,
			-2327
		],
		[
			-533,
			-821
		],
		[
			-396,
			-610
		],
		[
			-6170,
			-1551
		],
		[
			573,
			-1093
		],
		[
			-417,
			-1216
		],
		[
			-1442,
			1158
		],
		[
			649,
			1072
		],
		[
			-6006,
			213
		],
		[
			-3168,
			-3519
		],
		[
			-4257,
			-1503
		],
		[
			-5246,
			1654
		],
		[
			1302,
			3500
		],
		[
			1895,
			1589
		],
		[
			1512,
			306
		],
		[
			2059,
			417
		],
		[
			177,
			1623
		],
		[
			-2887,
			3557
		],
		[
			-3990,
			951
		],
		[
			-513,
			799
		],
		[
			1134,
			1811
		],
		[
			6621,
			2460
		],
		[
			589,
			782
		],
		[
			-773,
			627
		],
		[
			-7939,
			237
		],
		[
			-3750,
			-4640
		],
		[
			-4764,
			-3777
		],
		[
			-2853,
			-1243
		],
		[
			-2837,
			-1236
		],
		[
			-3392,
			1346
		],
		[
			2032,
			2294
		],
		[
			161,
			2218
		],
		[
			3773,
			3956
		],
		[
			-209,
			1019
		],
		[
			-1919,
			1186
		],
		[
			2061,
			1758
		],
		[
			330,
			1606
		],
		[
			264,
			1288
		],
		[
			809,
			1371
		],
		[
			4198,
			152
		],
		[
			4503,
			1934
		],
		[
			2658,
			1075
		],
		[
			462,
			-327
		],
		[
			-136,
			-748
		],
		[
			-1596,
			-4039
		],
		[
			748,
			-890
		],
		[
			1333,
			19
		],
		[
			-322,
			786
		],
		[
			536,
			667
		],
		[
			1230,
			3187
		],
		[
			1391,
			270
		],
		[
			9979,
			4803
		],
		[
			5791,
			1134
		],
		[
			1342,
			-673
		],
		[
			-307,
			-3455
		],
		[
			701,
			-1809
		],
		[
			1713,
			-3457
		]
	],
	[
		[
			6014679,
			8045146
		],
		[
			-1001,
			-2037
		],
		[
			-3773,
			244
		],
		[
			-1075,
			-1939
		],
		[
			-2961,
			-994
		],
		[
			-1027,
			-1204
		],
		[
			4243,
			-917
		],
		[
			2374,
			1248
		],
		[
			2824,
			68
		],
		[
			4895,
			-2262
		],
		[
			2238,
			2214
		],
		[
			2148,
			-57
		],
		[
			557,
			-732
		],
		[
			-549,
			-3376
		],
		[
			1843,
			-404
		],
		[
			467,
			0
		],
		[
			3898,
			2058
		],
		[
			4944,
			524
		],
		[
			940,
			-751
		],
		[
			-322,
			-1293
		],
		[
			-2752,
			-538
		],
		[
			-2003,
			-391
		],
		[
			1622,
			-1578
		],
		[
			61,
			-1657
		],
		[
			2280,
			12
		],
		[
			1587,
			-1280
		],
		[
			-3853,
			-3770
		],
		[
			-4859,
			2154
		],
		[
			-606,
			-44
		],
		[
			-557,
			-1608
		],
		[
			-1855,
			336
		],
		[
			486,
			1132
		],
		[
			-2685,
			-196
		],
		[
			-3946,
			4452
		],
		[
			43,
			2047
		],
		[
			-983,
			308
		],
		[
			-4093,
			-1936
		],
		[
			-5893,
			-373
		],
		[
			-5166,
			-2085
		],
		[
			-7704,
			-145
		],
		[
			-2181,
			1793
		],
		[
			-326,
			2829
		],
		[
			-1757,
			1400
		],
		[
			-1931,
			-1267
		],
		[
			-1123,
			-133
		],
		[
			-1421,
			-74
		],
		[
			-655,
			-1059
		],
		[
			-2344,
			243
		],
		[
			-1933,
			890
		],
		[
			-763,
			352
		],
		[
			-1354,
			2964
		],
		[
			1092,
			4956
		],
		[
			1544,
			887
		],
		[
			-1372,
			5066
		],
		[
			3687,
			3107
		],
		[
			11076,
			1630
		],
		[
			7465,
			-2349
		],
		[
			7326,
			-1840
		],
		[
			486,
			-1498
		],
		[
			3900,
			-1864
		],
		[
			797,
			-1263
		]
	],
	[
		[
			5803767,
			7682900
		],
		[
			-6807,
			-679
		],
		[
			-6079,
			321
		],
		[
			-3535,
			1218
		],
		[
			-777,
			201
		],
		[
			-2751,
			1274
		],
		[
			-1223,
			1713
		],
		[
			-89,
			1467
		],
		[
			-2815,
			1001
		],
		[
			447,
			1198
		],
		[
			-362,
			1072
		],
		[
			1115,
			1430
		],
		[
			-627,
			2645
		],
		[
			-2262,
			1532
		],
		[
			-2383,
			2609
		],
		[
			-136,
			630
		],
		[
			224,
			951
		],
		[
			865,
			808
		],
		[
			383,
			1462
		],
		[
			1103,
			2105
		],
		[
			799,
			701
		],
		[
			3191,
			1041
		],
		[
			1559,
			1617
		],
		[
			2083,
			113
		],
		[
			269,
			832
		],
		[
			1214,
			481
		],
		[
			7358,
			-1596
		],
		[
			4905,
			-3253
		],
		[
			996,
			-2041
		],
		[
			1672,
			-3869
		],
		[
			-1976,
			-2826
		],
		[
			3639,
			-1139
		],
		[
			516,
			-162
		],
		[
			1895,
			-1489
		],
		[
			-2411,
			-1743
		],
		[
			-1167,
			-843
		],
		[
			1167,
			-576
		],
		[
			3001,
			-1485
		],
		[
			-822,
			-2078
		],
		[
			1029,
			-2487
		],
		[
			-2500,
			-2085
		],
		[
			-708,
			-71
		]
	],
	[
		[
			5598614,
			7905618
		],
		[
			-2714,
			-2703
		],
		[
			81,
			-1727
		],
		[
			4524,
			-3107
		],
		[
			3113,
			-995
		],
		[
			-3558,
			-6597
		],
		[
			-6313,
			-1623
		],
		[
			655,
			-985
		],
		[
			3775,
			668
		],
		[
			668,
			-927
		],
		[
			-1523,
			-1275
		],
		[
			-4017,
			85
		],
		[
			-841,
			-2211
		],
		[
			-1819,
			-1221
		],
		[
			3339,
			-1227
		],
		[
			1563,
			-1893
		],
		[
			-156,
			-1627
		],
		[
			-1955,
			-386
		],
		[
			-1132,
			1479
		],
		[
			-1893,
			-1013
		],
		[
			-3099,
			1318
		],
		[
			-3981,
			-436
		],
		[
			-6570,
			2057
		],
		[
			-1930,
			2214
		],
		[
			508,
			2218
		],
		[
			4026,
			1812
		],
		[
			9252,
			-1526
		],
		[
			667,
			470
		],
		[
			-698,
			1360
		],
		[
			639,
			1431
		],
		[
			-5239,
			848
		],
		[
			-4514,
			3898
		],
		[
			-6173,
			2421
		],
		[
			-5907,
			-413
		],
		[
			-4850,
			2610
		],
		[
			292,
			1169
		],
		[
			4727,
			4740
		],
		[
			3904,
			-76
		],
		[
			4996,
			-1702
		],
		[
			5918,
			3911
		],
		[
			639,
			-1881
		],
		[
			1705,
			-467
		],
		[
			1316,
			1435
		],
		[
			779,
			-80
		],
		[
			233,
			-1991
		],
		[
			2941,
			2181
		],
		[
			5706,
			1850
		],
		[
			2916,
			-2086
		]
	],
	[
		[
			5718997,
			7719147
		],
		[
			-6245,
			-631
		],
		[
			-5174,
			2258
		],
		[
			-1624,
			5729
		],
		[
			1040,
			2222
		],
		[
			3860,
			3464
		],
		[
			7914,
			2299
		],
		[
			-2854,
			2483
		],
		[
			1135,
			1723
		],
		[
			3320,
			3650
		],
		[
			20687,
			10017
		],
		[
			2515,
			890
		],
		[
			1608,
			-451
		],
		[
			809,
			-1457
		],
		[
			-520,
			-2155
		],
		[
			-10400,
			-10494
		],
		[
			-3095,
			-3242
		],
		[
			-4486,
			-7130
		],
		[
			-5903,
			-3846
		],
		[
			-2587,
			-5329
		]
	],
	[
		[
			5592743,
			7850389
		],
		[
			-1431,
			-1439
		],
		[
			-12182,
			319
		],
		[
			-2044,
			977
		],
		[
			-1484,
			1442
		],
		[
			-3992,
			10435
		],
		[
			1502,
			5182
		],
		[
			2061,
			1625
		],
		[
			213,
			2582
		],
		[
			-2447,
			5623
		],
		[
			2725,
			1287
		],
		[
			5375,
			161
		],
		[
			6547,
			-2201
		],
		[
			3687,
			-3400
		],
		[
			-1507,
			-1555
		],
		[
			4799,
			-2396
		],
		[
			226,
			-1726
		],
		[
			-3481,
			-1736
		],
		[
			-2292,
			-3446
		],
		[
			-2273,
			-1372
		],
		[
			3177,
			-3056
		],
		[
			-137,
			-2467
		],
		[
			-5775,
			-1826
		],
		[
			42,
			-524
		],
		[
			6129,
			-899
		],
		[
			2562,
			-1590
		]
	],
	[
		[
			6215929,
			8204473
		],
		[
			-527,
			-2101
		],
		[
			-3413,
			715
		],
		[
			-1872,
			1155
		],
		[
			132,
			-1314
		],
		[
			2712,
			-1942
		],
		[
			-1869,
			-2449
		],
		[
			3530,
			-2192
		],
		[
			-1269,
			-2552
		],
		[
			-2573,
			-578
		],
		[
			1864,
			-1609
		],
		[
			-895,
			-3319
		],
		[
			-3388,
			-438
		],
		[
			-2488,
			618
		],
		[
			-1319,
			-1312
		],
		[
			-2048,
			293
		],
		[
			-3719,
			1152
		],
		[
			-1856,
			2549
		],
		[
			-95,
			3596
		],
		[
			-1413,
			803
		],
		[
			641,
			1473
		],
		[
			-774,
			1748
		],
		[
			1441,
			3436
		],
		[
			2259,
			1616
		],
		[
			1328,
			-2013
		],
		[
			489,
			94
		],
		[
			1699,
			8284
		],
		[
			529,
			1067
		],
		[
			1310,
			274
		],
		[
			9316,
			-275
		],
		[
			1557,
			-2244
		],
		[
			711,
			-4535
		]
	],
	[
		[
			5993607,
			8026639
		],
		[
			-479,
			-995
		],
		[
			359,
			-701
		],
		[
			1752,
			-742
		],
		[
			-361,
			-1658
		],
		[
			617,
			-8
		],
		[
			14,
			-1190
		],
		[
			1808,
			-76
		],
		[
			736,
			-478
		],
		[
			-2906,
			-967
		],
		[
			-582,
			-1053
		],
		[
			949,
			-168
		],
		[
			1704,
			347
		],
		[
			1458,
			-99
		],
		[
			1234,
			488
		],
		[
			1310,
			-311
		],
		[
			-778,
			-1940
		],
		[
			-4221,
			-653
		],
		[
			-1294,
			78
		],
		[
			-2240,
			776
		],
		[
			1579,
			1423
		],
		[
			-201,
			469
		],
		[
			-2843,
			-220
		],
		[
			-1042,
			-453
		],
		[
			-509,
			-921
		],
		[
			2976,
			-1026
		],
		[
			-804,
			-593
		],
		[
			-1951,
			830
		],
		[
			-3867,
			-418
		],
		[
			-3230,
			2221
		],
		[
			-2,
			645
		],
		[
			-1092,
			771
		],
		[
			378,
			449
		],
		[
			-3814,
			1942
		],
		[
			-926,
			2099
		],
		[
			225,
			586
		],
		[
			-1502,
			687
		],
		[
			-1327,
			-126
		],
		[
			-2885,
			208
		],
		[
			-236,
			452
		],
		[
			1140,
			1433
		],
		[
			759,
			2027
		],
		[
			1371,
			1135
		],
		[
			2411,
			174
		],
		[
			2508,
			791
		],
		[
			2742,
			-392
		],
		[
			13,
			-892
		],
		[
			1314,
			-296
		],
		[
			-262,
			-874
		],
		[
			3028,
			-224
		],
		[
			5378,
			-1762
		],
		[
			1591,
			-795
		]
	],
	[
		[
			6228053,
			8220384
		],
		[
			448,
			-223
		],
		[
			2663,
			2373
		],
		[
			4902,
			-726
		],
		[
			1397,
			-1145
		],
		[
			-1962,
			-1048
		],
		[
			1394,
			-1168
		],
		[
			-215,
			-1363
		],
		[
			-3785,
			64
		],
		[
			1422,
			-2333
		],
		[
			-2154,
			-228
		],
		[
			-43,
			-528
		],
		[
			1198,
			-328
		],
		[
			-58,
			-1269
		],
		[
			-4491,
			-3036
		],
		[
			206,
			-848
		],
		[
			2516,
			-709
		],
		[
			-591,
			-1005
		],
		[
			-1853,
			-412
		],
		[
			-5187,
			1026
		],
		[
			-3257,
			-1174
		],
		[
			-3091,
			1044
		],
		[
			601,
			1292
		],
		[
			-822,
			1800
		],
		[
			2103,
			183
		],
		[
			-451,
			1839
		],
		[
			1649,
			1224
		],
		[
			838,
			2517
		],
		[
			-876,
			2074
		],
		[
			6238,
			4757
		],
		[
			1399,
			-937
		],
		[
			-138,
			-1713
		]
	],
	[
		[
			5813912,
			7712654
		],
		[
			-455,
			-1027
		],
		[
			-2501,
			157
		],
		[
			-3158,
			3312
		],
		[
			-4031,
			1380
		],
		[
			-541,
			184
		],
		[
			-1856,
			3555
		],
		[
			107,
			2914
		],
		[
			-5669,
			3120
		],
		[
			-1979,
			2588
		],
		[
			3248,
			2083
		],
		[
			10043,
			-4671
		],
		[
			-542,
			-1276
		],
		[
			6207,
			-3079
		],
		[
			1733,
			-5595
		],
		[
			-1773,
			-1889
		],
		[
			1167,
			-1756
		]
	],
	[
		[
			5688804,
			7834932
		],
		[
			-5790,
			-2638
		],
		[
			-4416,
			1677
		],
		[
			-1426,
			1986
		],
		[
			-5382,
			2227
		],
		[
			-1820,
			1279
		],
		[
			6141,
			3716
		],
		[
			5687,
			1344
		],
		[
			7256,
			-2368
		],
		[
			688,
			-1033
		],
		[
			-800,
			-1212
		],
		[
			1633,
			-876
		],
		[
			36,
			-850
		],
		[
			-1807,
			-3252
		]
	],
	[
		[
			5642000,
			7792885
		],
		[
			65,
			-1425
		],
		[
			-7355,
			-598
		],
		[
			-584,
			-757
		],
		[
			1085,
			-972
		],
		[
			-1570,
			-1377
		],
		[
			-6261,
			-478
		],
		[
			-1462,
			-1203
		],
		[
			-853,
			-2966
		],
		[
			-7679,
			1248
		],
		[
			103,
			2961
		],
		[
			-845,
			1723
		],
		[
			1140,
			1319
		],
		[
			3035,
			1135
		],
		[
			7129,
			-720
		],
		[
			5330,
			2110
		],
		[
			1263,
			0
		],
		[
			1168,
			-603
		],
		[
			1419,
			152
		],
		[
			625,
			451
		],
		[
			1137,
			414
		],
		[
			785,
			897
		],
		[
			1210,
			-1016
		],
		[
			1115,
			-295
		]
	],
	[
		[
			5660090,
			7798387
		],
		[
			-6146,
			-1501
		],
		[
			-1361,
			501
		],
		[
			-1302,
			-1073
		],
		[
			-3042,
			599
		],
		[
			-1962,
			-1529
		],
		[
			-1576,
			850
		],
		[
			2040,
			1544
		],
		[
			3044,
			733
		],
		[
			4780,
			4013
		],
		[
			7859,
			3785
		],
		[
			3905,
			1233
		],
		[
			3178,
			-109
		],
		[
			89,
			-25
		],
		[
			325,
			-660
		],
		[
			-414,
			-947
		],
		[
			-4159,
			-4671
		],
		[
			-2383,
			-179
		],
		[
			-2875,
			-2564
		]
	],
	[
		[
			5577388,
			7837366
		],
		[
			-565,
			-536
		],
		[
			-1436,
			81
		],
		[
			-5395,
			-3529
		],
		[
			-4182,
			524
		],
		[
			-3457,
			-631
		],
		[
			675,
			-1159
		],
		[
			-923,
			-1035
		],
		[
			1690,
			-329
		],
		[
			-144,
			-687
		],
		[
			-3313,
			-214
		],
		[
			-564,
			580
		],
		[
			602,
			947
		],
		[
			-2063,
			916
		],
		[
			1333,
			3111
		],
		[
			3803,
			1192
		],
		[
			380,
			1587
		],
		[
			792,
			1815
		],
		[
			4628,
			1528
		],
		[
			1077,
			2512
		],
		[
			2055,
			-1124
		],
		[
			-1119,
			-2105
		],
		[
			4340,
			-2626
		],
		[
			1786,
			-818
		]
	],
	[
		[
			5716264,
			7888815
		],
		[
			596,
			-1756
		],
		[
			-1824,
			-2840
		],
		[
			-2781,
			-2350
		],
		[
			1234,
			-4163
		],
		[
			2065,
			-2179
		],
		[
			3,
			-1042
		],
		[
			-2244,
			-2151
		],
		[
			-2920,
			-689
		],
		[
			-1460,
			393
		],
		[
			-2169,
			2348
		],
		[
			725,
			2585
		],
		[
			-571,
			3995
		],
		[
			2044,
			3253
		],
		[
			4140,
			394
		],
		[
			-918,
			2999
		],
		[
			2052,
			-79
		],
		[
			2028,
			1282
		]
	],
	[
		[
			6007569,
			8058731
		],
		[
			1145,
			-493
		],
		[
			1331,
			173
		],
		[
			286,
			-1397
		],
		[
			2136,
			-531
		],
		[
			3290,
			103
		],
		[
			1474,
			775
		],
		[
			1364,
			58
		],
		[
			1236,
			-1202
		],
		[
			1640,
			-878
		],
		[
			1022,
			385
		],
		[
			1882,
			-761
		],
		[
			-1232,
			-3388
		],
		[
			-1641,
			1089
		],
		[
			-683,
			2073
		],
		[
			-633,
			-315
		],
		[
			-1601,
			1751
		],
		[
			-1241,
			-1240
		],
		[
			1471,
			-2404
		],
		[
			-376,
			-352
		],
		[
			-2775,
			-712
		],
		[
			-4805,
			-34
		],
		[
			-3345,
			1136
		],
		[
			-1527,
			742
		],
		[
			-938,
			1131
		],
		[
			-1306,
			474
		],
		[
			-352,
			1047
		],
		[
			1280,
			639
		],
		[
			291,
			804
		],
		[
			2607,
			1327
		]
	],
	[
		[
			6026294,
			8022076
		],
		[
			224,
			-1183
		],
		[
			-2105,
			-994
		],
		[
			-601,
			-940
		],
		[
			-1523,
			-856
		],
		[
			805,
			-825
		],
		[
			-631,
			-1237
		],
		[
			-1118,
			-707
		],
		[
			2911,
			-1314
		],
		[
			-1086,
			-1845
		],
		[
			-4122,
			-498
		],
		[
			-604,
			980
		],
		[
			-2427,
			1500
		],
		[
			1031,
			794
		],
		[
			-83,
			2296
		],
		[
			-1268,
			200
		],
		[
			-2617,
			1801
		],
		[
			1117,
			715
		],
		[
			1237,
			-1163
		],
		[
			1533,
			645
		],
		[
			210,
			504
		],
		[
			-1468,
			572
		],
		[
			-873,
			753
		],
		[
			-2397,
			-769
		],
		[
			-403,
			316
		],
		[
			1606,
			1137
		],
		[
			2191,
			-322
		],
		[
			2880,
			621
		],
		[
			667,
			-840
		],
		[
			1154,
			585
		],
		[
			3896,
			633
		],
		[
			1864,
			-559
		]
	],
	[
		[
			6067838,
			8066323
		],
		[
			-3240,
			-2061
		],
		[
			-2173,
			-348
		],
		[
			-1156,
			-1342
		],
		[
			-2664,
			198
		],
		[
			-493,
			-2213
		],
		[
			-1136,
			772
		],
		[
			-183,
			1246
		],
		[
			-1860,
			-599
		],
		[
			-2662,
			37
		],
		[
			-6289,
			-4247
		],
		[
			-622,
			447
		],
		[
			554,
			2323
		],
		[
			8498,
			4356
		],
		[
			663,
			967
		],
		[
			-200,
			2001
		],
		[
			4817,
			612
		],
		[
			237,
			-443
		],
		[
			-2000,
			-2313
		],
		[
			1739,
			-684
		],
		[
			9369,
			2619
		],
		[
			3064,
			1900
		],
		[
			1880,
			-2304
		],
		[
			-6143,
			-924
		]
	],
	[
		[
			6024943,
			8068531
		],
		[
			2402,
			-2810
		],
		[
			2254,
			-478
		],
		[
			1151,
			-1475
		],
		[
			-3705,
			-1705
		],
		[
			96,
			2023
		],
		[
			-4192,
			2752
		],
		[
			-2768,
			655
		],
		[
			-1117,
			-225
		],
		[
			563,
			-1219
		],
		[
			-3265,
			-978
		],
		[
			-3212,
			1505
		],
		[
			-484,
			2603
		],
		[
			-3161,
			2129
		],
		[
			265,
			282
		],
		[
			5385,
			95
		],
		[
			4239,
			2683
		],
		[
			738,
			-618
		],
		[
			-901,
			-1993
		],
		[
			-1827,
			-852
		],
		[
			34,
			-502
		],
		[
			3915,
			-1224
		],
		[
			3590,
			-648
		]
	],
	[
		[
			6228384,
			8201983
		],
		[
			2067,
			-456
		],
		[
			1343,
			54
		],
		[
			1002,
			-738
		],
		[
			0,
			-1416
		],
		[
			1535,
			-752
		],
		[
			971,
			164
		],
		[
			652,
			1103
		],
		[
			1701,
			271
		],
		[
			33,
			-812
		],
		[
			889,
			-356
		],
		[
			-594,
			-1111
		],
		[
			-1708,
			-793
		],
		[
			33,
			-677
		],
		[
			-1220,
			-868
		],
		[
			-685,
			720
		],
		[
			-788,
			-65
		],
		[
			-1533,
			1235
		],
		[
			-1577,
			-422
		],
		[
			-1269,
			940
		],
		[
			-1276,
			-229
		],
		[
			-2138,
			117
		],
		[
			-92,
			-608
		],
		[
			1809,
			-427
		],
		[
			1213,
			-1359
		],
		[
			-2367,
			-545
		],
		[
			-2073,
			981
		],
		[
			-1770,
			2421
		],
		[
			-2219,
			1615
		],
		[
			1240,
			1748
		],
		[
			2265,
			-272
		],
		[
			1652,
			-637
		],
		[
			1048,
			166
		],
		[
			1856,
			1008
		]
	],
	[
		[
			5696409,
			7742890
		],
		[
			-2580,
			-1237
		],
		[
			-903,
			972
		],
		[
			-1447,
			-629
		],
		[
			-1333,
			206
		],
		[
			-286,
			700
		],
		[
			-959,
			136
		],
		[
			573,
			606
		],
		[
			-304,
			1534
		],
		[
			1173,
			723
		],
		[
			-591,
			238
		],
		[
			927,
			1183
		],
		[
			500,
			250
		],
		[
			3475,
			1678
		],
		[
			2313,
			36
		],
		[
			703,
			1334
		],
		[
			2902,
			1145
		],
		[
			702,
			-1354
		],
		[
			-2399,
			-2839
		],
		[
			-494,
			-984
		],
		[
			-2505,
			-1706
		],
		[
			843,
			-913
		],
		[
			-310,
			-1079
		]
	],
	[
		[
			6054782,
			8050919
		],
		[
			1746,
			-740
		],
		[
			3968,
			696
		],
		[
			-134,
			-2082
		],
		[
			2080,
			-775
		],
		[
			-1694,
			-1445
		],
		[
			-2059,
			496
		],
		[
			-1226,
			-724
		],
		[
			-1239,
			19
		],
		[
			-1260,
			-466
		],
		[
			-477,
			421
		],
		[
			527,
			1200
		],
		[
			-312,
			746
		],
		[
			-3148,
			1039
		],
		[
			-1641,
			-534
		],
		[
			697,
			-1284
		],
		[
			-531,
			-1121
		],
		[
			-2764,
			-124
		],
		[
			-881,
			1044
		],
		[
			1516,
			1352
		],
		[
			527,
			934
		],
		[
			1594,
			316
		],
		[
			2008,
			-43
		],
		[
			957,
			848
		],
		[
			-363,
			602
		],
		[
			-1704,
			727
		],
		[
			-2065,
			1829
		],
		[
			2790,
			710
		],
		[
			1219,
			-1394
		],
		[
			2106,
			-433
		],
		[
			-523,
			-1255
		],
		[
			286,
			-559
		]
	],
	[
		[
			5698888,
			7961631
		],
		[
			540,
			-714
		],
		[
			-405,
			-707
		],
		[
			-8396,
			-3387
		],
		[
			-3677,
			2050
		],
		[
			2035,
			1337
		],
		[
			1327,
			849
		],
		[
			1109,
			-47
		],
		[
			1664,
			755
		],
		[
			1866,
			1699
		],
		[
			3304,
			671
		],
		[
			601,
			820
		],
		[
			2540,
			-291
		],
		[
			-266,
			-812
		],
		[
			-803,
			-118
		],
		[
			3,
			-966
		],
		[
			-1442,
			-1139
		]
	],
	[
		[
			6038997,
			8062053
		],
		[
			1168,
			-328
		],
		[
			662,
			1611
		],
		[
			648,
			122
		],
		[
			2080,
			-1491
		],
		[
			-1221,
			-397
		],
		[
			-946,
			207
		],
		[
			233,
			-1435
		],
		[
			-1345,
			-936
		],
		[
			-323,
			-982
		],
		[
			-869,
			-381
		],
		[
			327,
			-1087
		],
		[
			-3,
			-2171
		],
		[
			1862,
			-1130
		],
		[
			-443,
			-643
		],
		[
			-2677,
			116
		],
		[
			-1905,
			-490
		],
		[
			-661,
			2139
		],
		[
			-1917,
			1108
		],
		[
			-896,
			117
		],
		[
			-328,
			1422
		],
		[
			2596,
			-306
		],
		[
			2128,
			599
		],
		[
			350,
			1359
		],
		[
			-1297,
			1074
		],
		[
			538,
			1270
		],
		[
			-538,
			773
		],
		[
			797,
			633
		],
		[
			2334,
			889
		],
		[
			257,
			-498
		],
		[
			-611,
			-1164
		]
	],
	[
		[
			6033662,
			8044676
		],
		[
			-727,
			-1166
		],
		[
			1159,
			-1063
		],
		[
			265,
			-802
		],
		[
			-2109,
			-950
		],
		[
			-815,
			453
		],
		[
			-2978,
			708
		],
		[
			-2318,
			5
		],
		[
			-260,
			-1406
		],
		[
			-693,
			-329
		],
		[
			-1484,
			1598
		],
		[
			-1623,
			124
		],
		[
			-150,
			371
		],
		[
			1807,
			2660
		],
		[
			1206,
			944
		],
		[
			1507,
			-999
		],
		[
			3010,
			-426
		],
		[
			1685,
			682
		],
		[
			141,
			1259
		],
		[
			2122,
			367
		],
		[
			1333,
			662
		],
		[
			467,
			-454
		],
		[
			-327,
			-1294
		],
		[
			-1218,
			-944
		]
	],
	[
		[
			5703986,
			7831114
		],
		[
			-625,
			-2784
		],
		[
			121,
			-880
		],
		[
			-2361,
			-1620
		],
		[
			-2038,
			23
		],
		[
			-2429,
			704
		],
		[
			-2501,
			1004
		],
		[
			209,
			1862
		],
		[
			2219,
			823
		],
		[
			2558,
			-92
		],
		[
			440,
			442
		],
		[
			-678,
			1606
		],
		[
			1165,
			717
		],
		[
			1299,
			246
		],
		[
			2011,
			-954
		],
		[
			610,
			-1097
		]
	],
	[
		[
			6207431,
			8157540
		],
		[
			383,
			-2549
		],
		[
			2213,
			286
		],
		[
			192,
			-1278
		],
		[
			-3225,
			-4713
		],
		[
			-3847,
			1581
		],
		[
			-346,
			1387
		],
		[
			781,
			1320
		],
		[
			-1074,
			1125
		],
		[
			-1269,
			431
		],
		[
			-780,
			914
		],
		[
			136,
			665
		],
		[
			1913,
			260
		],
		[
			3778,
			-569
		],
		[
			1145,
			1140
		]
	],
	[
		[
			5693159,
			7788616
		],
		[
			3489,
			-1334
		],
		[
			1489,
			97
		],
		[
			2697,
			-1333
		],
		[
			-1650,
			-878
		],
		[
			-2893,
			94
		],
		[
			-1131,
			-388
		],
		[
			-1332,
			865
		],
		[
			-2756,
			-294
		],
		[
			-2502,
			976
		],
		[
			-1884,
			414
		],
		[
			-1788,
			-48
		],
		[
			-526,
			1463
		],
		[
			2386,
			181
		],
		[
			1235,
			-430
		],
		[
			5166,
			615
		]
	],
	[
		[
			5608006,
			7903380
		],
		[
			666,
			-539
		],
		[
			-2789,
			-2710
		],
		[
			-910,
			-413
		],
		[
			-1393,
			553
		],
		[
			-717,
			-753
		],
		[
			-1098,
			-71
		],
		[
			-1567,
			949
		],
		[
			929,
			697
		],
		[
			1160,
			-351
		],
		[
			585,
			959
		],
		[
			-3401,
			124
		],
		[
			-773,
			-287
		],
		[
			-285,
			1266
		],
		[
			-743,
			385
		],
		[
			868,
			789
		],
		[
			2157,
			-188
		],
		[
			751,
			367
		],
		[
			53,
			-815
		],
		[
			3009,
			394
		],
		[
			-162,
			854
		],
		[
			1316,
			895
		],
		[
			798,
			-514
		],
		[
			-1061,
			-714
		],
		[
			2607,
			-877
		]
	],
	[
		[
			6043432,
			8030966
		],
		[
			-5765,
			-531
		],
		[
			-1786,
			2921
		],
		[
			4416,
			1642
		],
		[
			3498,
			919
		],
		[
			492,
			-249
		],
		[
			177,
			-670
		],
		[
			-1032,
			-4032
		]
	],
	[
		[
			6216811,
			8171848
		],
		[
			-2439,
			-333
		],
		[
			-2581,
			872
		],
		[
			3166,
			3032
		],
		[
			4233,
			1396
		],
		[
			4039,
			202
		],
		[
			170,
			-490
		],
		[
			-6588,
			-4679
		]
	],
	[
		[
			5764296,
			7788566
		],
		[
			-6915,
			-2942
		],
		[
			-374,
			219
		],
		[
			1405,
			2577
		],
		[
			4151,
			1502
		],
		[
			5787,
			4241
		],
		[
			2548,
			255
		],
		[
			234,
			-441
		],
		[
			-912,
			-1093
		],
		[
			-5924,
			-4318
		]
	],
	[
		[
			5745208,
			7754731
		],
		[
			-2258,
			-107
		],
		[
			-2174,
			211
		],
		[
			-705,
			731
		],
		[
			523,
			799
		],
		[
			1196,
			429
		],
		[
			416,
			735
		],
		[
			3716,
			1093
		],
		[
			-1928,
			1429
		],
		[
			1669,
			1452
		],
		[
			888,
			-2881
		],
		[
			899,
			-715
		],
		[
			-185,
			-701
		],
		[
			752,
			-980
		],
		[
			-52,
			-586
		],
		[
			-1270,
			-129
		],
		[
			-1487,
			-780
		]
	],
	[
		[
			5664493,
			7845813
		],
		[
			2139,
			-546
		],
		[
			-190,
			-1447
		],
		[
			1981,
			-16
		],
		[
			244,
			-884
		],
		[
			-4696,
			277
		],
		[
			-343,
			1139
		],
		[
			-3140,
			95
		],
		[
			-2437,
			-1216
		],
		[
			-2605,
			-243
		],
		[
			-1312,
			871
		],
		[
			2093,
			929
		],
		[
			3110,
			385
		],
		[
			209,
			525
		],
		[
			2699,
			-222
		],
		[
			2248,
			353
		]
	],
	[
		[
			5616362,
			7929108
		],
		[
			-971,
			-1554
		],
		[
			-1617,
			-629
		],
		[
			-2691,
			1164
		],
		[
			-961,
			-140
		],
		[
			-253,
			-955
		],
		[
			-2464,
			-733
		],
		[
			-482,
			802
		],
		[
			966,
			1193
		],
		[
			2405,
			252
		],
		[
			718,
			1474
		],
		[
			1106,
			607
		],
		[
			3273,
			243
		],
		[
			971,
			-1724
		]
	],
	[
		[
			6110099,
			8150514
		],
		[
			-1371,
			-803
		],
		[
			-379,
			587
		],
		[
			-4546,
			2096
		],
		[
			1259,
			1330
		],
		[
			3287,
			654
		],
		[
			1383,
			-101
		],
		[
			1359,
			-1505
		],
		[
			-597,
			-674
		],
		[
			-395,
			-1584
		]
	],
	[
		[
			5739715,
			7703753
		],
		[
			-812,
			-536
		],
		[
			-425,
			536
		],
		[
			342,
			1352
		],
		[
			-821,
			1468
		],
		[
			4007,
			4561
		],
		[
			1307,
			250
		],
		[
			-1873,
			-6273
		],
		[
			-1725,
			-1358
		]
	],
	[
		[
			5765520,
			7781035
		],
		[
			-246,
			-1068
		],
		[
			-2606,
			-1553
		],
		[
			-192,
			-512
		],
		[
			-1962,
			-1627
		],
		[
			-744,
			-311
		],
		[
			-1167,
			888
		],
		[
			-2269,
			18
		],
		[
			458,
			832
		],
		[
			1728,
			824
		],
		[
			260,
			965
		],
		[
			1934,
			85
		],
		[
			1319,
			537
		],
		[
			1508,
			-42
		],
		[
			1979,
			964
		]
	],
	[
		[
			5600498,
			7912036
		],
		[
			-687,
			-1579
		],
		[
			-1285,
			87
		],
		[
			-127,
			-568
		],
		[
			-1534,
			-938
		],
		[
			-1297,
			615
		],
		[
			-831,
			-642
		],
		[
			-2018,
			447
		],
		[
			1191,
			980
		],
		[
			1299,
			1694
		],
		[
			3715,
			458
		],
		[
			1574,
			-554
		]
	],
	[
		[
			5825056,
			7714063
		],
		[
			-1290,
			-808
		],
		[
			-33,
			780
		],
		[
			-1611,
			-137
		],
		[
			-1457,
			-910
		],
		[
			-601,
			881
		],
		[
			2593,
			3654
		],
		[
			976,
			386
		],
		[
			1679,
			-98
		],
		[
			-189,
			-1913
		],
		[
			649,
			-702
		],
		[
			-716,
			-1133
		]
	],
	[
		[
			5605163,
			7939301
		],
		[
			-1521,
			-258
		],
		[
			-952,
			588
		],
		[
			-2581,
			28
		],
		[
			-1363,
			964
		],
		[
			-584,
			980
		],
		[
			1820,
			638
		],
		[
			479,
			514
		],
		[
			1785,
			-333
		],
		[
			2102,
			-819
		],
		[
			815,
			-2302
		]
	],
	[
		[
			6026385,
			8024255
		],
		[
			1734,
			-244
		],
		[
			-305,
			-739
		],
		[
			-1851,
			-403
		],
		[
			-1522,
			336
		],
		[
			-2063,
			-289
		],
		[
			-2860,
			437
		],
		[
			-789,
			437
		],
		[
			2173,
			922
		],
		[
			2632,
			-500
		],
		[
			240,
			1646
		],
		[
			2486,
			252
		],
		[
			125,
			-1855
		]
	],
	[
		[
			5697182,
			7854586
		],
		[
			-825,
			-976
		],
		[
			-1910,
			193
		],
		[
			-438,
			-545
		],
		[
			809,
			-831
		],
		[
			-1397,
			-712
		],
		[
			-1435,
			-21
		],
		[
			-1678,
			758
		],
		[
			-820,
			1113
		],
		[
			2463,
			888
		],
		[
			1382,
			213
		],
		[
			945,
			646
		],
		[
			2187,
			-199
		],
		[
			717,
			-527
		]
	],
	[
		[
			5718136,
			7891594
		],
		[
			-418,
			-1178
		],
		[
			-1373,
			212
		],
		[
			-462,
			966
		],
		[
			-561,
			1174
		],
		[
			1440,
			697
		],
		[
			-288,
			2098
		],
		[
			1244,
			607
		],
		[
			1285,
			486
		],
		[
			598,
			-929
		],
		[
			-1465,
			-4133
		]
	],
	[
		[
			6027381,
			8072003
		],
		[
			-757,
			-814
		],
		[
			-1044,
			538
		],
		[
			-1070,
			-538
		],
		[
			-461,
			2307
		],
		[
			1306,
			1339
		],
		[
			70,
			1041
		],
		[
			813,
			1258
		],
		[
			973,
			265
		],
		[
			1209,
			-1159
		],
		[
			-1117,
			-875
		],
		[
			-891,
			-1484
		],
		[
			969,
			-929
		],
		[
			0,
			-949
		]
	],
	[
		[
			6146035,
			8172728
		],
		[
			964,
			-495
		],
		[
			12,
			621
		],
		[
			1089,
			96
		],
		[
			422,
			-800
		],
		[
			-826,
			-532
		],
		[
			586,
			-667
		],
		[
			-2162,
			-647
		],
		[
			-1001,
			35
		],
		[
			-400,
			1135
		],
		[
			-1273,
			-694
		],
		[
			-1873,
			1638
		],
		[
			777,
			756
		],
		[
			1116,
			41
		],
		[
			2569,
			-487
		]
	],
	[
		[
			5674454,
			7770175
		],
		[
			-1392,
			-753
		],
		[
			-1914,
			266
		],
		[
			-425,
			418
		],
		[
			2033,
			839
		],
		[
			-242,
			1620
		],
		[
			2484,
			883
		],
		[
			1982,
			97
		],
		[
			-353,
			-1276
		],
		[
			-2173,
			-2094
		]
	],
	[
		[
			6154234,
			8093685
		],
		[
			-145,
			-2537
		],
		[
			-1405,
			116
		],
		[
			-378,
			-1054
		],
		[
			-2396,
			-202
		],
		[
			-463,
			820
		],
		[
			1135,
			488
		],
		[
			194,
			1750
		],
		[
			509,
			859
		],
		[
			2949,
			-240
		]
	],
	[
		[
			5594217,
			7915191
		],
		[
			-1314,
			-472
		],
		[
			-2490,
			121
		],
		[
			-1896,
			1250
		],
		[
			780,
			693
		],
		[
			1659,
			50
		],
		[
			266,
			378
		],
		[
			2504,
			-8
		],
		[
			1419,
			-1046
		],
		[
			-928,
			-966
		]
	],
	[
		[
			5579520,
			7889237
		],
		[
			175,
			-676
		],
		[
			-1335,
			299
		],
		[
			-531,
			1492
		],
		[
			-1372,
			1242
		],
		[
			-155,
			989
		],
		[
			1791,
			925
		],
		[
			1752,
			-767
		],
		[
			429,
			-1147
		],
		[
			-882,
			-381
		],
		[
			950,
			-1084
		],
		[
			-822,
			-892
		]
	],
	[
		[
			5587154,
			7844915
		],
		[
			-1201,
			-774
		],
		[
			-1549,
			782
		],
		[
			-371,
			2240
		],
		[
			1826,
			581
		],
		[
			2368,
			29
		],
		[
			-1073,
			-2858
		]
	],
	[
		[
			6074419,
			8074451
		],
		[
			-984,
			-639
		],
		[
			-2798,
			827
		],
		[
			1340,
			2597
		],
		[
			1974,
			360
		],
		[
			553,
			-506
		],
		[
			-85,
			-2639
		]
	],
	[
		[
			6006218,
			8020817
		],
		[
			-4085,
			-696
		],
		[
			-819,
			303
		],
		[
			-890,
			1168
		],
		[
			1709,
			868
		],
		[
			2753,
			585
		],
		[
			-418,
			-889
		],
		[
			1816,
			-814
		],
		[
			-66,
			-525
		]
	],
	[
		[
			5460316,
			7919972
		],
		[
			-772,
			-399
		],
		[
			-1151,
			220
		],
		[
			-657,
			-919
		],
		[
			-3418,
			866
		],
		[
			-390,
			943
		],
		[
			2191,
			631
		],
		[
			1617,
			-280
		],
		[
			984,
			-216
		],
		[
			1596,
			-846
		]
	],
	[
		[
			5552717,
			7819063
		],
		[
			-2184,
			-701
		],
		[
			-994,
			840
		],
		[
			-167,
			1516
		],
		[
			377,
			352
		],
		[
			3515,
			513
		],
		[
			-547,
			-2520
		]
	],
	[
		[
			5692748,
			7823202
		],
		[
			933,
			-863
		],
		[
			-1935,
			-1164
		],
		[
			-1529,
			742
		],
		[
			-1971,
			-455
		],
		[
			-849,
			720
		],
		[
			1388,
			1000
		],
		[
			990,
			-348
		],
		[
			2973,
			368
		]
	],
	[
		[
			5691433,
			7739432
		],
		[
			-1792,
			-661
		],
		[
			21,
			1314
		],
		[
			-1245,
			821
		],
		[
			259,
			303
		],
		[
			3458,
			232
		],
		[
			1795,
			-97
		],
		[
			-542,
			-720
		],
		[
			-1253,
			-8
		],
		[
			-701,
			-1184
		]
	],
	[
		[
			5756067,
			7759164
		],
		[
			-2067,
			-961
		],
		[
			-615,
			1901
		],
		[
			550,
			1283
		],
		[
			1620,
			4
		],
		[
			516,
			-898
		],
		[
			-4,
			-1329
		]
	],
	[
		[
			5565154,
			7826832
		],
		[
			-1684,
			-12
		],
		[
			-1423,
			679
		],
		[
			-755,
			934
		],
		[
			840,
			441
		],
		[
			1958,
			26
		],
		[
			1063,
			-335
		],
		[
			1,
			-1733
		]
	],
	[
		[
			5984541,
			8032801
		],
		[
			2386,
			-851
		],
		[
			595,
			418
		],
		[
			1130,
			-665
		],
		[
			-113,
			-626
		],
		[
			-1590,
			-407
		],
		[
			-2612,
			642
		],
		[
			-564,
			1271
		],
		[
			768,
			218
		]
	],
	[
		[
			6020902,
			8046639
		],
		[
			-826,
			-800
		],
		[
			-785,
			425
		],
		[
			-1274,
			-341
		],
		[
			-580,
			619
		],
		[
			-1662,
			239
		],
		[
			-11,
			604
		],
		[
			3078,
			513
		],
		[
			386,
			-1059
		],
		[
			1674,
			-200
		]
	],
	[
		[
			6004394,
			8005891
		],
		[
			-2245,
			-293
		],
		[
			-315,
			230
		],
		[
			241,
			560
		],
		[
			735,
			1706
		],
		[
			637,
			194
		],
		[
			1518,
			-1387
		],
		[
			-290,
			-513
		],
		[
			-281,
			-497
		]
	],
	[
		[
			6214967,
			8152622
		],
		[
			-1141,
			-837
		],
		[
			-1970,
			1009
		],
		[
			-850,
			1024
		],
		[
			3695,
			31
		],
		[
			266,
			-1227
		]
	],
	[
		[
			6218404,
			8199980
		],
		[
			-1355,
			-954
		],
		[
			-2064,
			223
		],
		[
			47,
			-841
		],
		[
			-1171,
			269
		],
		[
			1250,
			1197
		],
		[
			122,
			737
		],
		[
			2433,
			-75
		],
		[
			738,
			-556
		]
	],
	[
		[
			6158325,
			8158168
		],
		[
			-1817,
			-351
		],
		[
			-2014,
			1031
		],
		[
			1981,
			935
		],
		[
			2015,
			-717
		],
		[
			-165,
			-898
		]
	],
	[
		[
			5775338,
			7938899
		],
		[
			-1337,
			-197
		],
		[
			-991,
			771
		],
		[
			146,
			1268
		],
		[
			923,
			384
		],
		[
			1049,
			-260
		],
		[
			210,
			-1966
		]
	],
	[
		[
			5999916,
			8022131
		],
		[
			-1823,
			-148
		],
		[
			-1187,
			1382
		],
		[
			711,
			870
		],
		[
			2640,
			-1313
		],
		[
			-341,
			-791
		]
	],
	[
		[
			5733437,
			7872481
		],
		[
			-860,
			-522
		],
		[
			-1934,
			183
		],
		[
			-913,
			1360
		],
		[
			2079,
			348
		],
		[
			1628,
			-1369
		]
	],
	[
		[
			6020245,
			8050553
		],
		[
			-1718,
			-842
		],
		[
			-2454,
			725
		],
		[
			339,
			388
		],
		[
			3058,
			700
		],
		[
			775,
			-971
		]
	],
	[
		[
			5772327,
			7943449
		],
		[
			-212,
			-989
		],
		[
			-2696,
			584
		],
		[
			-354,
			-437
		],
		[
			-1142,
			784
		],
		[
			1649,
			965
		],
		[
			719,
			-613
		],
		[
			2036,
			-294
		]
	],
	[
		[
			5820675,
			7710154
		],
		[
			-1118,
			-520
		],
		[
			-1283,
			920
		],
		[
			329,
			570
		],
		[
			2141,
			949
		],
		[
			372,
			-320
		],
		[
			-441,
			-1599
		]
	],
	[
		[
			5809308,
			7690457
		],
		[
			-1165,
			-672
		],
		[
			-632,
			1010
		],
		[
			-1132,
			435
		],
		[
			-315,
			999
		],
		[
			1717,
			66
		],
		[
			1527,
			-1838
		]
	],
	[
		[
			5610860,
			7904576
		],
		[
			-381,
			-860
		],
		[
			-899,
			-129
		],
		[
			-342,
			801
		],
		[
			-1183,
			-512
		],
		[
			-761,
			1227
		],
		[
			258,
			411
		],
		[
			1830,
			-284
		],
		[
			1478,
			-654
		]
	],
	[
		[
			5555078,
			7891612
		],
		[
			-1634,
			-1614
		],
		[
			-2196,
			503
		],
		[
			165,
			1111
		],
		[
			1247,
			-569
		],
		[
			1918,
			999
		],
		[
			500,
			-430
		]
	],
	[
		[
			5582491,
			7841649
		],
		[
			933,
			-1478
		],
		[
			-1442,
			158
		],
		[
			-414,
			-934
		],
		[
			-2361,
			729
		],
		[
			579,
			586
		],
		[
			879,
			-235
		],
		[
			1826,
			1174
		]
	],
	[
		[
			5800452,
			7717160
		],
		[
			-697,
			-813
		],
		[
			-1024,
			545
		],
		[
			-387,
			1009
		],
		[
			377,
			1364
		],
		[
			615,
			-171
		],
		[
			1116,
			-1934
		]
	],
	[
		[
			6241369,
			8180781
		],
		[
			-2255,
			-266
		],
		[
			-1580,
			346
		],
		[
			340,
			848
		],
		[
			2509,
			79
		],
		[
			986,
			-1007
		]
	],
	[
		[
			6226989,
			8205017
		],
		[
			-1741,
			-201
		],
		[
			-1599,
			1470
		],
		[
			689,
			393
		],
		[
			2336,
			-842
		],
		[
			315,
			-820
		]
	],
	[
		[
			5768470,
			7928686
		],
		[
			854,
			-2144
		],
		[
			-1869,
			354
		],
		[
			-561,
			1171
		],
		[
			210,
			570
		],
		[
			1366,
			49
		]
	],
	[
		[
			5558301,
			7823643
		],
		[
			-3049,
			-44
		],
		[
			712,
			936
		],
		[
			1668,
			382
		],
		[
			1294,
			-512
		],
		[
			-625,
			-762
		]
	],
	[
		[
			6177051,
			8171497
		],
		[
			-1327,
			-660
		],
		[
			-978,
			607
		],
		[
			1097,
			726
		],
		[
			-405,
			596
		],
		[
			1147,
			148
		],
		[
			988,
			-488
		],
		[
			-522,
			-929
		]
	],
	[
		[
			5571580,
			7895815
		],
		[
			1406,
			-1084
		],
		[
			1852,
			101
		],
		[
			-790,
			-1164
		],
		[
			-1379,
			236
		],
		[
			-1503,
			1386
		],
		[
			414,
			525
		]
	],
	[
		[
			5587435,
			7910231
		],
		[
			-11,
			-1313
		],
		[
			-1808,
			185
		],
		[
			-515,
			1291
		],
		[
			1096,
			271
		],
		[
			1238,
			-434
		]
	],
	[
		[
			5627016,
			7959375
		],
		[
			-1426,
			-1496
		],
		[
			-832,
			560
		],
		[
			790,
			1771
		],
		[
			743,
			0
		],
		[
			725,
			-835
		]
	],
	[
		[
			5608106,
			7914685
		],
		[
			-216,
			-690
		],
		[
			-2231,
			1082
		],
		[
			-196,
			395
		],
		[
			1629,
			635
		],
		[
			1014,
			-1422
		]
	],
	[
		[
			6198972,
			8138564
		],
		[
			-1281,
			-1047
		],
		[
			-1019,
			1483
		],
		[
			-1246,
			238
		],
		[
			754,
			491
		],
		[
			2792,
			-1165
		]
	],
	[
		[
			5666187,
			7871838
		],
		[
			-914,
			-268
		],
		[
			-1128,
			610
		],
		[
			1694,
			1163
		],
		[
			977,
			-427
		],
		[
			-629,
			-1078
		]
	],
	[
		[
			5553230,
			7816958
		],
		[
			-1501,
			-442
		],
		[
			-1778,
			784
		],
		[
			655,
			428
		],
		[
			2557,
			-168
		],
		[
			67,
			-602
		]
	],
	[
		[
			5882571,
			7994440
		],
		[
			-1342,
			-925
		],
		[
			-1159,
			222
		],
		[
			-216,
			967
		],
		[
			2522,
			151
		],
		[
			195,
			-415
		]
	],
	[
		[
			6184031,
			8186976
		],
		[
			-1676,
			-255
		],
		[
			-648,
			439
		],
		[
			880,
			1094
		],
		[
			905,
			171
		],
		[
			539,
			-1449
		]
	],
	[
		[
			5576417,
			7905084
		],
		[
			-2635,
			-712
		],
		[
			-466,
			491
		],
		[
			345,
			620
		],
		[
			2625,
			148
		],
		[
			131,
			-547
		]
	],
	[
		[
			5576749,
			7843175
		],
		[
			-1354,
			-107
		],
		[
			-501,
			434
		],
		[
			1440,
			1136
		],
		[
			1170,
			-561
		],
		[
			-755,
			-902
		]
	],
	[
		[
			5758764,
			7666849
		],
		[
			-1914,
			-646
		],
		[
			-1433,
			451
		],
		[
			925,
			622
		],
		[
			1691,
			70
		],
		[
			731,
			-497
		]
	],
	[
		[
			5776942,
			7798205
		],
		[
			-871,
			-1635
		],
		[
			-1536,
			749
		],
		[
			621,
			753
		],
		[
			1786,
			133
		]
	],
	[
		[
			6033760,
			8060185
		],
		[
			-966,
			-1328
		],
		[
			-713,
			1141
		],
		[
			579,
			1468
		],
		[
			1100,
			-1281
		]
	],
	[
		[
			6180491,
			8143836
		],
		[
			-1182,
			-859
		],
		[
			-1291,
			410
		],
		[
			2094,
			1491
		],
		[
			379,
			-1042
		]
	],
	[
		[
			5730506,
			7866123
		],
		[
			-1951,
			-573
		],
		[
			-607,
			772
		],
		[
			1789,
			668
		],
		[
			769,
			-867
		]
	],
	[
		[
			6211911,
			8174144
		],
		[
			-915,
			-280
		],
		[
			-343,
			1098
		],
		[
			1074,
			699
		],
		[
			716,
			-257
		],
		[
			-532,
			-1260
		]
	],
	[
		[
			5771914,
			7940513
		],
		[
			562,
			-794
		],
		[
			-1079,
			-551
		],
		[
			-1445,
			-66
		],
		[
			-99,
			937
		],
		[
			1336,
			-271
		],
		[
			725,
			745
		]
	],
	[
		[
			5739877,
			7762996
		],
		[
			-2206,
			-641
		],
		[
			-490,
			391
		],
		[
			809,
			623
		],
		[
			1651,
			296
		],
		[
			236,
			-669
		]
	],
	[
		[
			5607980,
			7912651
		],
		[
			-961,
			-512
		],
		[
			-1561,
			1063
		],
		[
			1140,
			520
		],
		[
			1382,
			-1071
		]
	],
	[
		[
			5603355,
			7947109
		],
		[
			29,
			-1146
		],
		[
			-1905,
			340
		],
		[
			265,
			927
		],
		[
			1611,
			-121
		]
	],
	[
		[
			6180130,
			8153798
		],
		[
			-155,
			-1046
		],
		[
			-1946,
			256
		],
		[
			913,
			1104
		],
		[
			1188,
			-314
		]
	],
	[
		[
			5681381,
			7781627
		],
		[
			-997,
			-127
		],
		[
			-326,
			744
		],
		[
			1415,
			954
		],
		[
			418,
			-625
		],
		[
			-510,
			-946
		]
	],
	[
		[
			5680404,
			7927916
		],
		[
			-170,
			-957
		],
		[
			-2203,
			1864
		],
		[
			1432,
			410
		],
		[
			-79,
			-1025
		],
		[
			1020,
			-292
		]
	],
	[
		[
			5690448,
			7783506
		],
		[
			-1078,
			-578
		],
		[
			-1113,
			1098
		],
		[
			1672,
			427
		],
		[
			519,
			-947
		]
	],
	[
		[
			5773164,
			7936534
		],
		[
			-1543,
			-1347
		],
		[
			-647,
			783
		],
		[
			871,
			933
		],
		[
			1319,
			-369
		]
	],
	[
		[
			6033095,
			8051101
		],
		[
			-605,
			-531
		],
		[
			-1241,
			1032
		],
		[
			1453,
			878
		],
		[
			393,
			-1379
		]
	],
	[
		[
			5999244,
			8026768
		],
		[
			-1102,
			-1121
		],
		[
			-1029,
			1004
		],
		[
			510,
			672
		],
		[
			1621,
			-555
		]
	],
	[
		[
			5726712,
			7869307
		],
		[
			-1322,
			-296
		],
		[
			-335,
			995
		],
		[
			427,
			701
		],
		[
			1325,
			-892
		],
		[
			-95,
			-508
		]
	],
	[
		[
			5549080,
			7891364
		],
		[
			109,
			-928
		],
		[
			-2517,
			218
		],
		[
			578,
			718
		],
		[
			1830,
			-8
		]
	],
	[
		[
			5663337,
			7875710
		],
		[
			-1,
			-1503
		],
		[
			-1629,
			690
		],
		[
			672,
			1061
		],
		[
			958,
			-248
		]
	],
	[
		[
			5467329,
			7925342
		],
		[
			-890,
			-372
		],
		[
			-1397,
			372
		],
		[
			1104,
			1197
		],
		[
			540,
			-289
		],
		[
			122,
			-578
		],
		[
			521,
			-330
		]
	],
	[
		[
			5571843,
			7830384
		],
		[
			-1410,
			-866
		],
		[
			-675,
			1142
		],
		[
			1401,
			503
		],
		[
			684,
			-779
		]
	],
	[
		[
			5591270,
			7907475
		],
		[
			-1406,
			-899
		],
		[
			-977,
			808
		],
		[
			1139,
			722
		],
		[
			1244,
			-631
		]
	],
	[
		[
			6077760,
			8077049
		],
		[
			-2063,
			-173
		],
		[
			-432,
			355
		],
		[
			1650,
			1012
		],
		[
			845,
			-1194
		]
	],
	[
		[
			5781496,
			7937768
		],
		[
			-923,
			-1410
		],
		[
			-1015,
			312
		],
		[
			909,
			1501
		],
		[
			1029,
			-403
		]
	],
	[
		[
			6048352,
			8028128
		],
		[
			-1349,
			-481
		],
		[
			-651,
			1164
		],
		[
			2084,
			163
		],
		[
			-84,
			-846
		]
	],
	[
		[
			6179306,
			8150582
		],
		[
			-1490,
			-939
		],
		[
			-764,
			949
		],
		[
			1596,
			658
		],
		[
			658,
			-668
		]
	],
	[
		[
			5558587,
			7826120
		],
		[
			-199,
			-578
		],
		[
			-1625,
			6
		],
		[
			-311,
			474
		],
		[
			503,
			795
		],
		[
			1632,
			-697
		]
	],
	[
		[
			6201074,
			8185153
		],
		[
			-860,
			-550
		],
		[
			-1319,
			887
		],
		[
			1141,
			807
		],
		[
			1038,
			-1144
		]
	],
	[
		[
			5762062,
			7680941
		],
		[
			-1911,
			-303
		],
		[
			-849,
			558
		],
		[
			2055,
			647
		],
		[
			705,
			-902
		]
	],
	[
		[
			5551050,
			7892518
		],
		[
			-376,
			-1441
		],
		[
			-1624,
			412
		],
		[
			339,
			742
		],
		[
			1661,
			287
		]
	],
	[
		[
			5578922,
			7838922
		],
		[
			269,
			-1258
		],
		[
			-1967,
			386
		],
		[
			-335,
			571
		],
		[
			2033,
			301
		]
	],
	[
		[
			6010266,
			8012753
		],
		[
			-1126,
			-577
		],
		[
			-669,
			378
		],
		[
			177,
			747
		],
		[
			1472,
			437
		],
		[
			146,
			-985
		]
	],
	[
		[
			5685302,
			7912096
		],
		[
			966,
			-1320
		],
		[
			-1706,
			21
		],
		[
			-781,
			520
		],
		[
			1521,
			779
		]
	],
	[
		[
			5798420,
			7968743
		],
		[
			-1109,
			-250
		],
		[
			153,
			999
		],
		[
			1390,
			858
		],
		[
			204,
			-856
		],
		[
			-638,
			-751
		]
	],
	[
		[
			5764588,
			7934219
		],
		[
			-1118,
			-131
		],
		[
			-535,
			570
		],
		[
			1387,
			973
		],
		[
			586,
			-452
		],
		[
			-320,
			-960
		]
	],
	[
		[
			6200819,
			8182466
		],
		[
			-1738,
			-260
		],
		[
			-351,
			366
		],
		[
			1503,
			1315
		],
		[
			586,
			-1421
		]
	],
	[
		[
			6065457,
			8061444
		],
		[
			-1104,
			-614
		],
		[
			-849,
			661
		],
		[
			565,
			787
		],
		[
			1004,
			-16
		],
		[
			384,
			-818
		]
	],
	[
		[
			6004230,
			8053276
		],
		[
			-1077,
			-858
		],
		[
			-1241,
			393
		],
		[
			440,
			1013
		],
		[
			1878,
			-548
		]
	],
	[
		[
			5590397,
			7919314
		],
		[
			-960,
			-1603
		],
		[
			-809,
			1264
		],
		[
			447,
			719
		],
		[
			1322,
			-380
		]
	],
	[
		[
			5875768,
			7992056
		],
		[
			-441,
			-728
		],
		[
			-1641,
			823
		],
		[
			1367,
			934
		],
		[
			715,
			-1029
		]
	],
	[
		[
			6193579,
			8190055
		],
		[
			-440,
			-715
		],
		[
			-1745,
			889
		],
		[
			1486,
			794
		],
		[
			699,
			-968
		]
	],
	[
		[
			6218749,
			8205045
		],
		[
			-1269,
			-950
		],
		[
			-798,
			938
		],
		[
			575,
			818
		],
		[
			1492,
			-806
		]
	],
	[
		[
			5666951,
			7874322
		],
		[
			-1315,
			-358
		],
		[
			-684,
			809
		],
		[
			86,
			552
		],
		[
			444,
			384
		],
		[
			1469,
			-1387
		]
	],
	[
		[
			5619390,
			7931890
		],
		[
			-1050,
			-113
		],
		[
			-608,
			844
		],
		[
			998,
			701
		],
		[
			876,
			-712
		],
		[
			-216,
			-720
		]
	],
	[
		[
			6057024,
			8054648
		],
		[
			371,
			-1476
		],
		[
			-1514,
			49
		],
		[
			-420,
			712
		],
		[
			1563,
			715
		]
	],
	[
		[
			5677100,
			7789372
		],
		[
			-655,
			-605
		],
		[
			-1291,
			917
		],
		[
			331,
			1102
		],
		[
			1615,
			-1414
		]
	],
	[
		[
			5768444,
			7940876
		],
		[
			-1071,
			-25
		],
		[
			-60,
			977
		],
		[
			572,
			421
		],
		[
			1395,
			-634
		],
		[
			-836,
			-739
		]
	],
	[
		[
			6179529,
			8141514
		],
		[
			-342,
			-858
		],
		[
			-860,
			140
		],
		[
			-459,
			1245
		],
		[
			844,
			347
		],
		[
			817,
			-874
		]
	],
	[
		[
			6018198,
			8023936
		],
		[
			-1260,
			-671
		],
		[
			-915,
			828
		],
		[
			1828,
			775
		],
		[
			347,
			-932
		]
	],
	[
		[
			5673603,
			7787432
		],
		[
			-1328,
			-469
		],
		[
			-558,
			1114
		],
		[
			1327,
			549
		],
		[
			559,
			-1194
		]
	],
	[
		[
			6005892,
			8018673
		],
		[
			-768,
			-686
		],
		[
			-1369,
			384
		],
		[
			339,
			605
		],
		[
			1481,
			421
		],
		[
			317,
			-724
		]
	],
	[
		[
			5682357,
			7928905
		],
		[
			-1063,
			-684
		],
		[
			-1196,
			433
		],
		[
			1177,
			1172
		],
		[
			1082,
			-921
		]
	],
	[
		[
			5741007,
			7702789
		],
		[
			-933,
			-1788
		],
		[
			-1113,
			397
		],
		[
			1365,
			1549
		],
		[
			681,
			-158
		]
	],
	[
		[
			5452920,
			7921361
		],
		[
			-1955,
			-482
		],
		[
			-334,
			726
		],
		[
			2212,
			660
		],
		[
			77,
			-904
		]
	],
	[
		[
			5708158,
			7785623
		],
		[
			-393,
			-823
		],
		[
			-2359,
			637
		],
		[
			496,
			557
		],
		[
			2256,
			-371
		]
	],
	[
		[
			6180028,
			8173996
		],
		[
			-1805,
			-100
		],
		[
			-240,
			821
		],
		[
			1953,
			351
		],
		[
			92,
			-1072
		]
	],
	[
		[
			6181424,
			8135703
		],
		[
			-469,
			-332
		],
		[
			-1979,
			266
		],
		[
			711,
			1183
		],
		[
			1737,
			-1117
		]
	],
	[
		[
			5651144,
			7889730
		],
		[
			-802,
			-347
		],
		[
			-1005,
			1580
		],
		[
			1298,
			230
		],
		[
			509,
			-1463
		]
	],
	[
		[
			5733281,
			8052078
		],
		[
			143,
			-1462
		],
		[
			-1747,
			-187
		],
		[
			-407,
			791
		],
		[
			943,
			-39
		],
		[
			1068,
			897
		]
	],
	[
		[
			5624693,
			7961053
		],
		[
			-714,
			-462
		],
		[
			-1076,
			900
		],
		[
			604,
			761
		],
		[
			824,
			-104
		],
		[
			362,
			-1095
		]
	],
	[
		[
			6059098,
			8042193
		],
		[
			-1128,
			-1282
		],
		[
			-848,
			1145
		],
		[
			355,
			658
		],
		[
			1621,
			-521
		]
	],
	[
		[
			5744176,
			7761579
		],
		[
			-1466,
			-619
		],
		[
			-938,
			386
		],
		[
			950,
			1125
		],
		[
			1454,
			-892
		]
	],
	[
		[
			5735602,
			7912481
		],
		[
			-290,
			-1355
		],
		[
			-2044,
			635
		],
		[
			275,
			375
		],
		[
			2059,
			345
		]
	],
	[
		[
			5622142,
			7961633
		],
		[
			-704,
			-95
		],
		[
			-1424,
			1076
		],
		[
			481,
			501
		],
		[
			1132,
			-290
		],
		[
			515,
			-1192
		]
	],
	[
		[
			6236985,
			8213431
		],
		[
			-901,
			-798
		],
		[
			-781,
			443
		],
		[
			831,
			950
		],
		[
			851,
			-595
		]
	],
	[
		[
			6236343,
			8214182
		],
		[
			-264,
			-173
		],
		[
			-601,
			305
		],
		[
			374,
			492
		],
		[
			477,
			-101
		],
		[
			14,
			-523
		]
	],
	[
		[
			6180449,
			8141504
		],
		[
			-424,
			-660
		],
		[
			-554,
			497
		],
		[
			479,
			418
		],
		[
			499,
			-255
		]
	],
	[
		[
			6336227,
			7287700
		],
		[
			-2103,
			13
		],
		[
			-558,
			407
		],
		[
			-2517,
			1838
		],
		[
			-5455,
			209
		],
		[
			-718,
			96
		]
	],
	[
		[
			6301304,
			7299715
		],
		[
			438,
			2373
		],
		[
			-4771,
			3468
		]
	],
	[
		[
			6336920,
			7286703
		],
		[
			-1379,
			-2424
		],
		[
			-1975,
			-1181
		],
		[
			-2798,
			-1671
		],
		[
			-295,
			-1861
		],
		[
			-410,
			-20
		]
	],
	[
		[
			6330063,
			7279546
		],
		[
			-4469,
			695
		],
		[
			-7522,
			2617
		]
	],
	[
		[
			6312705,
			7287261
		],
		[
			1876,
			178
		],
		[
			1163,
			1204
		],
		[
			5918,
			-365
		],
		[
			4589,
			1334
		],
		[
			4263,
			-329
		],
		[
			3052,
			-2298
		],
		[
			3354,
			-282
		]
	],
	[
		[
			6330063,
			7279546
		],
		[
			921,
			-1363
		],
		[
			-1536,
			-4118
		],
		[
			-1197,
			-844
		],
		[
			-2657,
			-1872
		],
		[
			-1661,
			-1188
		],
		[
			-322,
			-2083
		],
		[
			-4192,
			-115
		]
	],
	[
		[
			6319419,
			7267963
		],
		[
			-817,
			1185
		],
		[
			-1968,
			-757
		],
		[
			-1225,
			3218
		],
		[
			-4129,
			800
		],
		[
			-8327,
			-4819
		],
		[
			-3365,
			1702
		],
		[
			-63,
			1555
		],
		[
			-3607,
			1964
		],
		[
			-3084,
			-795
		],
		[
			-51,
			1205
		],
		[
			-50,
			1167
		],
		[
			-2778,
			2262
		],
		[
			-3083,
			-1440
		],
		[
			-1720,
			-1989
		],
		[
			-1074,
			-1242
		],
		[
			-1968,
			-382
		],
		[
			627,
			1624
		],
		[
			1346,
			3485
		],
		[
			-677,
			1357
		]
	],
	[
		[
			6283406,
			7278063
		],
		[
			1120,
			3616
		],
		[
			2350,
			-692
		],
		[
			2902,
			1433
		]
	],
	[
		[
			6290792,
			7287589
		],
		[
			2101,
			-1711
		]
	],
	[
		[
			6283406,
			7278063
		],
		[
			-13192,
			4265
		],
		[
			-899,
			1999
		],
		[
			-3295,
			626
		],
		[
			-1811,
			660
		]
	],
	[
		[
			6264209,
			7285613
		],
		[
			1968,
			2558
		],
		[
			-205,
			4353
		],
		[
			1198,
			2044
		],
		[
			-2050,
			4097
		]
	],
	[
		[
			6264209,
			7285613
		],
		[
			-2509,
			-587
		],
		[
			277,
			-2428
		],
		[
			-4010,
			1000
		],
		[
			-2373,
			-1043
		],
		[
			-2512,
			-5291
		],
		[
			-4562,
			-145
		],
		[
			-3991,
			-1143
		],
		[
			-2383,
			-683
		],
		[
			-2750,
			-2072
		],
		[
			-1764,
			-1330
		]
	],
	[
		[
			6237632,
			7271891
		],
		[
			-3654,
			1330
		],
		[
			-1920,
			698
		],
		[
			-9438,
			1275
		],
		[
			-11927,
			-600
		],
		[
			-4540,
			2259
		],
		[
			-3870,
			-2296
		],
		[
			-12366,
			1187
		],
		[
			-15639,
			124
		],
		[
			-3245,
			-1934
		],
		[
			529,
			-713
		],
		[
			647,
			-872
		],
		[
			-2130,
			-376
		],
		[
			-4731,
			-339
		]
	],
	[
		[
			6165348,
			7271634
		],
		[
			831,
			1587
		],
		[
			-1069,
			2208
		],
		[
			-6174,
			4278
		],
		[
			2781,
			1884
		],
		[
			630,
			1494
		],
		[
			-4964,
			4921
		],
		[
			-676,
			3181
		],
		[
			-1810,
			-661
		],
		[
			-4700,
			5280
		],
		[
			-2578,
			80
		],
		[
			-1218,
			1013
		],
		[
			34,
			2395
		],
		[
			1556,
			1022
		],
		[
			797,
			1801
		],
		[
			-2354,
			1729
		],
		[
			-971,
			1987
		],
		[
			1407,
			1874
		],
		[
			1707,
			-809
		],
		[
			1447,
			402
		],
		[
			-3761,
			2956
		],
		[
			-848,
			4560
		],
		[
			-1813,
			2165
		],
		[
			3273,
			2139
		],
		[
			21,
			6209
		],
		[
			2391,
			2701
		],
		[
			2276,
			689
		],
		[
			-636,
			2095
		],
		[
			2299,
			1862
		],
		[
			-3864,
			2307
		],
		[
			-759,
			2462
		]
	],
	[
		[
			6319419,
			7267963
		],
		[
			1299,
			-4550
		],
		[
			-1953,
			-3800
		],
		[
			1367,
			-2748
		],
		[
			49,
			-3905
		],
		[
			2608,
			-273
		],
		[
			1765,
			249
		],
		[
			1040,
			146
		],
		[
			4318,
			-41
		],
		[
			787,
			-1981
		],
		[
			1330,
			-686
		],
		[
			1537,
			165
		],
		[
			4110,
			441
		],
		[
			4443,
			-910
		],
		[
			5199,
			748
		],
		[
			2761,
			-1893
		],
		[
			626,
			-1645
		],
		[
			1979,
			-52
		],
		[
			1410,
			-37
		],
		[
			2580,
			-1971
		],
		[
			4686,
			-1094
		],
		[
			1358,
			-2258
		],
		[
			4427,
			-824
		],
		[
			1244,
			-232
		],
		[
			3504,
			-1618
		],
		[
			3826,
			708
		],
		[
			5507,
			376
		],
		[
			4186,
			-1933
		],
		[
			3679,
			340
		],
		[
			3985,
			-1041
		],
		[
			3690,
			-4476
		],
		[
			2670,
			1033
		],
		[
			1195,
			-400
		],
		[
			936,
			-1807
		],
		[
			-913,
			-927
		]
	],
	[
		[
			6400654,
			7231067
		],
		[
			-7115,
			839
		],
		[
			-4334,
			-1499
		],
		[
			-7196,
			-4294
		],
		[
			-4806,
			-1362
		],
		[
			-10058,
			-1741
		],
		[
			-14461,
			-2502
		],
		[
			-884,
			-153
		],
		[
			-11550,
			-7965
		],
		[
			-6684,
			1128
		],
		[
			-5620,
			948
		],
		[
			-3850,
			1631
		],
		[
			-12738,
			2549
		],
		[
			-17783,
			2806
		],
		[
			-7652,
			-314
		],
		[
			-10619,
			-1823
		],
		[
			-15616,
			-606
		],
		[
			-15159,
			-2834
		],
		[
			-3866,
			-722
		],
		[
			-2570,
			298
		],
		[
			-704,
			-484
		],
		[
			1264,
			-1629
		],
		[
			-2682,
			-1972
		],
		[
			-11206,
			4926
		],
		[
			3347,
			3430
		],
		[
			-3487,
			2533
		],
		[
			-898,
			-2536
		],
		[
			-1679,
			300
		],
		[
			-762,
			1175
		],
		[
			607,
			1817
		]
	],
	[
		[
			6221893,
			7223011
		],
		[
			8,
			1005
		],
		[
			511,
			1160
		],
		[
			-1094,
			892
		],
		[
			-1524,
			1755
		],
		[
			1362,
			2584
		],
		[
			1187,
			732
		],
		[
			-543,
			2023
		],
		[
			3768,
			5894
		],
		[
			226,
			1756
		],
		[
			3713,
			2264
		],
		[
			1632,
			2219
		],
		[
			3814,
			-258
		],
		[
			4878,
			2304
		],
		[
			405,
			2520
		],
		[
			-2355,
			984
		],
		[
			-2810,
			3033
		],
		[
			-3060,
			-202
		],
		[
			315,
			3277
		],
		[
			-2038,
			2814
		],
		[
			3920,
			3181
		],
		[
			5778,
			-1009
		],
		[
			1462,
			676
		],
		[
			339,
			4648
		],
		[
			-1262,
			2329
		],
		[
			-2893,
			2299
		]
	],
	[
		[
			6221893,
			7223011
		],
		[
			-1836,
			-51
		],
		[
			-497,
			-295
		],
		[
			-1631,
			220
		],
		[
			-814,
			-410
		],
		[
			-848,
			11
		],
		[
			-1270,
			582
		],
		[
			-1640,
			-54
		],
		[
			-20,
			-619
		],
		[
			-558,
			-407
		],
		[
			-1860,
			-427
		],
		[
			45,
			-4262
		],
		[
			-4473,
			-730
		],
		[
			-2083,
			1425
		],
		[
			1102,
			3556
		],
		[
			-989,
			1496
		],
		[
			-1003,
			-100
		],
		[
			-3668,
			-323
		],
		[
			3096,
			-4452
		],
		[
			-674,
			-1206
		],
		[
			-1810,
			-477
		],
		[
			-14183,
			5563
		],
		[
			-1985,
			2243
		],
		[
			-1829,
			59
		],
		[
			-3805,
			2350
		],
		[
			-1873,
			1509
		],
		[
			-1847,
			-292
		],
		[
			-7268,
			2487
		],
		[
			768,
			-1034
		],
		[
			4077,
			-1156
		],
		[
			11475,
			-8059
		],
		[
			-3634,
			-2896
		],
		[
			-4426,
			-127
		],
		[
			-2770,
			-1752
		],
		[
			-10314,
			-1260
		],
		[
			-1884,
			-2401
		],
		[
			-3148,
			-1197
		],
		[
			-11845,
			1834
		]
	],
	[
		[
			6145971,
			7212359
		],
		[
			590,
			1435
		],
		[
			-5498,
			-136
		],
		[
			-857,
			2728
		],
		[
			-3729,
			-678
		],
		[
			-2108,
			3662
		],
		[
			1263,
			2928
		],
		[
			-1127,
			2222
		],
		[
			-4217,
			356
		],
		[
			713,
			3114
		],
		[
			2014,
			687
		],
		[
			462,
			1730
		],
		[
			183,
			846
		],
		[
			-2224,
			438
		],
		[
			-3891,
			-829
		],
		[
			-7513,
			5537
		],
		[
			-537,
			1280
		]
	],
	[
		[
			6119495,
			7237679
		],
		[
			7440,
			1155
		],
		[
			1367,
			-1074
		],
		[
			2999,
			1654
		],
		[
			2222,
			-1778
		],
		[
			9471,
			-1362
		],
		[
			5492,
			-2848
		],
		[
			4540,
			1168
		],
		[
			1341,
			1757
		],
		[
			-1768,
			2142
		],
		[
			2401,
			1162
		],
		[
			-29,
			1218
		],
		[
			-2999,
			1504
		],
		[
			423,
			7700
		],
		[
			-3238,
			1527
		],
		[
			338,
			2672
		],
		[
			-1570,
			3481
		],
		[
			-1825,
			1822
		],
		[
			5456,
			1080
		],
		[
			3497,
			3277
		],
		[
			6333,
			-307
		],
		[
			-70,
			3114
		],
		[
			1628,
			1406
		],
		[
			-900,
			2181
		],
		[
			289,
			1667
		],
		[
			1001,
			538
		],
		[
			2014,
			-901
		]
	],
	[
		[
			6185204,
			7215287
		],
		[
			799,
			-877
		],
		[
			419,
			575
		],
		[
			1831,
			148
		],
		[
			2967,
			-2060
		],
		[
			2382,
			-557
		],
		[
			-106,
			-289
		],
		[
			5646,
			-218
		],
		[
			2085,
			-611
		],
		[
			2973,
			-557
		],
		[
			1122,
			-1591
		],
		[
			69,
			-978
		],
		[
			1495,
			-152
		],
		[
			1241,
			-992
		],
		[
			-2432,
			-1275
		],
		[
			-316,
			-576
		],
		[
			-3573,
			-391
		],
		[
			-1842,
			-744
		],
		[
			-1589,
			-1270
		],
		[
			-628,
			-1665
		],
		[
			-99,
			-1815
		],
		[
			-929,
			-903
		],
		[
			-6599,
			-1691
		],
		[
			-4428,
			-576
		],
		[
			-1257,
			270
		],
		[
			-1003,
			1085
		],
		[
			-2196,
			1316
		],
		[
			-2271,
			810
		],
		[
			-2696,
			1651
		],
		[
			-2117,
			755
		],
		[
			-3607,
			866
		],
		[
			-1789,
			879
		],
		[
			-2262,
			1527
		],
		[
			-2356,
			270
		],
		[
			-5815,
			-804
		],
		[
			-305,
			231
		],
		[
			429,
			1016
		],
		[
			1932,
			539
		],
		[
			1295,
			1394
		],
		[
			153,
			775
		],
		[
			1286,
			609
		],
		[
			3447,
			-28
		],
		[
			1642,
			309
		],
		[
			2893,
			1237
		],
		[
			1531,
			408
		],
		[
			1190,
			-188
		],
		[
			-74,
			-1016
		],
		[
			1003,
			468
		],
		[
			1081,
			-223
		],
		[
			-217,
			1244
		],
		[
			4177,
			977
		],
		[
			1032,
			1239
		],
		[
			2304,
			1375
		],
		[
			2082,
			74
		]
	],
	[
		[
			6220929,
			7216857
		],
		[
			-309,
			-383
		],
		[
			-3309,
			498
		],
		[
			-4043,
			317
		],
		[
			-261,
			490
		],
		[
			1884,
			349
		],
		[
			1295,
			918
		],
		[
			592,
			1686
		],
		[
			-209,
			596
		],
		[
			834,
			649
		],
		[
			1955,
			-232
		],
		[
			656,
			-560
		],
		[
			-567,
			-1669
		],
		[
			0,
			-1867
		],
		[
			1482,
			-792
		]
	],
	[
		[
			6377865,
			7276217
		],
		[
			2131,
			1941
		],
		[
			2380,
			-1588
		],
		[
			1982,
			1261
		],
		[
			815,
			-901
		],
		[
			1206,
			266
		],
		[
			-1299,
			1804
		],
		[
			72,
			1444
		],
		[
			2491,
			420
		],
		[
			-414,
			-1135
		],
		[
			1071,
			-104
		],
		[
			2090,
			3558
		],
		[
			14301,
			-2736
		],
		[
			5139,
			-4243
		],
		[
			-4399,
			-1913
		],
		[
			-11036,
			1597
		],
		[
			-2660,
			-82
		],
		[
			304,
			-837
		],
		[
			10037,
			-887
		],
		[
			3023,
			-1118
		],
		[
			5107,
			307
		],
		[
			4682,
			225
		],
		[
			3280,
			1572
		],
		[
			7723,
			859
		],
		[
			16119,
			551
		],
		[
			15001,
			1527
		],
		[
			2189,
			-611
		],
		[
			786,
			-1208
		],
		[
			-644,
			-2357
		],
		[
			-1853,
			-2125
		],
		[
			-4690,
			-234
		],
		[
			-1350,
			-1108
		],
		[
			4121,
			-8505
		],
		[
			-544,
			-6832
		],
		[
			-2460,
			-2268
		],
		[
			-10556,
			-3856
		],
		[
			-4681,
			-444
		],
		[
			-3966,
			-2121
		],
		[
			-10847,
			-1386
		],
		[
			-6479,
			-3020
		],
		[
			-2677,
			-2351
		],
		[
			-1614,
			-3761
		],
		[
			1538,
			-5411
		],
		[
			-704,
			-539
		],
		[
			-1498,
			-64
		],
		[
			-6003,
			603
		],
		[
			-609,
			79
		],
		[
			-862,
			131
		],
		[
			-1301,
			198
		],
		[
			-1653,
			252
		]
	],
	[
		[
			6336920,
			7286703
		],
		[
			5569,
			-2468
		],
		[
			3935,
			891
		],
		[
			4575,
			-1845
		],
		[
			1685,
			-63
		],
		[
			3514,
			-132
		],
		[
			4868,
			1104
		],
		[
			974,
			2231
		],
		[
			2244,
			875
		],
		[
			2861,
			-176
		],
		[
			16317,
			-1003
		],
		[
			3196,
			-1381
		],
		[
			441,
			-1216
		],
		[
			-749,
			-955
		],
		[
			-7750,
			377
		],
		[
			-2271,
			-2195
		],
		[
			-3426,
			-706
		],
		[
			-1297,
			-1251
		],
		[
			3868,
			-1679
		],
		[
			2110,
			65
		],
		[
			281,
			-959
		]
	],
	[
		[
			6384340,
			7279915
		],
		[
			-36,
			-1576
		],
		[
			-1699,
			345
		],
		[
			-991,
			2294
		],
		[
			1501,
			286
		],
		[
			15,
			-1283
		],
		[
			1210,
			-66
		]
	],
	[
		[
			6119495,
			7237679
		],
		[
			-565,
			-162
		],
		[
			-10581,
			-3032
		],
		[
			-3484,
			-998
		],
		[
			-2091,
			2983
		],
		[
			-4418,
			2153
		],
		[
			-3847,
			4541
		],
		[
			-1131,
			1050
		],
		[
			-773,
			270
		],
		[
			-1844,
			1387
		],
		[
			-2408,
			-269
		],
		[
			-2156,
			762
		],
		[
			-2186,
			329
		],
		[
			-1419,
			-29
		],
		[
			-3041,
			1734
		],
		[
			-622,
			1916
		],
		[
			6213,
			5892
		],
		[
			5457,
			8374
		],
		[
			-911,
			2955
		],
		[
			-2326,
			867
		],
		[
			256,
			2375
		],
		[
			-1350,
			447
		],
		[
			-9649,
			-2760
		],
		[
			-2126,
			390
		],
		[
			-4682,
			-2555
		],
		[
			-2750,
			-146
		],
		[
			-2082,
			449
		],
		[
			27,
			1134
		],
		[
			-5476,
			1079
		],
		[
			-6963,
			-1704
		],
		[
			-6608,
			3116
		],
		[
			-11188,
			1009
		],
		[
			-1405,
			-2230
		],
		[
			-6194,
			-27
		],
		[
			-2560,
			-927
		],
		[
			-7679,
			673
		],
		[
			-1052,
			2003
		]
	],
	[
		[
			6015881,
			7270728
		],
		[
			266,
			2493
		],
		[
			128,
			1207
		],
		[
			2320,
			1413
		],
		[
			-289,
			1829
		],
		[
			5805,
			820
		],
		[
			6066,
			5597
		],
		[
			4731,
			2902
		],
		[
			8338,
			1661
		],
		[
			2713,
			-1321
		],
		[
			1256,
			-612
		],
		[
			-1256,
			1047
		],
		[
			-1917,
			1597
		],
		[
			1917,
			1930
		],
		[
			1836,
			1848
		],
		[
			1334,
			3023
		],
		[
			7039,
			5001
		],
		[
			2893,
			3803
		],
		[
			2646,
			1457
		],
		[
			3985,
			1950
		],
		[
			1620,
			2748
		],
		[
			8976,
			3217
		],
		[
			579,
			1521
		],
		[
			-1820,
			733
		],
		[
			-6858,
			-3523
		],
		[
			-4066,
			-3480
		],
		[
			-9819,
			-3701
		],
		[
			-4278,
			-5603
		],
		[
			-1459,
			2351
		]
	],
	[
		[
			6048567,
			7302636
		],
		[
			-1406,
			2669
		],
		[
			1741,
			911
		],
		[
			-2101,
			5273
		],
		[
			1727,
			2207
		],
		[
			-1063,
			1891
		],
		[
			280,
			3349
		],
		[
			2410,
			2375
		]
	],
	[
		[
			6145971,
			7212359
		],
		[
			-2839,
			-292
		],
		[
			-2029,
			-1217
		],
		[
			-1199,
			-809
		],
		[
			-11394,
			334
		],
		[
			-6314,
			-2115
		],
		[
			-3266,
			1634
		],
		[
			-3644,
			-246
		],
		[
			-4170,
			1044
		],
		[
			-2081,
			-909
		],
		[
			-387,
			-1273
		],
		[
			2701,
			190
		],
		[
			2419,
			-2337
		],
		[
			6652,
			-1613
		],
		[
			908,
			-2537
		],
		[
			-2579,
			-3943
		],
		[
			-8412,
			-1441
		],
		[
			-3230,
			1393
		],
		[
			-11783,
			2437
		],
		[
			-21459,
			1359
		],
		[
			-2589,
			-1004
		],
		[
			-1635,
			-2484
		],
		[
			-2346,
			-1555
		],
		[
			-12696,
			6602
		],
		[
			-16637,
			6280
		],
		[
			-11872,
			1902
		],
		[
			-5695,
			-1232
		]
	],
	[
		[
			6020395,
			7210527
		],
		[
			855,
			3067
		],
		[
			-892,
			1838
		],
		[
			4947,
			2817
		],
		[
			-5561,
			2564
		],
		[
			-2298,
			3338
		],
		[
			-5605,
			9
		],
		[
			-1914,
			2228
		],
		[
			-328,
			2981
		],
		[
			-8955,
			-1334
		],
		[
			-3762,
			2372
		],
		[
			1422,
			2867
		],
		[
			-8413,
			-289
		],
		[
			-8119,
			3783
		],
		[
			-4001,
			-189
		],
		[
			-869,
			3735
		],
		[
			-4120,
			1348
		],
		[
			-6920,
			142
		],
		[
			-2192,
			-626
		],
		[
			-2015,
			-1963
		],
		[
			-6763,
			316
		],
		[
			-920,
			921
		],
		[
			1307,
			3721
		],
		[
			-4666,
			403
		],
		[
			-8045,
			2520
		],
		[
			-6296,
			3030
		],
		[
			-3947,
			1899
		],
		[
			-853,
			4164
		],
		[
			4800,
			233
		],
		[
			6013,
			293
		],
		[
			-150,
			3975
		],
		[
			963,
			1315
		]
	],
	[
		[
			5943098,
			7262005
		],
		[
			10140,
			-1390
		],
		[
			7878,
			1175
		],
		[
			8678,
			-2287
		],
		[
			5489,
			-2463
		],
		[
			12206,
			-220
		],
		[
			13537,
			2780
		],
		[
			6787,
			-556
		],
		[
			4062,
			936
		],
		[
			500,
			-1511
		],
		[
			2563,
			3548
		],
		[
			-1602,
			4000
		],
		[
			316,
			4393
		],
		[
			2229,
			318
		]
	],
	[
		[
			6070849,
			7190726
		],
		[
			-1498,
			-679
		],
		[
			-179,
			365
		],
		[
			396,
			862
		],
		[
			4,
			1622
		],
		[
			745,
			1668
		],
		[
			-1056,
			1001
		],
		[
			309,
			289
		],
		[
			2573,
			-367
		],
		[
			1421,
			-1769
		],
		[
			-214,
			-738
		],
		[
			-1104,
			-698
		],
		[
			-1397,
			-1556
		]
	],
	[
		[
			6119422,
			7208210
		],
		[
			-252,
			-900
		],
		[
			-2406,
			85
		],
		[
			-440,
			527
		],
		[
			1355,
			528
		],
		[
			1743,
			-240
		]
	],
	[
		[
			5893313,
			7186216
		],
		[
			-1945,
			-914
		],
		[
			-114,
			-184
		],
		[
			114,
			-509
		],
		[
			775,
			-311
		],
		[
			399,
			131
		],
		[
			486,
			544
		],
		[
			466,
			7
		],
		[
			454,
			-581
		],
		[
			349,
			-1124
		],
		[
			807,
			-905
		],
		[
			-352,
			-584
		],
		[
			-698,
			-334
		],
		[
			21,
			-1226
		],
		[
			421,
			-663
		],
		[
			-428,
			-771
		],
		[
			-1316,
			-447
		],
		[
			-206,
			-346
		],
		[
			313,
			-203
		],
		[
			1168,
			104
		],
		[
			770,
			-372
		],
		[
			380,
			-562
		],
		[
			-115,
			-333
		],
		[
			672,
			-434
		],
		[
			-162,
			-278
		],
		[
			-426,
			-161
		],
		[
			-725,
			89
		],
		[
			-1398,
			-323
		],
		[
			-200,
			-383
		],
		[
			747,
			-486
		],
		[
			984,
			130
		],
		[
			728,
			-156
		],
		[
			422,
			-655
		],
		[
			1418,
			682
		],
		[
			628,
			-46
		],
		[
			761,
			-935
		],
		[
			-291,
			-504
		],
		[
			-1916,
			-448
		],
		[
			-1069,
			-765
		],
		[
			70,
			-385
		],
		[
			865,
			-593
		],
		[
			-44,
			-483
		],
		[
			-2023,
			-51
		],
		[
			-1327,
			-519
		],
		[
			-175,
			617
		],
		[
			488,
			413
		],
		[
			32,
			215
		],
		[
			-814,
			820
		],
		[
			-1537,
			855
		],
		[
			-3882,
			1512
		],
		[
			-2547,
			449
		],
		[
			-2225,
			85
		],
		[
			-869,
			-191
		],
		[
			-1428,
			138
		],
		[
			-1178,
			-110
		],
		[
			-2151,
			397
		],
		[
			-5007,
			-405
		],
		[
			-1366,
			-916
		],
		[
			-393,
			-612
		],
		[
			-1567,
			-605
		],
		[
			-613,
			-503
		],
		[
			-1848,
			161
		],
		[
			-1072,
			-484
		],
		[
			-3101,
			-610
		],
		[
			-1579,
			34
		],
		[
			-1581,
			335
		],
		[
			-7396,
			19
		],
		[
			-3424,
			-1110
		],
		[
			-1745,
			2727
		],
		[
			-5851,
			-1388
		],
		[
			-1160,
			-1103
		],
		[
			853,
			-1785
		],
		[
			-2526,
			-1664
		],
		[
			-100,
			-1169
		],
		[
			517,
			-2308
		],
		[
			-2278,
			-2565
		],
		[
			-5094,
			842
		],
		[
			-6439,
			-3074
		],
		[
			-3681,
			-175
		],
		[
			-3159,
			-4296
		],
		[
			-1973,
			-1069
		],
		[
			-2024,
			1878
		],
		[
			-1268,
			3754
		],
		[
			-2621,
			-452
		],
		[
			1061,
			-2470
		],
		[
			-1143,
			-1486
		],
		[
			840,
			-1191
		],
		[
			-3121,
			-2012
		],
		[
			-690,
			-1978
		],
		[
			-1583,
			-1060
		],
		[
			3025,
			-1879
		],
		[
			1126,
			-3394
		],
		[
			-4076,
			-3794
		],
		[
			-5575,
			-449
		],
		[
			-3496,
			-3842
		],
		[
			-4976,
			1998
		],
		[
			-1438,
			1989
		],
		[
			-300,
			3040
		],
		[
			-4615,
			4462
		],
		[
			-7535,
			2288
		],
		[
			-4069,
			146
		],
		[
			-4547,
			2070
		],
		[
			-5414,
			-253
		],
		[
			-1509,
			-1371
		],
		[
			-28,
			-3243
		],
		[
			-3851,
			-2144
		],
		[
			-9182,
			-1519
		],
		[
			-3727,
			2653
		],
		[
			1621,
			2479
		],
		[
			-932,
			3998
		],
		[
			2895,
			3245
		],
		[
			4520,
			978
		],
		[
			9612,
			4363
		],
		[
			3727,
			193
		],
		[
			3282,
			-1740
		],
		[
			2944,
			-361
		],
		[
			4609,
			4348
		],
		[
			4927,
			216
		],
		[
			6856,
			3185
		],
		[
			4006,
			4322
		],
		[
			3229,
			849
		],
		[
			3897,
			2503
		],
		[
			1546,
			5307
		],
		[
			6197,
			1531
		],
		[
			2752,
			1596
		],
		[
			1559,
			3359
		],
		[
			744,
			7718
		],
		[
			4090,
			-150
		],
		[
			3854,
			1873
		],
		[
			1990,
			-2826
		],
		[
			1486,
			-243
		],
		[
			-923,
			2220
		],
		[
			72,
			3378
		],
		[
			3467,
			-269
		],
		[
			9386,
			1717
		],
		[
			2282,
			2189
		],
		[
			1518,
			4423
		],
		[
			7462,
			2959
		],
		[
			4081,
			4205
		],
		[
			7419,
			3930
		],
		[
			1375,
			5210
		],
		[
			-1171,
			7343
		],
		[
			2030,
			2336
		]
	],
	[
		[
			5860580,
			7231531
		],
		[
			7966,
			-180
		],
		[
			3818,
			-5908
		],
		[
			-1949,
			-5474
		],
		[
			-2729,
			-2001
		],
		[
			4970,
			-2442
		],
		[
			3783,
			176
		],
		[
			2090,
			-6412
		],
		[
			3183,
			-5688
		],
		[
			2922,
			-1954
		],
		[
			-70,
			-4354
		],
		[
			2839,
			-643
		],
		[
			1591,
			-3736
		],
		[
			4372,
			-1090
		],
		[
			2780,
			-2818
		],
		[
			-2735,
			-1031
		],
		[
			-98,
			-1760
		]
	],
	[
		[
			5687572,
			7130981
		],
		[
			-744,
			-1107
		],
		[
			-1258,
			-50
		],
		[
			-793,
			-550
		],
		[
			-638,
			606
		],
		[
			-1343,
			-675
		],
		[
			-760,
			755
		],
		[
			976,
			822
		],
		[
			1079,
			52
		],
		[
			-283,
			593
		],
		[
			1444,
			1020
		],
		[
			2067,
			-825
		],
		[
			253,
			-641
		]
	],
	[
		[
			5681683,
			7135050
		],
		[
			1491,
			-1070
		],
		[
			-265,
			-777
		],
		[
			-1002,
			-513
		],
		[
			-651,
			1519
		],
		[
			-761,
			360
		],
		[
			-429,
			-1310
		],
		[
			-1072,
			20
		],
		[
			-292,
			672
		],
		[
			1719,
			1520
		],
		[
			1262,
			-421
		]
	],
	[
		[
			5686157,
			7135458
		],
		[
			1333,
			-333
		],
		[
			1087,
			288
		],
		[
			305,
			-490
		],
		[
			-1853,
			-544
		],
		[
			-2336,
			805
		],
		[
			1046,
			896
		],
		[
			418,
			-622
		]
	],
	[
		[
			5682339,
			7127568
		],
		[
			-1511,
			-389
		],
		[
			-912,
			1143
		],
		[
			86,
			290
		],
		[
			2472,
			-408
		],
		[
			-135,
			-636
		]
	],
	[
		[
			6020395,
			7210527
		],
		[
			-7260,
			-1859
		],
		[
			-5695,
			209
		],
		[
			-2525,
			-1564
		],
		[
			-15135,
			-1259
		],
		[
			-4582,
			-4001
		],
		[
			-6761,
			-2599
		],
		[
			-4682,
			685
		],
		[
			-3387,
			5850
		],
		[
			-1582,
			470
		],
		[
			-248,
			-1101
		],
		[
			2724,
			-6676
		],
		[
			-5662,
			-5808
		],
		[
			-1327,
			-2527
		],
		[
			-195,
			-3056
		],
		[
			1308,
			-2140
		],
		[
			-4378,
			-886
		],
		[
			-1514,
			-2787
		],
		[
			1116,
			-2185
		],
		[
			4910,
			-781
		],
		[
			-1088,
			-1917
		],
		[
			-1945,
			-3357
		],
		[
			-3781,
			-738
		],
		[
			-6794,
			-3949
		],
		[
			-811,
			-2500
		],
		[
			-1731,
			-5330
		],
		[
			-6050,
			-1395
		],
		[
			-5152,
			2316
		],
		[
			-1896,
			-1169
		],
		[
			-554,
			-341
		],
		[
			-5548,
			1823
		],
		[
			-1187,
			590
		],
		[
			144,
			1899
		],
		[
			-1406,
			1607
		],
		[
			-739,
			844
		],
		[
			-5913,
			1550
		],
		[
			-901,
			1116
		],
		[
			-7914,
			-1369
		],
		[
			-2806,
			288
		],
		[
			-1971,
			1632
		],
		[
			-3892,
			675
		],
		[
			-737,
			2590
		],
		[
			-634,
			1558
		],
		[
			-3419,
			-120
		],
		[
			-1901,
			826
		],
		[
			-1900,
			3025
		],
		[
			1478,
			2470
		],
		[
			-3159,
			5080
		]
	],
	[
		[
			5860580,
			7231531
		],
		[
			1411,
			7225
		],
		[
			1670,
			1885
		],
		[
			4794,
			-49
		],
		[
			8244,
			-2499
		],
		[
			3919,
			-327
		],
		[
			4655,
			1228
		],
		[
			7349,
			5378
		],
		[
			3971,
			-760
		],
		[
			1385,
			2297
		],
		[
			-3546,
			373
		],
		[
			-4092,
			6366
		],
		[
			2775,
			1656
		],
		[
			746,
			3000
		],
		[
			1303,
			1085
		],
		[
			10791,
			1775
		],
		[
			5179,
			-310
		],
		[
			11170,
			1792
		],
		[
			10941,
			281
		],
		[
			3027,
			1046
		],
		[
			6826,
			-968
		]
	],
	[
		[
			5849207,
			7254849
		],
		[
			-1005,
			-242
		],
		[
			-1018,
			1359
		],
		[
			531,
			836
		],
		[
			-434,
			1508
		],
		[
			333,
			528
		],
		[
			1394,
			-1587
		],
		[
			199,
			-2402
		]
	],
	[
		[
			5892769,
			7185300
		],
		[
			-569,
			-959
		],
		[
			-720,
			242
		],
		[
			3,
			674
		],
		[
			1053,
			525
		],
		[
			233,
			-482
		]
	],
	[
		[
			5977675,
			7427943
		],
		[
			-2166,
			-1775
		],
		[
			-8640,
			-918
		],
		[
			-3044,
			-2516
		],
		[
			-7941,
			-2359
		],
		[
			-1137,
			-2710
		],
		[
			1487,
			-5260
		],
		[
			-1799,
			-3152
		],
		[
			-7500,
			-1394
		],
		[
			-3121,
			-1611
		],
		[
			-7542,
			-205
		],
		[
			-2261,
			-61
		],
		[
			-2733,
			-2446
		],
		[
			-1108,
			-4693
		],
		[
			-3333,
			-2113
		],
		[
			-3785,
			-651
		],
		[
			-537,
			-1305
		],
		[
			7655,
			-700
		],
		[
			1036,
			-1860
		],
		[
			195,
			-3123
		],
		[
			1962,
			-1944
		],
		[
			2909,
			620
		],
		[
			5162,
			1101
		],
		[
			-650,
			-2092
		],
		[
			-2019,
			-1828
		],
		[
			-182,
			-1768
		],
		[
			4843,
			-3179
		],
		[
			2074,
			-4081
		],
		[
			2841,
			-1920
		],
		[
			-6896,
			-3485
		],
		[
			1962,
			-4183
		],
		[
			-3120,
			-2616
		],
		[
			60,
			-11687
		],
		[
			2652,
			-2033
		],
		[
			325,
			-2490
		],
		[
			4213,
			-1483
		],
		[
			1691,
			-2701
		],
		[
			574,
			-918
		],
		[
			-6557,
			-10286
		],
		[
			-178,
			-5095
		],
		[
			-5172,
			-4042
		],
		[
			-1623,
			-2635
		],
		[
			-1761,
			-2857
		],
		[
			1761,
			-1491
		],
		[
			2132,
			-1806
		],
		[
			2434,
			105
		],
		[
			1823,
			1986
		],
		[
			5932,
			1002
		],
		[
			6206,
			-1401
		],
		[
			1248,
			-1726
		],
		[
			11025,
			5403
		],
		[
			1578,
			1941
		],
		[
			2362,
			-932
		],
		[
			2757,
			1347
		],
		[
			1578,
			-1634
		],
		[
			3903,
			-1127
		],
		[
			552,
			-1288
		],
		[
			1928,
			-131
		],
		[
			2087,
			441
		],
		[
			3093,
			2884
		],
		[
			4821,
			-1085
		],
		[
			7711,
			325
		],
		[
			1532,
			-1935
		],
		[
			3863,
			-319
		],
		[
			5467,
			-2074
		],
		[
			2262,
			-4932
		],
		[
			3603,
			-990
		],
		[
			-485,
			-1802
		],
		[
			1280,
			-999
		],
		[
			-1504,
			-1753
		],
		[
			3025,
			-3601
		],
		[
			-8463,
			-2123
		],
		[
			-1680,
			249
		],
		[
			-706,
			-1127
		],
		[
			-3842,
			-1248
		],
		[
			-229,
			-789
		],
		[
			1858,
			-1390
		],
		[
			-2134,
			-2202
		],
		[
			-4827,
			1320
		],
		[
			-7037,
			-628
		],
		[
			-2242,
			-1231
		],
		[
			-2020,
			1016
		],
		[
			-2958,
			-338
		],
		[
			-2843,
			-1310
		],
		[
			-618,
			-2303
		],
		[
			-5890,
			-764
		],
		[
			-9429,
			932
		],
		[
			-4180,
			-2420
		],
		[
			-6234,
			-539
		],
		[
			-3621,
			-1322
		]
	],
	[
		[
			5951390,
			7285680
		],
		[
			-2271,
			949
		],
		[
			-5653,
			59
		],
		[
			-7194,
			8256
		],
		[
			-2232,
			2560
		],
		[
			-3870,
			2703
		],
		[
			-3617,
			228
		],
		[
			-9387,
			-1202
		],
		[
			-1730,
			-1844
		],
		[
			1206,
			-1806
		],
		[
			-780,
			-392
		],
		[
			-4317,
			366
		],
		[
			-3076,
			-883
		],
		[
			-6679,
			860
		],
		[
			-2018,
			-875
		],
		[
			113,
			-1559
		],
		[
			-6315,
			-458
		],
		[
			-8758,
			2260
		],
		[
			1204,
			1603
		],
		[
			-1123,
			3174
		],
		[
			5759,
			3420
		],
		[
			1505,
			-1302
		],
		[
			5927,
			-461
		],
		[
			8982,
			3210
		],
		[
			2855,
			4478
		],
		[
			-3528,
			-3532
		],
		[
			-2335,
			-707
		],
		[
			-3923,
			-111
		],
		[
			-6007,
			2266
		],
		[
			-9238,
			-910
		],
		[
			-6732,
			4501
		],
		[
			23,
			922
		],
		[
			1549,
			901
		],
		[
			-1332,
			1268
		],
		[
			-395,
			2720
		],
		[
			-3775,
			-1471
		],
		[
			-3673,
			953
		],
		[
			-262,
			-770
		],
		[
			1885,
			-1708
		],
		[
			-984,
			-800
		],
		[
			-22554,
			-1056
		],
		[
			-2113,
			-1191
		],
		[
			-725,
			-3143
		],
		[
			-2805,
			-2919
		],
		[
			-6582,
			-1707
		],
		[
			-6938,
			415
		],
		[
			-6481,
			-3771
		],
		[
			-2625,
			-398
		],
		[
			-9794,
			2044
		],
		[
			-2000,
			3559
		],
		[
			-4157,
			2419
		],
		[
			1428,
			689
		],
		[
			3824,
			-631
		],
		[
			2760,
			985
		],
		[
			6245,
			-1206
		],
		[
			972,
			2341
		],
		[
			-11188,
			499
		],
		[
			-4462,
			1131
		],
		[
			-4708,
			-576
		],
		[
			-473,
			-1831
		],
		[
			-1098,
			-568
		],
		[
			-5442,
			3765
		],
		[
			5820,
			3821
		],
		[
			5807,
			1344
		],
		[
			332,
			3857
		],
		[
			-2854,
			4030
		],
		[
			-8319,
			1381
		],
		[
			-8828,
			-134
		],
		[
			1692,
			3848
		],
		[
			10268,
			3972
		],
		[
			9377,
			2288
		],
		[
			1474,
			4365
		],
		[
			1279,
			1075
		],
		[
			6736,
			-313
		],
		[
			2824,
			-1970
		],
		[
			3999,
			876
		],
		[
			2796,
			1747
		],
		[
			5265,
			-415
		],
		[
			1631,
			2154
		],
		[
			5015,
			1935
		],
		[
			5127,
			4367
		],
		[
			4203,
			-839
		],
		[
			896,
			2136
		],
		[
			1321,
			753
		],
		[
			9436,
			1210
		],
		[
			5867,
			-324
		],
		[
			13995,
			7287
		],
		[
			5841,
			633
		],
		[
			9935,
			4150
		],
		[
			8666,
			7789
		],
		[
			3155,
			4578
		],
		[
			4459,
			9925
		],
		[
			596,
			4256
		],
		[
			11986,
			2879
		],
		[
			-12832,
			-424
		],
		[
			-5503,
			5422
		],
		[
			1359,
			4989
		],
		[
			7300,
			6631
		],
		[
			-3697,
			1226
		],
		[
			-7154,
			7185
		],
		[
			864,
			4257
		],
		[
			-720,
			4098
		],
		[
			3261,
			1609
		],
		[
			-30,
			1061
		],
		[
			-14410,
			60
		],
		[
			-15393,
			-2652
		],
		[
			-7250,
			-3488
		],
		[
			-1894,
			-2341
		],
		[
			-629,
			-3026
		],
		[
			-2063,
			-1178
		],
		[
			-7726,
			3002
		],
		[
			-13360,
			-2635
		],
		[
			-2018,
			702
		],
		[
			3361,
			5443
		],
		[
			6992,
			5025
		],
		[
			7025,
			3188
		],
		[
			6474,
			1369
		],
		[
			14290,
			7913
		],
		[
			2534,
			3412
		],
		[
			742,
			4029
		],
		[
			15138,
			10904
		],
		[
			5593,
			1933
		],
		[
			12109,
			1618
		],
		[
			15949,
			4786
		],
		[
			177,
			1930
		],
		[
			-2417,
			1811
		],
		[
			290,
			765
		],
		[
			2579,
			-201
		],
		[
			2472,
			-1299
		],
		[
			2784,
			78
		],
		[
			1281,
			84
		],
		[
			5498,
			-2941
		],
		[
			10655,
			-596
		],
		[
			25131,
			6093
		]
	],
	[
		[
			5978837,
			7473899
		],
		[
			-1012,
			-1861
		],
		[
			-1980,
			-1262
		],
		[
			25,
			-1033
		],
		[
			5457,
			-3350
		],
		[
			-892,
			-2478
		],
		[
			3476,
			-2022
		],
		[
			76,
			-2349
		],
		[
			4399,
			-4794
		],
		[
			8038,
			-983
		],
		[
			1489,
			-3471
		],
		[
			2260,
			-1362
		],
		[
			1924,
			-3262
		],
		[
			-1283,
			-2503
		],
		[
			997,
			-2067
		],
		[
			-1239,
			-2608
		],
		[
			5082,
			-2960
		],
		[
			-1306,
			-1160
		],
		[
			-6368,
			-972
		],
		[
			-14083,
			-224
		],
		[
			-3641,
			-2239
		],
		[
			-2581,
			-2996
		]
	],
	[
		[
			5894404,
			7469949
		],
		[
			65,
			-1520
		],
		[
			5741,
			777
		],
		[
			3364,
			1352
		],
		[
			7096,
			-858
		],
		[
			-4818,
			-4915
		],
		[
			-10946,
			-4741
		],
		[
			-1977,
			-2749
		],
		[
			-7528,
			-3602
		],
		[
			-3779,
			-407
		],
		[
			-2185,
			-1204
		],
		[
			-4722,
			1188
		],
		[
			-1814,
			1718
		],
		[
			-1977,
			-317
		],
		[
			-2057,
			1989
		],
		[
			-3820,
			838
		],
		[
			-90,
			2316
		],
		[
			-1841,
			1275
		],
		[
			-3239,
			2249
		],
		[
			-5317,
			-111
		],
		[
			-1643,
			3257
		],
		[
			-5731,
			558
		],
		[
			-1215,
			2409
		],
		[
			1410,
			1340
		],
		[
			2873,
			44
		],
		[
			6919,
			-3022
		],
		[
			1242,
			194
		],
		[
			310,
			2194
		],
		[
			-1523,
			1597
		],
		[
			2171,
			4128
		],
		[
			-1406,
			2823
		],
		[
			5149,
			1253
		],
		[
			6376,
			330
		],
		[
			3313,
			1195
		],
		[
			13291,
			-1447
		],
		[
			1595,
			-1636
		],
		[
			-145,
			-2242
		],
		[
			1565,
			-1351
		],
		[
			2682,
			-570
		],
		[
			2611,
			-4332
		]
	],
	[
		[
			5781913,
			7326257
		],
		[
			-135,
			-2689
		],
		[
			-1994,
			1653
		],
		[
			653,
			1138
		],
		[
			1476,
			-102
		]
	],
	[
		[
			5787081,
			7312802
		],
		[
			-1218,
			-1390
		],
		[
			-1794,
			561
		],
		[
			-233,
			692
		],
		[
			1247,
			544
		],
		[
			1998,
			-407
		]
	],
	[
		[
			5847729,
			7302456
		],
		[
			-1046,
			-794
		],
		[
			-1522,
			406
		],
		[
			-157,
			463
		],
		[
			1478,
			377
		],
		[
			1247,
			-452
		]
	],
	[
		[
			5837117,
			7415427
		],
		[
			-490,
			-1446
		],
		[
			-1191,
			260
		],
		[
			180,
			1275
		],
		[
			1501,
			-89
		]
	],
	[
		[
			5788378,
			7308172
		],
		[
			-1631,
			-336
		],
		[
			-372,
			381
		],
		[
			496,
			745
		],
		[
			1179,
			293
		],
		[
			328,
			-1083
		]
	],
	[
		[
			6048567,
			7302636
		],
		[
			-4,
			-2586
		],
		[
			-2604,
			-1607
		],
		[
			-2295,
			-1417
		],
		[
			-4596,
			-645
		],
		[
			-14205,
			-4308
		],
		[
			-5683,
			359
		],
		[
			-2582,
			1263
		],
		[
			-2170,
			-1979
		],
		[
			-7521,
			-2829
		],
		[
			-3856,
			-1263
		],
		[
			-3031,
			-3311
		],
		[
			-2277,
			48
		],
		[
			710,
			-1835
		],
		[
			-1013,
			-3377
		],
		[
			-16513,
			-2220
		],
		[
			-21010,
			1828
		],
		[
			-4523,
			3964
		],
		[
			-3787,
			1963
		],
		[
			-217,
			996
		]
	],
	[
		[
			5978837,
			7473899
		],
		[
			4556,
			51
		],
		[
			3196,
			-2490
		],
		[
			17840,
			-7595
		],
		[
			854,
			107
		],
		[
			-242,
			1418
		]
	],
	[
		[
			6035025,
			7908221
		],
		[
			6336,
			-1019
		],
		[
			8430,
			260
		],
		[
			14221,
			-2014
		],
		[
			15797,
			489
		],
		[
			5557,
			1887
		],
		[
			10793,
			-1647
		],
		[
			7342,
			2259
		],
		[
			10392,
			-89
		],
		[
			3136,
			-1617
		],
		[
			5640,
			-819
		],
		[
			4492,
			-3529
		],
		[
			4631,
			-2286
		],
		[
			3171,
			-8286
		],
		[
			2330,
			-2754
		],
		[
			-1121,
			-1100
		],
		[
			805,
			-2874
		],
		[
			-4301,
			-4222
		],
		[
			-2954,
			-1583
		],
		[
			-1952,
			-2369
		],
		[
			-11727,
			-6255
		],
		[
			-456,
			-1881
		],
		[
			-4700,
			-5877
		],
		[
			-2538,
			-4901
		],
		[
			-595,
			-1149
		],
		[
			-127,
			-2251
		],
		[
			722,
			-887
		],
		[
			1120,
			-1374
		],
		[
			-45,
			-1626
		],
		[
			-1075,
			-1410
		],
		[
			-3050,
			-4000
		],
		[
			-5551,
			-4549
		],
		[
			-2230,
			-2564
		],
		[
			-2272,
			-2611
		],
		[
			-45,
			-5738
		],
		[
			-2012,
			-3328
		],
		[
			-9925,
			-7684
		],
		[
			-8595,
			-3132
		],
		[
			-2028,
			-1476
		]
	],
	[
		[
			6072641,
			7814215
		],
		[
			-3644,
			-569
		],
		[
			-4120,
			2045
		],
		[
			-2763,
			1372
		],
		[
			-8104,
			103
		],
		[
			-1860,
			2145
		],
		[
			-1857,
			634
		],
		[
			-517,
			766
		],
		[
			-1075,
			1595
		],
		[
			-473,
			2018
		],
		[
			645,
			2742
		],
		[
			-1528,
			739
		],
		[
			-847,
			2209
		],
		[
			-539,
			210
		],
		[
			-3044,
			1188
		],
		[
			-3491,
			2848
		],
		[
			-5985,
			626
		],
		[
			-1812,
			1354
		],
		[
			-5960,
			993
		],
		[
			-5861,
			-1658
		],
		[
			-1198,
			27
		],
		[
			-6083,
			140
		],
		[
			-4847,
			-1099
		],
		[
			-2014,
			-1518
		],
		[
			-1612,
			-4892
		],
		[
			-1885,
			-686
		],
		[
			-2712,
			1676
		],
		[
			-12605,
			2083
		],
		[
			-801,
			-2022
		],
		[
			-4615,
			-1174
		],
		[
			-3469,
			-1940
		],
		[
			-5956,
			938
		],
		[
			-3992,
			-1004
		],
		[
			-3264,
			1194
		],
		[
			-3363,
			46
		],
		[
			-2245,
			31
		],
		[
			-347,
			1673
		],
		[
			-2425,
			2687
		],
		[
			-5462,
			-540
		],
		[
			-2449,
			730
		],
		[
			-1913,
			-1454
		],
		[
			-1900,
			-202
		],
		[
			-3437,
			1648
		],
		[
			-4318,
			-683
		],
		[
			-1881,
			1063
		]
	],
	[
		[
			6072641,
			7814215
		],
		[
			-2379,
			-4638
		],
		[
			939,
			-1189
		],
		[
			-302,
			-1029
		],
		[
			-6125,
			-3147
		],
		[
			256,
			-2093
		],
		[
			1711,
			-834
		],
		[
			-465,
			-1032
		],
		[
			-5518,
			-5053
		],
		[
			-7576,
			-2315
		],
		[
			-7223,
			-3576
		],
		[
			-1762,
			-873
		],
		[
			-2750,
			-3171
		],
		[
			-6763,
			1389
		],
		[
			-6237,
			-1514
		],
		[
			-6918,
			3
		],
		[
			-2921,
			-685
		],
		[
			-2475,
			-581
		],
		[
			-6146,
			669
		],
		[
			-7926,
			-3128
		],
		[
			-8156,
			-4894
		],
		[
			-6507,
			-1809
		],
		[
			80,
			-966
		],
		[
			8279,
			1445
		],
		[
			27855,
			8351
		],
		[
			8566,
			-674
		],
		[
			1506,
			-650
		],
		[
			408,
			-1553
		],
		[
			-769,
			-2359
		],
		[
			-2758,
			-3290
		],
		[
			3227,
			-588
		],
		[
			4996,
			-2398
		],
		[
			7171,
			-1140
		],
		[
			1991,
			-533
		],
		[
			6572,
			-4000
		],
		[
			-8563,
			-5244
		],
		[
			-11052,
			-3394
		],
		[
			-6082,
			54
		],
		[
			-5995,
			1786
		],
		[
			-4433,
			-432
		],
		[
			-17776,
			-9001
		],
		[
			-3455,
			-4812
		],
		[
			-9757,
			-1036
		],
		[
			-9720,
			-2930
		],
		[
			-2285,
			-1440
		],
		[
			-14014,
			3386
		],
		[
			-4004,
			967
		],
		[
			-10991,
			-490
		],
		[
			-11059,
			5533
		],
		[
			-6844,
			1455
		],
		[
			56,
			-1195
		],
		[
			2066,
			713
		],
		[
			2547,
			-1672
		],
		[
			1945,
			404
		],
		[
			6296,
			-3826
		],
		[
			2116,
			-3729
		],
		[
			2848,
			757
		],
		[
			2164,
			-2115
		],
		[
			6739,
			526
		],
		[
			6121,
			-1251
		],
		[
			2214,
			-452
		],
		[
			535,
			-228
		],
		[
			8504,
			-595
		],
		[
			3387,
			-325
		],
		[
			3958,
			860
		],
		[
			6554,
			-1985
		],
		[
			10953,
			829
		],
		[
			4672,
			-2345
		],
		[
			1138,
			-592
		],
		[
			2340,
			-882
		],
		[
			1766,
			-273
		],
		[
			11197,
			2064
		],
		[
			5218,
			961
		],
		[
			1812,
			1058
		],
		[
			541,
			1225
		],
		[
			426,
			964
		],
		[
			2757,
			503
		],
		[
			-484,
			2076
		],
		[
			4792,
			2568
		],
		[
			2814,
			368
		],
		[
			9475,
			-332
		],
		[
			2056,
			-72
		],
		[
			3962,
			-898
		],
		[
			4502,
			-3144
		],
		[
			-835,
			-1967
		],
		[
			2551,
			700
		],
		[
			2061,
			-659
		],
		[
			3243,
			397
		],
		[
			1851,
			-504
		],
		[
			5421,
			-1477
		],
		[
			7743,
			-3910
		]
	],
	[
		[
			6078514,
			7733307
		],
		[
			-4385,
			-3208
		],
		[
			-5849,
			-2679
		],
		[
			-3605,
			2286
		],
		[
			-4822,
			23
		],
		[
			-1129,
			-1917
		],
		[
			2029,
			-1543
		],
		[
			599,
			-456
		],
		[
			-201,
			-1491
		],
		[
			-1166,
			-1233
		],
		[
			-2478,
			-44
		],
		[
			-1827,
			-1265
		],
		[
			-7194,
			1392
		],
		[
			-2527,
			-490
		],
		[
			-4804,
			-931
		],
		[
			-3598,
			1080
		],
		[
			-5985,
			-2020
		],
		[
			-2879,
			286
		],
		[
			-1795,
			-1506
		],
		[
			-4740,
			-1418
		],
		[
			-2708,
			2064
		],
		[
			-842,
			-404
		],
		[
			-11130,
			-5348
		],
		[
			-2125,
			-1837
		],
		[
			87,
			-1811
		],
		[
			-3273,
			-1011
		],
		[
			-1736,
			1436
		],
		[
			-1061,
			3519
		],
		[
			-3043,
			3947
		],
		[
			-2786,
			-1418
		],
		[
			-6129,
			-897
		],
		[
			-2323,
			1823
		],
		[
			-4129,
			-122
		],
		[
			-2686,
			3003
		],
		[
			-2572,
			-437
		],
		[
			-3822,
			-1502
		],
		[
			-1102,
			-1976
		],
		[
			-2764,
			-1399
		],
		[
			-1200,
			150
		],
		[
			-4556,
			1092
		],
		[
			-1701,
			680
		],
		[
			-1046,
			-373
		],
		[
			-2699,
			1241
		],
		[
			-914,
			1083
		],
		[
			-2465,
			-671
		],
		[
			-2593,
			48
		],
		[
			-1399,
			-171
		],
		[
			-2194,
			-708
		],
		[
			-721,
			230
		],
		[
			-887,
			-166
		],
		[
			-1001,
			-448
		],
		[
			-1382,
			-278
		],
		[
			-1319,
			-951
		],
		[
			-1162,
			346
		]
	],
	[
		[
			5940775,
			7716907
		],
		[
			1863,
			3097
		],
		[
			-1743,
			3948
		],
		[
			763,
			2045
		],
		[
			-3425,
			252
		],
		[
			-3066,
			367
		],
		[
			-2246,
			1739
		],
		[
			-657,
			1227
		],
		[
			-6536,
			2932
		],
		[
			1755,
			2228
		],
		[
			-6085,
			656
		],
		[
			-1540,
			1509
		],
		[
			-2665,
			519
		],
		[
			-826,
			1268
		],
		[
			-297,
			456
		],
		[
			-2989,
			576
		],
		[
			83,
			1784
		],
		[
			-7112,
			-159
		],
		[
			-3921,
			-1763
		],
		[
			-2193,
			-78
		],
		[
			-1182,
			1846
		],
		[
			-3335,
			-1397
		],
		[
			-9078,
			1353
		],
		[
			-582,
			-1190
		],
		[
			1136,
			-1428
		],
		[
			538,
			-675
		],
		[
			-96,
			-2311
		],
		[
			-1900,
			-1104
		],
		[
			-3358,
			58
		],
		[
			-3915,
			1980
		],
		[
			-4724,
			-475
		],
		[
			-3008,
			2527
		],
		[
			-3163,
			1382
		],
		[
			-1193,
			2922
		],
		[
			487,
			1746
		],
		[
			-10879,
			2175
		],
		[
			-236,
			2770
		],
		[
			-4006,
			1459
		],
		[
			-2203,
			4038
		],
		[
			-3179,
			3109
		],
		[
			-549,
			7077
		],
		[
			2865,
			1692
		],
		[
			-855,
			1354
		],
		[
			970,
			2372
		],
		[
			-6884,
			898
		],
		[
			-5014,
			-607
		]
	],
	[
		[
			5940775,
			7716907
		],
		[
			-2427,
			-1075
		],
		[
			-9788,
			-754
		],
		[
			-5484,
			-2461
		],
		[
			-11399,
			5151
		],
		[
			-1400,
			905
		],
		[
			409,
			929
		],
		[
			-623,
			497
		],
		[
			-5591,
			2072
		],
		[
			-6229,
			-916
		],
		[
			-3447,
			1431
		],
		[
			-2307,
			-225
		],
		[
			-553,
			-1455
		],
		[
			1743,
			-1272
		],
		[
			102,
			-1218
		],
		[
			-1755,
			-1283
		],
		[
			-1925,
			-38
		],
		[
			-480,
			-989
		],
		[
			-2364,
			-873
		],
		[
			5686,
			-4397
		],
		[
			-283,
			-3021
		],
		[
			-2175,
			-1304
		],
		[
			-7284,
			982
		],
		[
			-6010,
			2804
		],
		[
			-8189,
			1959
		],
		[
			-630,
			1139
		],
		[
			-2572,
			1134
		],
		[
			-3935,
			-942
		],
		[
			-4224,
			2799
		],
		[
			-3786,
			-1192
		],
		[
			-4349,
			-51
		],
		[
			-2886,
			3385
		],
		[
			-3218,
			787
		],
		[
			-5144,
			2946
		],
		[
			489,
			2103
		],
		[
			-2406,
			1785
		],
		[
			-2128,
			1068
		],
		[
			-7973,
			-1048
		]
	],
	[
		[
			5826240,
			7726269
		],
		[
			-388,
			1441
		],
		[
			1893,
			4991
		],
		[
			5135,
			1914
		],
		[
			3207,
			225
		],
		[
			12055,
			-2747
		],
		[
			19157,
			-1151
		],
		[
			12032,
			-4673
		],
		[
			-518,
			399
		],
		[
			-2878,
			996
		],
		[
			-8402,
			3703
		],
		[
			-21613,
			4202
		],
		[
			-1426,
			2379
		],
		[
			-2094,
			746
		],
		[
			-5629,
			2005
		],
		[
			-4680,
			5406
		],
		[
			-717,
			-1426
		],
		[
			967,
			-2041
		],
		[
			4407,
			-3944
		],
		[
			686,
			-614
		],
		[
			-3291,
			-965
		],
		[
			-3908,
			890
		],
		[
			-252,
			689
		],
		[
			-2293,
			6270
		],
		[
			6868,
			8487
		],
		[
			5753,
			5578
		]
	],
	[
		[
			6009439,
			7637386
		],
		[
			-9296,
			-2049
		],
		[
			-5673,
			816
		],
		[
			-6785,
			-639
		],
		[
			-5124,
			818
		],
		[
			-4812,
			-377
		],
		[
			-6045,
			1495
		],
		[
			-3818,
			-1803
		],
		[
			-3916,
			-284
		],
		[
			-4130,
			1088
		],
		[
			-2738,
			2543
		],
		[
			-530,
			-6398
		],
		[
			1675,
			-3094
		],
		[
			-2767,
			-3002
		],
		[
			-10449,
			561
		],
		[
			-7740,
			-2642
		],
		[
			-4130,
			2786
		],
		[
			-74,
			-2990
		],
		[
			-2118,
			510
		],
		[
			-959,
			-1577
		],
		[
			1470,
			-1657
		],
		[
			-386,
			-873
		],
		[
			-14423,
			-4814
		],
		[
			-6983,
			853
		],
		[
			-543,
			1123
		],
		[
			715,
			2374
		],
		[
			-1332,
			1692
		],
		[
			-2024,
			-1874
		],
		[
			-1045,
			-3849
		],
		[
			-5869,
			812
		],
		[
			-5632,
			4020
		],
		[
			-562,
			3581
		],
		[
			-4584,
			-1848
		],
		[
			-3710,
			420
		],
		[
			-6070,
			2168
		],
		[
			-3565,
			3151
		],
		[
			-2649,
			-2397
		],
		[
			878,
			-3534
		],
		[
			6643,
			-3663
		],
		[
			-1685,
			-2143
		],
		[
			635,
			-2073
		],
		[
			-120,
			-736
		],
		[
			-355,
			-2194
		],
		[
			883,
			-2229
		],
		[
			-3883,
			-2743
		],
		[
			-12245,
			3291
		],
		[
			-5262,
			2694
		],
		[
			-1139,
			1181
		],
		[
			-2128,
			2207
		],
		[
			-10642,
			4797
		],
		[
			-6532,
			973
		],
		[
			-4084,
			2858
		],
		[
			-2781,
			531
		],
		[
			-9191,
			-3412
		],
		[
			-2114,
			-2205
		],
		[
			2731,
			-5749
		],
		[
			2212,
			-4658
		],
		[
			3053,
			-2457
		],
		[
			-619,
			-4150
		],
		[
			-4526,
			769
		],
		[
			-3297,
			1748
		],
		[
			-857,
			1629
		],
		[
			1313,
			2133
		],
		[
			-845,
			2387
		],
		[
			-2445,
			1024
		],
		[
			-811,
			1414
		],
		[
			-2060,
			3092
		],
		[
			-12144,
			7295
		],
		[
			-4482,
			6846
		],
		[
			34,
			4817
		],
		[
			981,
			2037
		],
		[
			6643,
			2287
		],
		[
			3117,
			-2619
		],
		[
			1588,
			-6053
		],
		[
			2892,
			-1674
		],
		[
			2183,
			228
		],
		[
			777,
			2440
		],
		[
			-3981,
			6053
		],
		[
			-1618,
			2726
		],
		[
			455,
			2209
		],
		[
			3981,
			4768
		],
		[
			1634,
			3266
		],
		[
			811,
			1621
		],
		[
			3519,
			1820
		],
		[
			8657,
			6299
		],
		[
			2858,
			5903
		],
		[
			-505,
			4049
		],
		[
			6746,
			3845
		],
		[
			1197,
			4330
		],
		[
			3476,
			2131
		],
		[
			7938,
			1908
		],
		[
			2599,
			5432
		],
		[
			-916,
			1780
		],
		[
			-4425,
			2564
		],
		[
			1510,
			676
		],
		[
			279,
			1929
		],
		[
			-5097,
			4081
		],
		[
			-10484,
			2849
		],
		[
			-1286,
			1098
		],
		[
			-7128,
			5363
		],
		[
			344,
			2164
		],
		[
			3476,
			3805
		],
		[
			-2648,
			5980
		],
		[
			-286,
			5204
		]
	],
	[
		[
			6078514,
			7733307
		],
		[
			4758,
			-1572
		],
		[
			10525,
			-36
		],
		[
			7017,
			-1426
		],
		[
			1883,
			-2874
		],
		[
			4455,
			-1617
		],
		[
			1197,
			-2592
		],
		[
			3394,
			-3378
		]
	],
	[
		[
			5803767,
			7663476
		],
		[
			-744,
			-252
		],
		[
			-649,
			695
		],
		[
			790,
			860
		],
		[
			603,
			-318
		],
		[
			558,
			-295
		],
		[
			-41,
			-514
		],
		[
			-517,
			-176
		]
	],
	[
		[
			5717523,
			7644356
		],
		[
			733,
			-1971
		],
		[
			-975,
			-5237
		],
		[
			5629,
			-2346
		],
		[
			4437,
			-4897
		],
		[
			4208,
			-2313
		],
		[
			2955,
			-3068
		],
		[
			655,
			-2980
		],
		[
			2766,
			-390
		],
		[
			-913,
			2408
		],
		[
			2129,
			582
		],
		[
			4320,
			-1772
		],
		[
			2377,
			-3673
		],
		[
			-149,
			-3002
		],
		[
			-1374,
			-1816
		],
		[
			-378,
			-425
		],
		[
			-15601,
			-5883
		],
		[
			-2578,
			-1546
		],
		[
			-1881,
			-2527
		],
		[
			5759,
			-1427
		],
		[
			5182,
			2497
		],
		[
			5880,
			1565
		],
		[
			6940,
			-804
		],
		[
			4872,
			1092
		],
		[
			3930,
			-251
		],
		[
			4646,
			-2538
		],
		[
			2045,
			-4841
		],
		[
			3674,
			-3297
		],
		[
			1720,
			-6002
		],
		[
			2828,
			-2448
		],
		[
			-509,
			-2830
		],
		[
			-3083,
			-2688
		],
		[
			945,
			-3887
		],
		[
			-2030,
			-1438
		],
		[
			-1969,
			-3633
		],
		[
			-2329,
			1028
		],
		[
			-4700,
			5524
		],
		[
			410,
			1590
		],
		[
			3474,
			3177
		],
		[
			-579,
			4046
		],
		[
			-1704,
			3139
		],
		[
			-12202,
			5456
		],
		[
			-2226,
			-3956
		],
		[
			3983,
			-2112
		],
		[
			-542,
			-1652
		],
		[
			1829,
			-1426
		],
		[
			445,
			-2785
		],
		[
			870,
			-2123
		],
		[
			-489,
			-2602
		],
		[
			-2579,
			-3950
		],
		[
			2363,
			-419
		],
		[
			6327,
			1160
		],
		[
			2224,
			-994
		],
		[
			1254,
			-3367
		],
		[
			619,
			-1663
		],
		[
			-402,
			-2831
		],
		[
			-1843,
			64
		],
		[
			-4485,
			-3517
		],
		[
			-2991,
			-388
		],
		[
			-1824,
			-1856
		],
		[
			-3345,
			1349
		],
		[
			-4641,
			372
		],
		[
			-8587,
			-705
		],
		[
			-3601,
			-1567
		],
		[
			-2683,
			-2204
		],
		[
			899,
			-4153
		],
		[
			-2143,
			-5469
		],
		[
			-5007,
			-2935
		],
		[
			-1903,
			-1115
		],
		[
			-5342,
			-2894
		],
		[
			-4632,
			-1309
		],
		[
			-3028,
			1112
		],
		[
			1043,
			1186
		],
		[
			-1104,
			944
		],
		[
			-7230,
			961
		],
		[
			-1354,
			1115
		],
		[
			-2057,
			1693
		],
		[
			-6527,
			436
		]
	],
	[
		[
			5589569,
			7645399
		],
		[
			794,
			-2015
		],
		[
			2436,
			1124
		],
		[
			4370,
			221
		],
		[
			2900,
			-384
		],
		[
			200,
			-1311
		],
		[
			10147,
			878
		],
		[
			2920,
			2264
		],
		[
			-10,
			2425
		],
		[
			2444,
			1091
		],
		[
			2987,
			5187
		],
		[
			502,
			3124
		],
		[
			7783,
			-2368
		],
		[
			14336,
			137
		],
		[
			2456,
			2089
		],
		[
			17476,
			2855
		],
		[
			1371,
			1420
		],
		[
			4503,
			1663
		],
		[
			2323,
			-561
		],
		[
			4950,
			-1196
		],
		[
			3668,
			1078
		],
		[
			3469,
			-519
		],
		[
			10023,
			-3354
		],
		[
			9625,
			1880
		],
		[
			7179,
			-2775
		],
		[
			3908,
			-3473
		],
		[
			-821,
			-5525
		],
		[
			-1905,
			-3771
		],
		[
			1292,
			-1320
		],
		[
			2266,
			150
		],
		[
			2671,
			224
		],
		[
			1691,
			-281
		]
	],
	[
		[
			5698300,
			7668523
		],
		[
			-1252,
			-1913
		],
		[
			-123,
			-1178
		],
		[
			-823,
			-768
		],
		[
			-906,
			850
		],
		[
			-44,
			935
		],
		[
			1024,
			838
		],
		[
			-553,
			623
		],
		[
			-3218,
			371
		],
		[
			-3172,
			-538
		],
		[
			-2512,
			352
		],
		[
			511,
			665
		],
		[
			2367,
			966
		],
		[
			1623,
			207
		],
		[
			1881,
			-576
		],
		[
			2376,
			-7
		],
		[
			2271,
			-378
		],
		[
			550,
			-449
		]
	],
	[
		[
			5752070,
			7588398
		],
		[
			-1000,
			-886
		],
		[
			-1070,
			2360
		],
		[
			1047,
			926
		],
		[
			942,
			-638
		],
		[
			-424,
			-634
		],
		[
			505,
			-1128
		]
	],
	[
		[
			5763229,
			7605731
		],
		[
			-1134,
			-117
		],
		[
			-1170,
			774
		],
		[
			843,
			541
		],
		[
			1351,
			-548
		],
		[
			110,
			-650
		]
	]
];
var NUTS_RG_03M_2016_4326_LEVL_2_UK = {
	type: type,
	transform: transform$1,
	objects: objects,
	arcs: arcs
};

function identity$1(x) {
  return x;
}

function transform(transform) {
  if (transform == null) return identity$1;
  var x0,
      y0,
      kx = transform.scale[0],
      ky = transform.scale[1],
      dx = transform.translate[0],
      dy = transform.translate[1];
  return function(input, i) {
    if (!i) x0 = y0 = 0;
    var j = 2, n = input.length, output = new Array(n);
    output[0] = (x0 += input[0]) * kx + dx;
    output[1] = (y0 += input[1]) * ky + dy;
    while (j < n) output[j] = input[j], ++j;
    return output;
  };
}

function reverse(array, n) {
  var t, j = array.length, i = j - n;
  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;
}

function feature$1(topology, o) {
  if (typeof o === "string") o = topology.objects[o];
  return o.type === "GeometryCollection"
      ? {type: "FeatureCollection", features: o.geometries.map(function(o) { return feature$2(topology, o); })}
      : feature$2(topology, o);
}

function feature$2(topology, o) {
  var id = o.id,
      bbox = o.bbox,
      properties = o.properties == null ? {} : o.properties,
      geometry = object(topology, o);
  return id == null && bbox == null ? {type: "Feature", properties: properties, geometry: geometry}
      : bbox == null ? {type: "Feature", id: id, properties: properties, geometry: geometry}
      : {type: "Feature", id: id, bbox: bbox, properties: properties, geometry: geometry};
}

function object(topology, o) {
  var transformPoint = transform(topology.transform),
      arcs = topology.arcs;

  function arc(i, points) {
    if (points.length) points.pop();
    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {
      points.push(transformPoint(a[k], k));
    }
    if (i < 0) reverse(points, n);
  }

  function point(p) {
    return transformPoint(p);
  }

  function line(arcs) {
    var points = [];
    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);
    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.
    return points;
  }

  function ring(arcs) {
    var points = line(arcs);
    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.
    return points;
  }

  function polygon(arcs) {
    return arcs.map(ring);
  }

  function geometry(o) {
    var type = o.type, coordinates;
    switch (type) {
      case "GeometryCollection": return {type: type, geometries: o.geometries.map(geometry)};
      case "Point": coordinates = point(o.coordinates); break;
      case "MultiPoint": coordinates = o.coordinates.map(point); break;
      case "LineString": coordinates = line(o.arcs); break;
      case "MultiLineString": coordinates = o.arcs.map(line); break;
      case "Polygon": coordinates = polygon(o.arcs); break;
      case "MultiPolygon": coordinates = o.arcs.map(polygon); break;
      default: return null;
    }
    return {type: type, coordinates: coordinates};
  }

  return geometry(o);
}

/**
 * @module helpers
 */
/**
 * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.
 *
 * @name feature
 * @param {Geometry} geometry input geometry
 * @param {Object} [properties={}] an Object of key-value pairs to add as properties
 * @param {Object} [options={}] Optional Parameters
 * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature
 * @param {string|number} [options.id] Identifier associated with the Feature
 * @returns {Feature} a GeoJSON Feature
 * @example
 * var geometry = {
 *   "type": "Point",
 *   "coordinates": [110, 50]
 * };
 *
 * var feature = turf.feature(geometry);
 *
 * //=feature
 */
function feature(geom, properties, options) {
    if (options === void 0) { options = {}; }
    var feat = { type: "Feature" };
    if (options.id === 0 || options.id) {
        feat.id = options.id;
    }
    if (options.bbox) {
        feat.bbox = options.bbox;
    }
    feat.properties = properties || {};
    feat.geometry = geom;
    return feat;
}
/**
 * Creates a {@link Point} {@link Feature} from a Position.
 *
 * @name point
 * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)
 * @param {Object} [properties={}] an Object of key-value pairs to add as properties
 * @param {Object} [options={}] Optional Parameters
 * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature
 * @param {string|number} [options.id] Identifier associated with the Feature
 * @returns {Feature<Point>} a Point feature
 * @example
 * var point = turf.point([-75.343, 39.984]);
 *
 * //=point
 */
function point(coordinates, properties, options) {
    if (options === void 0) { options = {}; }
    if (!coordinates) {
        throw new Error("coordinates is required");
    }
    if (!Array.isArray(coordinates)) {
        throw new Error("coordinates must be an Array");
    }
    if (coordinates.length < 2) {
        throw new Error("coordinates must be at least 2 numbers long");
    }
    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {
        throw new Error("coordinates must contain numbers");
    }
    var geom = {
        type: "Point",
        coordinates: coordinates,
    };
    return feature(geom, properties, options);
}
/**
 * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.
 *
 * @name featureCollection
 * @param {Feature[]} features input features
 * @param {Object} [options={}] Optional Parameters
 * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature
 * @param {string|number} [options.id] Identifier associated with the Feature
 * @returns {FeatureCollection} FeatureCollection of Features
 * @example
 * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});
 * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});
 * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});
 *
 * var collection = turf.featureCollection([
 *   locationA,
 *   locationB,
 *   locationC
 * ]);
 *
 * //=collection
 */
function featureCollection(features, options) {
    if (options === void 0) { options = {}; }
    var fc = { type: "FeatureCollection" };
    if (options.id) {
        fc.id = options.id;
    }
    if (options.bbox) {
        fc.bbox = options.bbox;
    }
    fc.features = features;
    return fc;
}
/**
 * isNumber
 *
 * @param {*} num Number to validate
 * @returns {boolean} true/false
 * @example
 * turf.isNumber(123)
 * //=true
 * turf.isNumber('foo')
 * //=false
 */
function isNumber(num) {
    return !isNaN(num) && num !== null && !Array.isArray(num);
}

/**
 * Callback for coordEach
 *
 * @callback coordEachCallback
 * @param {Array<number>} currentCoord The current coordinate being processed.
 * @param {number} coordIndex The current index of the coordinate being processed.
 * @param {number} featureIndex The current index of the Feature being processed.
 * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.
 * @param {number} geometryIndex The current index of the Geometry being processed.
 */

/**
 * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()
 *
 * @name coordEach
 * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object
 * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)
 * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.
 * @returns {void}
 * @example
 * var features = turf.featureCollection([
 *   turf.point([26, 37], {"foo": "bar"}),
 *   turf.point([36, 53], {"hello": "world"})
 * ]);
 *
 * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {
 *   //=currentCoord
 *   //=coordIndex
 *   //=featureIndex
 *   //=multiFeatureIndex
 *   //=geometryIndex
 * });
 */
function coordEach(geojson, callback, excludeWrapCoord) {
  // Handles null Geometry -- Skips this GeoJSON
  if (geojson === null) return;
  var j,
    k,
    l,
    geometry,
    stopG,
    coords,
    geometryMaybeCollection,
    wrapShrink = 0,
    coordIndex = 0,
    isGeometryCollection,
    type = geojson.type,
    isFeatureCollection = type === "FeatureCollection",
    isFeature = type === "Feature",
    stop = isFeatureCollection ? geojson.features.length : 1;

  // This logic may look a little weird. The reason why it is that way
  // is because it's trying to be fast. GeoJSON supports multiple kinds
  // of objects at its root: FeatureCollection, Features, Geometries.
  // This function has the responsibility of handling all of them, and that
  // means that some of the `for` loops you see below actually just don't apply
  // to certain inputs. For instance, if you give this just a
  // Point geometry, then both loops are short-circuited and all we do
  // is gradually rename the input until it's called 'geometry'.
  //
  // This also aims to allocate as few resources as possible: just a
  // few numbers and booleans, rather than any temporary arrays as would
  // be required with the normalization approach.
  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {
    geometryMaybeCollection = isFeatureCollection
      ? geojson.features[featureIndex].geometry
      : isFeature
      ? geojson.geometry
      : geojson;
    isGeometryCollection = geometryMaybeCollection
      ? geometryMaybeCollection.type === "GeometryCollection"
      : false;
    stopG = isGeometryCollection
      ? geometryMaybeCollection.geometries.length
      : 1;

    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {
      var multiFeatureIndex = 0;
      var geometryIndex = 0;
      geometry = isGeometryCollection
        ? geometryMaybeCollection.geometries[geomIndex]
        : geometryMaybeCollection;

      // Handles null Geometry -- Skips this geometry
      if (geometry === null) continue;
      coords = geometry.coordinates;
      var geomType = geometry.type;

      wrapShrink =
        excludeWrapCoord &&
        (geomType === "Polygon" || geomType === "MultiPolygon")
          ? 1
          : 0;

      switch (geomType) {
        case null:
          break;
        case "Point":
          if (
            callback(
              coords,
              coordIndex,
              featureIndex,
              multiFeatureIndex,
              geometryIndex
            ) === false
          )
            return false;
          coordIndex++;
          multiFeatureIndex++;
          break;
        case "LineString":
        case "MultiPoint":
          for (j = 0; j < coords.length; j++) {
            if (
              callback(
                coords[j],
                coordIndex,
                featureIndex,
                multiFeatureIndex,
                geometryIndex
              ) === false
            )
              return false;
            coordIndex++;
            if (geomType === "MultiPoint") multiFeatureIndex++;
          }
          if (geomType === "LineString") multiFeatureIndex++;
          break;
        case "Polygon":
        case "MultiLineString":
          for (j = 0; j < coords.length; j++) {
            for (k = 0; k < coords[j].length - wrapShrink; k++) {
              if (
                callback(
                  coords[j][k],
                  coordIndex,
                  featureIndex,
                  multiFeatureIndex,
                  geometryIndex
                ) === false
              )
                return false;
              coordIndex++;
            }
            if (geomType === "MultiLineString") multiFeatureIndex++;
            if (geomType === "Polygon") geometryIndex++;
          }
          if (geomType === "Polygon") multiFeatureIndex++;
          break;
        case "MultiPolygon":
          for (j = 0; j < coords.length; j++) {
            geometryIndex = 0;
            for (k = 0; k < coords[j].length; k++) {
              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {
                if (
                  callback(
                    coords[j][k][l],
                    coordIndex,
                    featureIndex,
                    multiFeatureIndex,
                    geometryIndex
                  ) === false
                )
                  return false;
                coordIndex++;
              }
              geometryIndex++;
            }
            multiFeatureIndex++;
          }
          break;
        case "GeometryCollection":
          for (j = 0; j < geometry.geometries.length; j++)
            if (
              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===
              false
            )
              return false;
          break;
        default:
          throw new Error("Unknown Geometry Type");
      }
    }
  }
}

/**
 * Takes one or more features and calculates the centroid using the mean of all vertices.
 * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.
 *
 * @name centroid
 * @param {GeoJSON} geojson GeoJSON to be centered
 * @param {Object} [options={}] Optional Parameters
 * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties
 * @returns {Feature<Point>} the centroid of the input features
 * @example
 * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);
 *
 * var centroid = turf.centroid(polygon);
 *
 * //addToMap
 * var addToMap = [polygon, centroid]
 */
function centroid(geojson, options) {
    if (options === void 0) { options = {}; }
    var xSum = 0;
    var ySum = 0;
    var len = 0;
    coordEach(geojson, function (coord) {
        xSum += coord[0];
        ySum += coord[1];
        len++;
    }, true);
    return point([xSum / len, ySum / len], options.properties);
}

/**
 * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.
 *
 * @name truncate
 * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.
 * @param {Object} [options={}] Optional parameters
 * @param {number} [options.precision=6] coordinate decimal precision
 * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)
 * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)
 * @returns {GeoJSON} layer with truncated geometry
 * @example
 * var point = turf.point([
 *     70.46923055566859,
 *     58.11088890802906,
 *     1508
 * ]);
 * var options = {precision: 3, coordinates: 2};
 * var truncated = turf.truncate(point, options);
 * //=truncated.geometry.coordinates => [70.469, 58.111]
 *
 * //addToMap
 * var addToMap = [truncated];
 */
function truncate(geojson, options) {
    if (options === void 0) { options = {}; }
    // Optional parameters
    var precision = options.precision;
    var coordinates = options.coordinates;
    var mutate = options.mutate;
    // default params
    precision =
        precision === undefined || precision === null || isNaN(precision)
            ? 6
            : precision;
    coordinates =
        coordinates === undefined || coordinates === null || isNaN(coordinates)
            ? 3
            : coordinates;
    // validation
    if (!geojson)
        throw new Error("<geojson> is required");
    if (typeof precision !== "number")
        throw new Error("<precision> must be a number");
    if (typeof coordinates !== "number")
        throw new Error("<coordinates> must be a number");
    // prevent input mutation
    if (mutate === false || mutate === undefined)
        geojson = JSON.parse(JSON.stringify(geojson));
    var factor = Math.pow(10, precision);
    // Truncate Coordinates
    coordEach(geojson, function (coords) {
        truncateCoords(coords, factor, coordinates);
    });
    return geojson;
}
/**
 * Truncate Coordinates - Mutates coordinates in place
 *
 * @private
 * @param {Array<any>} coords Geometry Coordinates
 * @param {number} factor rounding factor for coordinate decimal precision
 * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)
 * @returns {Array<any>} mutated coordinates
 */
function truncateCoords(coords, factor, coordinates) {
    // Remove extra coordinates (usually elevation coordinates and more)
    if (coords.length > coordinates)
        coords.splice(coordinates, coords.length);
    // Truncate coordinate decimals
    for (var i = 0; i < coords.length; i++) {
        coords[i] = Math.round(coords[i] * factor) / factor;
    }
    return coords;
}

/**
* @module @svizzle/geo/geojson
*/

/**
 * Return a function expecting a geojson and creating or updating the provided property of all features using the provided map.
 * Note that you can pass a `key or an alternative key `key_alt` e.g. when you use ISO Alpha 2 codes and you need to identify unrecognized territories with another key.
 *
 * @function
 * @arg {object} args - Geojson object
 * @arg {string} args.key_alt - Alternative key to be found in properties in `key` is not found.
 * @arg {string} args.key - Key to be found in properties
 * @arg {object} args.map - Mapping key (string) -> string
 * @arg {function} args.mapFn - Function key (string) -> string
 * @arg {string} args.propName - Name of the property to be added to `properties`
 * @return {function} - Object -> Object
 *
 * @example
> geojson = {
	type: 'FeatureCollection',
	features: [{
		type: 'Feature',
		geometry: {
			type: 'Polygon',
			coordinates: [
				[[1, -1], [1, 1], [-1, 1], [-1, -1], [1, -1]]
			]
		},
		properties: {iso_a2: 'BF'}
	}, {
		type: 'Feature',
		geometry: {
			type: 'Polygon',
			coordinates: [
				[[2, -1], [2, 1], [0, 1], [0, -1], [2, -1]]
			]
		},
		properties: {name: 'Kosovo'}
	}, {
		type: 'Feature',
		geometry: {
			type: 'Polygon',
			coordinates: [
				[[4, -1], [2, 7], [0, 5], [0, -4], [4, -1]]
			]
		},
		properties: {iso_a2: 'FR'}
	}]
}
> keyToColor = {BF: 'red', Kosovo: 'yellow'}
> addColor = makeAddFeaturesProperty({
	propName: 'color',
	map: keyToColor,
	key: 'iso_a2',
	key_alt: 'name'
})
> coloredFeatures = addColor(geojson)
{
	type: 'FeatureCollection',
	features: [{
		type: 'Feature',
		geometry: {
			type: 'Polygon',
			coordinates: [
				[[1, -1], [1, 1], [-1, 1], [-1, -1], [1, -1]]
			]
		},
		properties: {iso_a2: 'BF', color: 'red'}
	}, {
		type: 'Feature',
		geometry: {
			type: 'Polygon',
			coordinates: [
				[[2, -1], [2, 1], [0, 1], [0, -1], [2, -1]]
			]
		},
		properties: {name: 'Kosovo', color: 'yellow'}
	}, {
		type: 'Feature',
		geometry: {
			type: 'Polygon',
			coordinates: [
				[[4, -1], [2, 7], [0, 5], [0, -4], [4, -1]]
			]
		},
		properties: {iso_a2: 'FR', color: undefined}
	}]
}
 * @since 0.5.0
 */
const makeUpdateFeaturesProperty = ({
	key_alt,
	key,
	map,
	mapFn,
	propName,
}) =>
	updateKey('features', mapWith(
		updateKey('properties', properties => {
			let propValue;

			if (map) {
				propValue = has(map, properties[key])
					? map[properties[key]]
					: has(map, properties[key_alt])
						? map[properties[key_alt]]
						: undefined;
			} else if (mapFn) {
				propValue = properties[key]
					? mapFn(properties[key])
					: properties[key_alt]
						? mapFn(properties[key_alt])
						: undefined;
			}

			return {
				...properties,
				[propName]: propValue
			}
		})
	));

/**
 * Return the a collection of centroids of the provided features, each having the correspondent feature properties.
 *
 * @function
 * @arg {array} features - Array of features
 * @return {object} collection - FeatureCollection of Point features
 *
 * @example
> makeCentroids([
	{
		type: 'Feature',
		properties: {foo: 'a'},
		geometry: {type: 'LineString', coordinates: [
			[[1, -1], [1, 1], [-1, 1], [-1, -1], [1, -1]]
		]}
	},
	{
		type: 'Feature',
		properties: {foo: 'b'},
		geometry: {type: 'LineString', coordinates: [
			[[2, -1], [2, 1], [0, 1], [0, -1], [2, -1]]
		]}
	}
])
{
	type: 'FeatureCollection',
	features: [{
		type: 'Feature',
		geometry: {type: 'Point', coordinates: [0.2, -0.2]},
		properties: {foo: 'a'}
	}, {
		type: 'Feature',
		geometry: {type: 'Point', coordinates: [1.2, -0.2]},
		properties: {foo: 'b'}
	}]
}
 * @since 0.1.0
 */
pipe([
	mapWith(feature => centroid(feature, {properties: feature.properties})),
	featureCollection
]);

// TODO use a reduce to include only items with lat/lng as defined by coordPicker

/**
 * Return a function returning a copy of the provided geojson having the geometry coordinates rounded to the given precision.
 *
 * @function
 * @arg {number} precision - coordinate decimal precision
 * @return {function} - Geojson -> Geojson
 *
 * @example
> truncateGeometry = setGeometryPrecision(4)
> point = {
	type: 'Feature',
	geometry: {type: 'Point', coordinates: [0.1234567, 0.12341]},
	properties: {name: 'a'}
}
> truncateGeometry(point)
{
	type: 'Feature',
	geometry: {type: 'Point', coordinates: [0.1234, 0.1234]},
	properties: {name: 'a'}
}
 * @since 0.1.0
 */
const setGeometryPrecision = precision =>
	geojson => truncate(geojson, {precision, mutate: false});

// TODO DOC: define FeatureCollection type

/**
* @module @svizzle/choropleth/utils
*/

const defaultGeometry = {
	bottom: 10,
	left: 10,
	right: 10,
	top: 10,
};

const truncateGeojson = setGeometryPrecision(4);

/**
 * Convert a topojson to a geojson truncating coordinates to precision 4.
 * This is quite specific to `@svizzle/choropleth` to limit the geojson weight down for performance reasons.
 * For a full conversion use:
 * ```
 * import {feature} from 'topojson-client';
 * feature(topojson, topojson.objects[id])
 * ```
 *
 * @function
 * @arg {object} topojson - the topojson to be converted to geojson
 * @arg {id} string - the id of the object to convert
 * @return {object} geojson
 *
 * @example
> const topojson = {
	'type': 'Topology',
	'transform': {
		'scale': [0.00001,0.00001],
		'translate': [-63.15364,-21.38731]
	},
	'objects': {
		'NUTS': {
			'type': 'GeometryCollection',
			'geometries': [
				{
					'type': 'Polygon',
					'arcs': [...],
					'id': 'BE',
					'properties': {...}
				}
			]
		}
	},
	'arcs': [[[6569909,7247636], [1369,-1901], ...]
}
> topoToGeo(topojson, 'NUTS')
{
	'type': 'FeatureCollection',
	'features': [
		{
			'type': 'Feature',
			'id': 'BE',
			'properties': {...},
			'geometry': {
				'type': 'Polygon',
				'coordinates': [
					[[6.3163,50.4967], ...
				]
			}
		}
	]
}
 *
 * @since 0.4.0
 */
const topoToGeo = (topojson, id) =>
	truncateGeojson(feature$1(topojson, topojson.objects[id]));

// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/

function adder() {
  return new Adder;
}

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function() {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function(y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;
    else this.s = temp.t;
  },
  valueOf: function() {
    return this.s;
  }
};

var temp = new Adder;

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = (a - av) + (b - bv);
}

var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;

var degrees = 180 / pi;
var radians = pi / 180;

var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var exp = Math.exp;
var log = Math.log;
var sin = Math.sin;
var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
var sqrt = Math.sqrt;
var tan = Math.tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function noop() {}

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function(object, stream) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};

var streamGeometryType = {
  Sphere: function(object, stream) {
    stream.sphere();
  },
  Point: function(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function(object, stream) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1, n = coordinates.length - closed, coordinate;
  stream.lineStart();
  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1, n = coordinates.length;
  stream.polygonStart();
  while (++i < n) streamLine(coordinates[i], stream, 1);
  stream.polygonEnd();
}

function geoStream(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}

function spherical(cartesian) {
  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);
  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
}

// TODO return a
function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
}

// TODO return d
function cartesianNormalizeInPlace(d) {
  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}

function compose(a, b) {

  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function(x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };

  return compose;
}

function rotationIdentity(lambda, phi) {
  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
    : rotationLambda(deltaLambda))
    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
    : rotationIdentity);
}

function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = cos(deltaPhi),
      sinDeltaPhi = sin(deltaPhi),
      cosDeltaGamma = cos(deltaGamma),
      sinDeltaGamma = sin(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = cos(phi),
        x = cos(lambda) * cosPhi,
        y = sin(lambda) * cosPhi,
        z = sin(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [
      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
      asin(k * cosDeltaGamma + y * sinDeltaGamma)
    ];
  }

  rotation.invert = function(lambda, phi) {
    var cosPhi = cos(phi),
        x = cos(lambda) * cosPhi,
        y = sin(lambda) * cosPhi,
        z = sin(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [
      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
      asin(k * cosDeltaPhi - x * sinDeltaPhi)
    ];
  };

  return rotation;
}

function rotation(rotate) {
  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;
  }

  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;
  };

  return forward;
}

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = cos(radius),
      sinRadius = sin(radius),
      step = direction * delta;
  if (t0 == null) {
    t0 = radius + direction * tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;
  }
  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);
    stream.point(point[0], point[1]);
  }
}

// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius, point) {
  point = cartesian(point), point[0] -= cosRadius;
  cartesianNormalizeInPlace(point);
  var radius = acos(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;
}

function clipBuffer() {
  var lines = [],
      line;
  return {
    point: function(x, y, m) {
      line.push([x, y, m]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: noop,
    rejoin: function() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}

function pointEqual(a, b) {
  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;
}

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection
  this.e = entry; // is an entry?
  this.v = false; // visited
  this.n = this.p = null; // next & previous
}

// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
function clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;

  segments.forEach(function(segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n, p0 = segment[0], p1 = segment[n], x;

    if (pointEqual(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream.lineStart();
        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
        stream.lineEnd();
        return;
      }
      // handle degenerate cases by moving the point
      p1[0] += 2 * epsilon;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });

  if (!subject.length) return;

  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;
    while (current.v) if ((current = current.n) === start) return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;
  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }
  a.n = b = array[0];
  b.p = a;
}

var sum = adder();

function longitude(point) {
  if (abs(point[0]) <= pi)
    return point[0];
  else
    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);
}

function polygonContains(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = sin(phi),
      normal = [sin(lambda), -cos(lambda), 0],
      angle = 0,
      winding = 0;

  sum.reset();

  if (sinPhi === 1) phi = halfPi + epsilon;
  else if (sinPhi === -1) phi = -halfPi - epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + quarterPi,
        sinPhi0 = sin(phi0),
        cosPhi0 = cos(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + quarterPi,
          sinPhi1 = sin(phi1),
          cosPhi1 = cos(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > pi,
          k = sinPhi0 * sinPhi1;

      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));
      angle += antimeridian ? delta + sign * tau : delta;

      // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = cartesianCross(cartesian(point0), cartesian(point1));
        cartesianNormalizeInPlace(arc);
        var intersection = cartesianCross(normal, arc);
        cartesianNormalizeInPlace(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }

  // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.

  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

function bisector(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      }
      return lo;
    },
    right: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;
        else lo = mid + 1;
      }
      return lo;
    }
  };
}

function ascendingComparator(f) {
  return function(d, x) {
    return ascending(f(d), x);
  };
}

bisector(ascending);

function merge(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;
  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;
    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
}

function clip(pointVisible, clipLine, interpolate, start) {
  return function(sink) {
    var line = clipLine(sink),
        ringBuffer = clipBuffer(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;

    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains(polygon, start);
        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();

      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i, n = ringSegments.length, m,
          segment,
          point;

      ring.pop();
      polygon.push(ring);
      ring = null;

      if (!n) return;

      // No intersections.
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
          sink.lineEnd();
        }
        return;
      }

      // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?
      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
}

// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])
       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);
}

var clipAntimeridian = clip(
  function() { return true; },
  clipAntimeridianLine,
  clipAntimeridianInterpolate,
  [-pi, -halfPi]
);

// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? pi : -pi,
          delta = abs(lambda1 - lambda0);
      if (abs(delta - pi) < epsilon) { // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian
        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies
        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }
      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = sin(lambda0 - lambda1);
  return abs(sinLambda0Lambda1) > epsilon
      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)
          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))
          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
      : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * halfPi;
    stream.point(-pi, phi);
    stream.point(0, phi);
    stream.point(pi, phi);
    stream.point(pi, 0);
    stream.point(pi, -phi);
    stream.point(0, -phi);
    stream.point(-pi, -phi);
    stream.point(-pi, 0);
    stream.point(-pi, phi);
  } else if (abs(from[0] - to[0]) > epsilon) {
    var lambda = from[0] < to[0] ? pi : -pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}

function clipCircle(radius) {
  var cr = cos(radius),
      delta = 6 * radians,
      smallRadius = cr > 0,
      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    circleStream(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return cos(lambda) * cos(phi) > cr;
  }

  // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.
  function clipLine(stream) {
    var point0, // previous point
        c0, // code for previous point
        v0, // visibility of previous point
        v00, // visibility of first point
        clean; // no intersections
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius
              ? v ? 0 : code(lambda, phi)
              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart();
        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))
            point1[2] = 1;
        }
        if (v !== v0) {
          clean = 0;
          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t;
          // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.
          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1], 3);
            }
          }
        }
        if (v && (!point0 || !pointEqual(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function() {
        return clean | ((v00 && v0) << 1);
      }
    };
  }

  // Intersects the great circle between a and b with the clip circle.
  function intersect(a, b, two) {
    var pa = cartesian(a),
        pb = cartesian(b);

    // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
    var n1 = [1, 0, 0], // normal
        n2 = cartesianCross(pa, pb),
        n2n2 = cartesianDot(n2, n2),
        n1n2 = n2[0], // cartesianDot(n1, n2),
        determinant = n2n2 - n1n2 * n1n2;

    // Two polar points.
    if (!determinant) return !two && a;

    var c1 =  cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = cartesianCross(n1, n2),
        A = cartesianScale(n1, c1),
        B = cartesianScale(n2, c2);
    cartesianAddInPlace(A, B);

    // Solve |p(t)|^2 = 1.
    var u = n1xn2,
        w = cartesianDot(A, u),
        uu = cartesianDot(u, u),
        t2 = w * w - uu * (cartesianDot(A, A) - 1);

    if (t2 < 0) return;

    var t = sqrt(t2),
        q = cartesianScale(u, (-w - t) / uu);
    cartesianAddInPlace(q, A);
    q = spherical(q);

    if (!two) return q;

    // Two intersection points.
    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;

    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = abs(delta - pi) < epsilon,
        meridian = polar || delta < epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

    // Check that the first point is between a and b.
    if (meridian
        ? polar
          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)
          : phi0 <= q[1] && q[1] <= phi1
        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = cartesianScale(u, (-w + t) / uu);
      cartesianAddInPlace(q1, A);
      return [q, spherical(q1)];
    }
  }

  // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.
  function code(lambda, phi) {
    var r = smallRadius ? radius : pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right
    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above
    return code;
  }

  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);
}

function clipLine(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;

  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;
  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;
  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;
  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;
  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}

var clipMax = 1e9, clipMin = -clipMax;

// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {

  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0, a1 = 0;
    if (from == null
        || (a = corner(from, direction)) !== (a1 = corner(to, direction))
        || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3
        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1
        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0
        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb
        : ca === 0 ? b[1] - a[1]
        : ca === 1 ? a[0] - b[0]
        : ca === 2 ? a[1] - b[1]
        : b[0] - a[0];
  }

  return function(stream) {
    var activeStream = stream,
        bufferStream = clipBuffer(),
        segments,
        polygon,
        ring,
        x__, y__, v__, // first point
        x_, y_, v_, // previous point
        first,
        clean;

    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
        }
      }

      return winding;
    }

    // Buffer geometry within a polygon and then clip it en masse.
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = merge(segments)).length;
      if (cleanInside || visible) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible) {
          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }

    // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.
    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);
      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;
        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);
        else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
          if (clipLine(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }
            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }
      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}

function identity(x) {
  return x;
}

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;

var boundsStream = {
  point: boundsPoint,
  lineStart: noop,
  lineEnd: noop,
  polygonStart: noop,
  polygonEnd: noop,
  result: function() {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

function transformer(methods) {
  return function(stream) {
    var s = new TransformStream;
    for (var key in methods) s[key] = methods[key];
    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x, y) { this.stream.point(x, y); },
  sphere: function() { this.stream.sphere(); },
  lineStart: function() { this.stream.lineStart(); },
  lineEnd: function() { this.stream.lineEnd(); },
  polygonStart: function() { this.stream.polygonStart(); },
  polygonEnd: function() { this.stream.polygonEnd(); }
};

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  geoStream(object, projection.stream(boundsStream));
  fitBounds(boundsStream.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function(b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function(b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function(b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

var maxDepth = 16, // maximum depth of subdivision
    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)

function resample(project, delta2) {
  return +delta2 ? resample$1(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return transformer({
    point: function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample$1(project, delta2) {

  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = sqrt(a * a + b * b + c * c),
          phi2 = asin(c /= m),
          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 // perpendicular projected distance
          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
        lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = cartesian([lambda, phi]), p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}

var transformRadians = transformer({
  point: function(x, y) {
    this.stream.point(x * radians, y * radians);
  }
});

function transformRotate(rotate) {
  return transformer({
    point: function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx; y *= sy;
    return [dx + k * x, dy - k * y];
  }
  transform.invert = function(x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };
  return transform;
}

function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  var cosAlpha = cos(alpha),
      sinAlpha = sin(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;
  function transform(x, y) {
    x *= sx; y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }
  transform.invert = function(x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };
  return transform;
}

function projection(project) {
  return projectionMutator(function() { return project; })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150, // scale
      x = 480, y = 250, // translate
      lambda = 0, phi = 0, // center
      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
      alpha = 0, // post-rotate angle
      sx = 1, // reflectX
      sy = 1, // reflectX
      theta = null, preclip = clipAntimeridian, // pre-clip angle
      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent
      delta2 = 0.5, // precision
      projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * radians, point[1] * radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * degrees, point[1] * degrees];
  }

  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;
  };

  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function(_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function(_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];
  };

  projection.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];
  };

  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;
  };

  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };

  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };

  projection.precision = function(_) {
    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);
  };

  projection.fitExtent = function(extent, object) {
    return fitExtent(projection, extent, object);
  };

  projection.fitSize = function(size, object) {
    return fitSize(projection, size, object);
  };

  projection.fitWidth = function(width, object) {
    return fitWidth(projection, width, object);
  };

  projection.fitHeight = function(height, object) {
    return fitHeight(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = compose(project, transform);
    projectRotateTransform = compose(rotate, projectTransform);
    projectResample = resample(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function() {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}

function mercatorRaw(lambda, phi) {
  return [lambda, log(tan((halfPi + phi) / 2))];
}

mercatorRaw.invert = function(x, y) {
  return [x, 2 * atan(exp(y)) - halfPi];
};

function mercator() {
  return mercatorProjection(mercatorRaw)
      .scale(961 / tau);
}

function mercatorProjection(project) {
  var m = projection(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null, y0, x1, y1; // clip extent

  m.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function(_) {
    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = pi * scale(),
        t = m(rotation(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null
        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = sqrt(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;
  return [
    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
  ];
}

equalEarthRaw.invert = function(x, y) {
  var l = y, l2 = l * l, l6 = l2 * l2 * l2;
  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if (abs(delta) < epsilon2) break;
  }
  return [
    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),
    asin(sin(l) / M)
  ];
};

function projectionFn() {
  return projection(equalEarthRaw)
      .scale(177.158);
}

export { projection as A, acos as B, mercator as C, makeUpdateFeaturesProperty as D, defaultGeometry as E, NUTS_RG_03M_2016_4326_LEVL_2_UK as N, pi as a, asin as b, cos as c, degrees as d, abs as e, epsilon as f, sqrt as g, atan2 as h, sign as i, halfPi as j, atan as k, log as l, mercatorProjection as m, exp as n, topoToGeo as o, projectionMutator as p, projectionFn as q, radians as r, sin as s, tan as t, adder as u, noop as v, tau as w, geoStream as x, boundsStream as y, identity as z };
