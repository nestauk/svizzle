import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, z as svg_element, f as claim_element, g as children, b as detach_dev, j as attr_dev, k as add_location, l as insert_dev, n as noop } from './client.ed49fe48.js';

/* ../../components/ui/src/icons/feather/Download.svelte generated by Svelte v3.38.2 */

const file = "../../components/ui/src/icons/feather/Download.svelte";

function create_fragment(ctx) {
	let path;
	let polyline;
	let line;

	const block = {
		c: function create() {
			path = svg_element("path");
			polyline = svg_element("polyline");
			line = svg_element("line");
			this.h();
		},
		l: function claim(nodes) {
			path = claim_element(nodes, "path", { d: true }, 1);
			children(path).forEach(detach_dev);
			polyline = claim_element(nodes, "polyline", { points: true }, 1);
			children(polyline).forEach(detach_dev);
			line = claim_element(nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path, "d", "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4");
			add_location(path, file, 1, 0, 34);
			attr_dev(polyline, "points", "7 10 12 15 17 10");
			add_location(polyline, file, 1, 59, 93);
			attr_dev(line, "x1", "12");
			attr_dev(line, "y1", "15");
			attr_dev(line, "x2", "12");
			attr_dev(line, "y2", "3");
			add_location(line, file, 1, 106, 140);
		},
		m: function mount(target, anchor) {
			insert_dev(target, path, anchor);
			insert_dev(target, polyline, anchor);
			insert_dev(target, line, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(path);
			if (detaching) detach_dev(polyline);
			if (detaching) detach_dev(line);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Download", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Download> was created with unknown prop '${key}'`);
	});

	return [];
}

class Download extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Download",
			options,
			id: create_fragment.name
		});
	}
}

export { Download as D };
